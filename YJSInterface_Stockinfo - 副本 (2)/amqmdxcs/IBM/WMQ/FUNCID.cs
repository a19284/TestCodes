namespace IBM.WMQ
{
    using System;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Sequential, Size=1)]
    public struct FUNCID
    {
        public const uint DUMMY = 0;
        public const uint HOBJADAPTER_TOSTRING = 1;
        public const uint MQAPI_INITIALIZE = 2;
        public const uint MQAPI_WRITESTRUCT = 3;
        public const uint MQAPI_READSTRUCT = 4;
        public const uint MQASYNCSTATUS_CLEARINVALIDFIELDS = 5;
        public const uint MQASYNCSTATUS_GETVERSIONLENGTH = 6;
        public const uint MQASYNCSTATUS_WRITESTRUCT = 7;
        public const uint MQASYNCSTATUS_READSTRUCT = 8;
        public const uint MQASYNC_MESSAGE_GETSEGMENTLENGTH = 9;
        public const uint MQASYNC_MESSAGE_READSTRUCT = 10;
        public const uint MQAUTHENTICATIONINFORMATIONRECORD_DISPOSE = 11;
        public const uint MQMESSAGE_WRITESHORT = 12;
        public const uint MQMESSAGE_READUINT2 = 13;
        public const uint MQMESSAGE_CONVERTHEXTOBYTE = 14;
        public const uint MQQUEUEMANAGER_DISCONNECT = 15;
        public const uint MQSESSION_ACCESSQUEUEMANAGER = 0x10;
        public const uint MQSESSION_ACCESSMESSAGE = 0x11;
        public const uint MQSESSION_ACCESSPUTMESSAGEOPTIONS = 0x12;
        public const uint MQSESSION_ACCESSGETMESSAGEOPTIONS = 0x13;
        public const uint MQCAUT_WRITESTRUCT = 20;
        public const uint MQCHANNELDEFINITION_SETDEFAULTDEFINITION = 0x15;
        public const uint MQCHANNELDEFINITION_FINDBYTE = 0x16;
        public const uint MQCHANNELDEFINITION_PARSEEXITSLIST = 0x17;
        public const uint MQCHANNELDEFINITION_PARSEEXITSLISTS = 0x18;
        public const uint MQCHANNELDEFINITION_EQUALS = 0x19;
        public const uint MQCHANNELDEFINITION_COMPARE = 0x1a;
        public const uint MQCHANNELDEFINITION_COMPAREINTARR = 0x1b;
        public const uint MQCHANNELEXITHANDLER_LOADEXIT = 0x1c;
        public const uint MQCHANNELEXITHANDLER_INVOKEEXITS = 0x1d;
        public const uint MQCHANNELEXITHANDLER_LOADEXITS = 30;
        public const uint MQCHANNELEXITHANDLER_INITIALIZEEXITS = 0x1f;
        public const uint MQCHANNELEXITHANDLER_INITSECURITY = 0x20;
        public const uint MQCHANNELEXITHANDLER_PROCESSSECURITY = 0x21;
        public const uint MQCHANNELEXITHANDLER_PROCESSSENDEXITS = 0x22;
        public const uint MQCHANNELEXITHANDLER_PROCESSRECEIVEEXITS = 0x23;
        public const uint MQCHANNELEXITHANDLER_TERMEXITS = 0x24;
        public const uint MQCHANNELEXITHANDLER_GETQUALIFIEDEXITPATH = 0x25;
        public const uint MQCHANNELLISTENTRY_CHECKUPDATEREQUIRED = 0x26;
        public const uint MQCHANNELLISTENTRY_ADDCHANNELENTRY = 0x27;
        public const uint MQCHANNELLISTENTRY_ORDERWEIGHTEDCHANNELENTRY = 40;
        public const uint MQCHANNELLISTENTRY_SELECTCHANNELENTRY = 0x29;
        public const uint MQCHANNELLISTENTRY_SELECTNAMEDENTRY = 0x2a;
        public const uint MQCHANNELLISTENTRY_SELECTRANDOMENTRY = 0x2b;
        public const uint MQCHANNELTABLE_READUINT = 0x2c;
        public const uint MQCHANNELTABLE_FINDFIRSTCHANNEL = 0x2d;
        public const uint MQCHANNELTABLE_FINDCHANNEL = 0x2e;
        public const uint MQCHANNELTABLE_GETCHANNELDEFINITION = 0x2f;
        public const uint MQCHANNELTABLE_GETSTREAM = 0x30;
        public const uint MQCHANNELTABLE_CREATECHANNELENTRYLISTS = 0x31;
        public const uint MQCLIENTCFG_FINDANDPARSE = 50;
        public const uint MQCLIENTCFG_OVERWRITEFROMENVIRONMENTVARIABLES = 0x33;
        public const uint MQCLIENTCFG_OVERWRITEFROMDOTNETCONFIGURATIONFILE = 0x34;
        public const uint MQCLIENTCFG_GETSTRINGVALUE = 0x35;
        public const uint MQCLIENTCFG_GETINTVALUE = 0x36;
        public const uint MQCLIENTCFG_GETBOOLVALUE = 0x37;
        public const uint STRINGCFGPROPERTY_PARSEVALUE = 0x38;
        public const uint INTCFGPROPERTY_PARSEVALUE = 0x39;
        public const uint BOOLCFGPROPERTY_PARSEVALUE = 0x3a;
        public const uint MQCLIENTCFG_FINDCLIENTINI = 0x3b;
        public const uint MQCLIENTCONNECTOR_MQCONN = 60;
        public const uint MQCLIENTCONNECTOR_MQCONNX = 0x3d;
        public const uint MQCLIENTCONNECTOR_MQDISC = 0x3e;
        public const uint MQCLIENTCONNECTOR_MQOPEN = 0x3f;
        public const uint MQCLIENTCONNECTOR_MQCLOSE = 0x40;
        public const uint MQCLIENTCONNECTOR_SPIPUT = 0x41;
        public const uint MQCLIENTCONNECTOR_MQPUT = 0x42;
        public const uint MQCLIENTCONNECTOR_MQPUT1 = 0x43;
        public const uint MQCLIENTCONNECTOR_MQSTAT = 0x44;
        public const uint MQCLIENTCONNECTOR_MQSUB = 0x45;
        public const uint MQCLIENTCONNECTOR_MQSUBRQ = 70;
        public const uint MQCLIENTCONNECTOR_SPIGET = 0x47;
        public const uint MQCLIENTCONNECTOR_MQGET = 0x48;
        public const uint MQCLIENTCONNECTOR_ZSTMQGET = 0x49;
        public const uint MQCLIENTCONNECTOR_MQINQ = 0x4a;
        public const uint MQCLIENTCONNECTOR_MQSET = 0x4b;
        public const uint MQCLIENTCONNECTOR_MQBEGIN = 0x4c;
        public const uint MQCLIENTCONNECTOR_MQCMIT = 0x4d;
        public const uint MQCLIENTCONNECTOR_MQBACK = 0x4e;
        public const uint MQCLIENTCONNECTOR_SPIQUERYSPI = 0x4f;
        public const uint MQCLIENTCONNECTOR_SPIACTIVATEMESSAGE = 80;
        public const uint MQCLIENTCONNECTOR_SPISYNCPOINT = 0x51;
        public const uint MQCLIENTXACONNECTOR_MQCONN = 0x52;
        public const uint MQCLIENTXACONNECTOR_MQCONNX = 0x53;
        public const uint MQCLIENTXACONNECTOR_MQDISC = 0x54;
        public const uint MQCLIENTXACONNECTOR_MQOPEN = 0x55;
        public const uint MQCLIENTXACONNECTOR_MQCLOSE = 0x56;
        public const uint MQCLIENTXACONNECTOR_SPIPUT = 0x57;
        public const uint MQCLIENTXACONNECTOR_MQPUT = 0x58;
        public const uint MQCLIENTXACONNECTOR_MQPUT1 = 0x59;
        public const uint MQCLIENTXACONNECTOR_MQSTAT = 90;
        public const uint MQCLIENTXACONNECTOR_MQSUB = 0x5b;
        public const uint MQCLIENTXACONNECTOR_MQSUBRQ = 0x5c;
        public const uint MQCLIENTXACONNECTOR_SPIGET = 0x5d;
        public const uint MQCLIENTXACONNECTOR_MQGET = 0x5e;
        public const uint MQCLIENTXACONNECTOR_ZSTMQGET = 0x5f;
        public const uint MQCLIENTXACONNECTOR_MQINQ = 0x60;
        public const uint MQCLIENTXACONNECTOR_MQSET = 0x61;
        public const uint MQCLIENTXACONNECTOR_MQBEGIN = 0x62;
        public const uint MQCLIENTXACONNECTOR_MQCMIT = 0x63;
        public const uint MQCLIENTXACONNECTOR_SPIQUERYSPI = 100;
        public const uint MQCLIENTXACONNECTOR_MQBACK = 0x65;
        public const uint MQCLIENTXACONNECTOR_SPIACTIVATEMESSAGE = 0x66;
        public const uint MQCLIENTXACONNECTOR_SPISYNCPOINT = 0x67;
        public const uint MQCOMMSBUFFERIMPL_ADDUSECOUNT = 0x68;
        public const uint MQCOMMSBUFFERIMPL_FREE = 0x69;
        public const uint MQCOMMSBUFFERIMPL_RESET = 0x6a;
        public const uint MQCOMMSBUFFERIMPL_ENSUREINUSE = 0x6b;
        public const uint MQCOMMSBUFFERPOOL_FREEBUFFER = 0x6c;
        public const uint MQCOMMSBUFFERPOOL_ALLOCATEBUFFER = 0x6d;
        public const uint MQCONN_WRITESTRUCT = 110;
        public const uint MQCONN_READSTRUCT = 0x6f;
        public const uint MQCONNECTIONPOOL_GETCONNECTION = 0x70;
        public const uint MQCONNECTIONPOOL_REMOVECONNECTION = 0x71;
        public const uint MQCONNECTOPTIONS_CHECKVALIDITY = 0x72;
        public const uint MQDESTINATION_DISPOSE = 0x73;
        public const uint MQDESTINATION_CREATEMQOBJECTDESCRIPTOR = 0x74;
        public const uint MQDESTINATION_OPEN = 0x75;
        public const uint MQDESTINATION_VALIDATEDESTINATION = 0x76;
        public const uint MQDESTINATION_CLOSE = 0x77;
        public const uint MQDESTINATION_GET = 120;
        public const uint MQDESTINATION_GET2 = 0x79;
        public const uint MQDESTINATION_GET3 = 0x7a;
        public const uint MQDESTINATION_COPYMQMD = 0x7b;
        public const uint MQDESTINATION_PUT = 0x7c;
        public const uint MQDESTINATION_PUT2 = 0x7d;
        public const uint MQDESTINATION_PERFORMMSGPROCESSGINGBEFOREPUT = 0x7e;
        public const uint MQDESTINATION_PERFORMMSGPROCESSINGAFTERGET = 0x7f;
        public const uint MQDESTINATION_PERFORMMSGPROCESSINGAFTERPUT = 0x80;
        public const uint MQERD_WRITESTRUCT = 0x81;
        public const uint MQERD_READSTRUCT = 130;
        public const uint MQERD_ERROREXCEPTION = 0x83;
        public const uint MQFAP_ENTERCALL = 0x84;
        public const uint MQFAP_LEAVECALL = 0x85;
        public const uint MQFAP_RECEIVEDATA = 0x86;
        public const uint MQFAP_SENDDATA = 0x87;
        public const uint MQFAP_SENDCONNECT = 0x88;
        public const uint MQFAP_MAKECONNECTION = 0x89;
        public const uint MQFAP_DISCONNECT = 0x8a;
        public const uint MQFAP_MQOPEN = 0x8b;
        public const uint MQFAP_MQCLOSE = 140;
        public const uint MQFAP_WRITEINTARRAY = 0x8d;
        public const uint MQFAP_READINTARRAY = 0x8e;
        public const uint MQFAP_MQSET = 0x8f;
        public const uint MQFAP_MQINQ = 0x90;
        public const uint MQFAP_SPIPUT = 0x91;
        public const uint MQFAP_QUERYSYNCDELIVERY = 0x92;
        public const uint MQFAP_GETTAGS = 0x93;
        public const uint MQFAP_MQPUT = 0x94;
        public const uint MQFAP_MQPUT1 = 0x95;
        public const uint MQFAP_MQSTAT = 150;
        public const uint MQFAP_SPIGET = 0x97;
        public const uint MQFAP_MQGET = 0x98;
        public const uint MQFAP_ZSTMQGET = 0x99;
        public const uint MQFAP_MQCMIT = 0x9a;
        public const uint MQFAP_MQBACK = 0x9b;
        public const uint MQFAP_MQSUB = 0x9c;
        public const uint MQFAP_MQSUBRQ = 0x9d;
        public const uint MQFAP_SPIQUERYSPI = 0x9e;
        public const uint MQFAP_SPIQUERYSPI2 = 0x9f;
        public const uint MQFAP_SPIACTIVATEMESSAGE = 160;
        public const uint MQFAP_SPISYNCPOINT = 0xa1;
        public const uint MQFAPCONNECTION_CONNECT = 0xa2;
        public const uint MQFAPCONNECTION_INITSECURITYEXITS = 0xa3;
        public const uint MQFAPCONNECTION_INITSENDRCVEXITS = 0xa4;
        public const uint MQFAPCONNECTION_CREATECONNECTION = 0xa5;
        public const uint MQFAPCONNECTION_CREATENEGOTIATEDCD = 0xa6;
        public const uint MQFAPCONNECTION_COPYCONNECTIONPROPERTIES = 0xa7;
        public const uint MQFAPCONNECTION_INITIALFLOWS = 0xa8;
        public const uint MQFAPCONNECTION_GETCONNECTOPTIONS = 0xa9;
        public const uint MQFAPCONNECTION_INITIALISESESSION = 170;
        public const uint MQFAPCONNECTION_NEGOTIATESECURITY = 0xab;
        public const uint MQFAPCONNECTION_SENDCONNAUTH = 0xac;
        public const uint MQFAPCONNECTION_SUPPORTSASYNCMODE = 0xad;
        public const uint MQFAPCONNECTION_SETUPASYNCMODE = 0xae;
        public const uint MQFAPCONNECTION_SENDSTARTCONVFLOW = 0xaf;
        public const uint MQFAPCONNECTION_SENDENDCONVFLOW = 0xb0;
        public const uint MQFAPCONNECTION_SENDDATA = 0xb1;
        public const uint MQFAPCONNECTION_RECEIVEDATA = 0xb2;
        public const uint MQFAPCONNECTION_REQUESTLOCKONEXITCALL = 0xb3;
        public const uint MQFAPCONNECTION_RELEASELOCKONEXITCALL = 180;
        public const uint MQFAPCONNECTION_SENDHEARTBEAT = 0xb5;
        public const uint MQFAPCONNECTION_DELIVERDATA = 0xb6;
        public const uint MQFAPCONNECTION_DELIVEREXCHANGEREPLY = 0xb7;
        public const uint MQFAPCONNECTION_EXCHANGEDATA = 0xb8;
        public const uint MQFAPCONNECTION_ALLOCATEREQUESTENTRY = 0xb9;
        public const uint MQFAPCONNECTION_RELEASEREQUESTENTRY = 0xba;
        public const uint MQFAPCONNECTION_DISCONNECT = 0xbb;
        public const uint MQFAPCONNECTION_CLOSE = 0xbc;
        public const uint MQFAPCONNECTION_ISCONNECTED = 0xbd;
        public const uint MQFAPCONNECTION_ASYNCFAILURENOTIFY = 190;
        public const uint MQFAPCONNECTION_DISCONNECT2 = 0xbf;
        public const uint MQFAPCONNECTION_ASYNCFAILURENOTIFYALL = 0xc0;
        public const uint MQFAPMQCNO_WRITESTRUCT = 0xc1;
        public const uint MQFAPMQCNO_READSTRUCT = 0xc2;
        public const uint MQGETMESSAGEOPTIONS_CLEARINVALIDFIELDS = 0xc3;
        public const uint MQGETMESSAGEOPTIONS_GETVERSIONLENGTH = 0xc4;
        public const uint MQGETMESSAGEOPTIONS_WRITESTRUCT = 0xc5;
        public const uint MQGETMESSAGEOPTIONS_READSTRUCT = 0xc6;
        public const uint MQID_WRITESTRUCT = 0xc7;
        public const uint MQID_READSTRUCT = 200;
        public const uint MQINIFILE_PARSE = 0xc9;
        public const uint MQINIFILE_GETATTRIBUTEVALUE = 0xca;
        public const uint MQINIFILE_ENTERSTANZA = 0xcb;
        public const uint MQINIFILE_STOREATTRIBUTEVALUEPAIR = 0xcc;
        public const uint MQINIFILE_GETCURRENTLINETYPE = 0xcd;
        public const uint MQINIFILE_PROCESSCURRENTLINE = 0xce;
        public const uint MQMANAGEDCLIENTCONNECTOR_READMQSERVER = 0xcf;
        public const uint MQMANAGEDCLIENTCONNECTOR_GETNAMELIST = 0xd0;
        public const uint MQMANAGEDCLIENTCONNECTOR_FINDNAMELISTENTRY = 0xd1;
        public const uint MQMANAGEDCLIENTCONNECTOR_CREATENAMELISTENTRYFROMCCDT = 210;
        public const uint MQMANAGEDCLIENTCONNECTOR_FREENAMEENTRIES = 0xd3;
        public const uint MQMANAGEDCLIENTCONNECTOR_DOCONN = 0xd4;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQCONN = 0xd5;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQCONNX = 0xd6;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQDISC = 0xd7;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQOPEN = 0xd8;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQCLOSE = 0xd9;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPIPUT = 0xda;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQPUT = 0xdb;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQPUT1 = 220;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQSTAT = 0xdd;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQSUB = 0xde;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQSUBRQ = 0xdf;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPIGET = 0xe0;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQGET = 0xe1;
        public const uint MQMANAGEDCLIENTCONNECTOR_ZSTMQGET = 0xe2;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQINQ = 0xe3;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQSET = 0xe4;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQBEGIN = 0xe5;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQCMIT = 230;
        public const uint MQMANAGEDCLIENTCONNECTOR_MQBACK = 0xe7;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPIQUERYSPI = 0xe8;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPIACTIVATEMESSAGE = 0xe9;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPISYNCPOINT = 0xea;
        public const uint MQMANAGEDOBJECT_CLOSE = 0xeb;
        public const uint MQMANAGEDOBJECT_SET = 0xec;
        public const uint MQMANAGEDOBJECT_INQUIRE = 0xed;
        public const uint MQMANAGEDOBJECT_QUERYATTRIBUTE = 0xee;
        public const uint MQMANAGEDOBJECT_QUERYATTRIBUTE2 = 0xef;
        public const uint MQMANAGEDOBJECT_SETATTRIBUTE = 240;
        public const uint MQMANAGEDOBJECT_SETATTRIBUTE2 = 0xf1;
        public const uint MQMANAGEDOBJECT_OPENFORINQUIRE = 0xf2;
        public const uint MQMANAGEDOBJECT_OPENFORSET = 0xf3;
        public const uint MQMARSHALMESSAGEFORGET_PROCESSMESSAGEFORRFH = 0xf4;
        public const uint MQMARSHALMESSAGEFORGET_CONVERTBYTESCONTENTTOSTRING = 0xf5;
        public const uint MQMARSHALMESSAGEFORGET_PROCESSALLAVAILABLERFHS = 0xf6;
        public const uint MQMARSHALMESSAGEFORGET_GETFORMATASSTRING = 0xf7;
        public const uint MQMARSHALMESSAGEFORGET_GETFORMATASLONG = 0xf8;
        public const uint MQMARSHALMESSAGEFORGET_GETFORMATASLONGFROMBYTES = 0xf9;
        public const uint MQMARSHALMESSAGEFORGET_GETVALUEASOBJECT = 250;
        public const uint MQMARSHALMESSAGEFORGET_READINT = 0xfb;
        public const uint MQMARSHALMESSAGEFORGET_READINT2 = 0xfc;
        public const uint MQMARSHALMESSAGEFORGET_CHECKFORPROPERTYDESCRIPTORATTRIBUTES = 0xfd;
        public const uint MQMARSHALMESSAGEFORPUT_CONSTRUCTMESSAGEFORSEND = 0xfe;
        public const uint MQMARSHALMESSAGEFORPUT_WRITERFH2PROPERTIES = 0xff;
        public const uint MQMARSHALMESSAGEFORPUT_EXPANDMESSAGEDATA = 0x100;
        public const uint MQMARSHALMESSAGEFORPUT_APPENDBYTEARRAY = 0x101;
        public const uint MQMARSHALMESSAGEFORPUT_APPENDBYTEARRAY2 = 0x102;
        public const uint MQMARSHALMESSAGEFORPUT_APPENDINT = 0x103;
        public const uint MQMARSHALMESSAGEFORPUT_SETCONTENT = 260;
        public const uint MQMARSHALMESSAGEFORPUT_ESCAPEXMLCHARS = 0x105;
        public const uint MQMARSHALMESSAGEFORPUT_WRITETRIPLET = 0x106;
        public const uint MQMARSHALMESSAGEFORPUT_SETPROPERTYDESCRIPTOR = 0x107;
        public const uint MQMESSAGE_GETBUFFER = 0x108;
        public const uint MQMESSAGE_CLEARMESSAGE = 0x109;
        public const uint MQMESSAGE_READ = 0x10a;
        public const uint MQMESSAGE_READBOOLEAN = 0x10b;
        public const uint MQMESSAGE_READBYTE = 0x10c;
        public const uint MQMESSAGE_READBYTES = 0x10d;
        public const uint MQMESSAGE_READCHAR = 270;
        public const uint MQMESSAGE_READDECIMAL2 = 0x10f;
        public const uint MQMESSAGE_READDECIMAL4 = 0x110;
        public const uint MQMESSAGE_READDECIMAL8 = 0x111;
        public const uint MQMESSAGE_READDOUBLE = 0x112;
        public const uint MQMESSAGE_READFLOAT = 0x113;
        public const uint MQMESSAGE_READFULLY = 0x114;
        public const uint MQMESSAGE_READFULLY2 = 0x115;
        public const uint MQMESSAGE_READFULLY3 = 0x116;
        public const uint MQMESSAGE_READFULLY4 = 0x117;
        public const uint MQMESSAGE_READINT = 280;
        public const uint MQMESSAGE_READINT2 = 0x119;
        public const uint MQMESSAGE_READINT4 = 0x11a;
        public const uint MQMESSAGE_READINT8 = 0x11b;
        public const uint MQMESSAGE_READLINE = 0x11c;
        public const uint MQMESSAGE_READLONG = 0x11d;
        public const uint MQMESSAGE_READSHORT = 0x11e;
        public const uint MQMESSAGE_READSTRING = 0x11f;
        public const uint MQMESSAGE_READUINT22 = 0x120;
        public const uint MQMESSAGE_READUNSIGNEDBYTE = 0x121;
        public const uint MQMESSAGE_READUNSIGNEDSHORT = 290;
        public const uint MQMESSAGE_READUTF = 0x123;
        public const uint MQMESSAGE_RESIZEBUFFER = 0x124;
        public const uint MQMESSAGE_READREVERSE = 0x125;
        public const uint MQMESSAGE_SEEK = 0x126;
        public const uint MQMESSAGE_SKIPBYTES = 0x127;
        public const uint MQMESSAGE_WRITE = 0x128;
        public const uint MQMESSAGE_WRITE2 = 0x129;
        public const uint MQMESSAGE_WRITE3 = 0x12a;
        public const uint MQMESSAGE_WRITE4 = 0x12b;
        public const uint MQMESSAGE_WRITE5 = 300;
        public const uint MQMESSAGE_WRITEBOOLEAN = 0x12d;
        public const uint MQMESSAGE_WRITEBYTE = 0x12e;
        public const uint MQMESSAGE_WRITEBYTE2 = 0x12f;
        public const uint MQMESSAGE_WRITEBYTE3 = 0x130;
        public const uint MQMESSAGE_WRITEBYTES = 0x131;
        public const uint MQMESSAGE_WRITECHAR = 0x132;
        public const uint MQMESSAGE_WRITECHARS = 0x133;
        public const uint MQMESSAGE_WRITEDECIMAL2 = 0x134;
        public const uint MQMESSAGE_WRITEDECIMAL4 = 0x135;
        public const uint MQMESSAGE_WRITEDECIMAL8 = 310;
        public const uint MQMESSAGE_WRITEDOUBLE = 0x137;
        public const uint MQMESSAGE_WRITEFLOAT = 0x138;
        public const uint MQMESSAGE_WRITEINT = 0x139;
        public const uint MQMESSAGE_WRITEINT2 = 0x13a;
        public const uint MQMESSAGE_WRITEINT4 = 0x13b;
        public const uint MQMESSAGE_WRITEINT8 = 0x13c;
        public const uint MQMESSAGE_WRITELONG = 0x13d;
        public const uint MQMESSAGE_WRITESHORT2 = 0x13e;
        public const uint MQMESSAGE_WRITESTRING = 0x13f;
        public const uint MQMESSAGE_WRITESTRING2 = 320;
        public const uint MQMESSAGE_WRITEUTF = 0x141;
        public const uint MQMESSAGE_READUNICODELINE = 0x142;
        public const uint MQMESSAGE_READCONVERTEDLINE = 0x143;
        public const uint MQMESSAGE_WRITEOBJECT = 0x144;
        public const uint MQMESSAGE_READOBJECT = 0x145;
        public const uint MQMESSAGE_FREXP = 0x146;
        public const uint MQMESSAGE_LDEXP = 0x147;
        public const uint MQMESSAGE_LDEXPL = 0x148;
        public const uint MQMESSAGE_MODF = 0x149;
        public const uint MQMESSAGE_GETBYTESPROPERTY = 330;
        public const uint MQMESSAGE_GETBYTESPROPERTY2 = 0x14b;
        public const uint MQMESSAGE_GETBOOLEANPROPERTY = 0x14c;
        public const uint MQMESSAGE_GETBOOLEANPROPERTY2 = 0x14d;
        public const uint MQMESSAGE_GETBYTEPROPERTY = 0x14e;
        public const uint MQMESSAGE_GETBYTEPROPERTY2 = 0x14f;
        public const uint MQMESSAGE_GETSHORTPROPERTY = 0x150;
        public const uint MQMESSAGE_GETSHORTPROPERTY2 = 0x151;
        public const uint MQMESSAGE_GETINT2PROPERTY = 0x152;
        public const uint MQMESSAGE_GETINT2PROPERTY2 = 0x153;
        public const uint MQMESSAGE_GETINTPROPERTY = 340;
        public const uint MQMESSAGE_GETINTPROPERTY2 = 0x155;
        public const uint MQMESSAGE_GETINT4PROPERTY = 0x156;
        public const uint MQMESSAGE_GETINT4PROPERTY2 = 0x157;
        public const uint MQMESSAGE_GETLONGPROPERTY = 0x158;
        public const uint MQMESSAGE_GETLONGPROPERTY2 = 0x159;
        public const uint MQMESSAGE_GETINT8PROPERTY = 0x15a;
        public const uint MQMESSAGE_GETINT8PROPERTY2 = 0x15b;
        public const uint MQMESSAGE_GETFLOATPROPERTY = 0x15c;
        public const uint MQMESSAGE_GETFLOATPROPERTY2 = 0x15d;
        public const uint MQMESSAGE_GETDOUBLEPROPERTY = 350;
        public const uint MQMESSAGE_GETDOUBLEPROPERTY2 = 0x15f;
        public const uint MQMESSAGE_GETSTRINGPROPERTY = 0x160;
        public const uint MQMESSAGE_GETSTRINGPROPERTY2 = 0x161;
        public const uint MQMESSAGE_GETOBJECTPROPERTY = 0x162;
        public const uint MQMESSAGE_GETOBJECTPROPERTY2 = 0x163;
        public const uint MQMESSAGE_SETJMSPROPERTY = 0x164;
        public const uint MQMESSAGE_GETJMSPROPERTY = 0x165;
        public const uint MQMESSAGE_HEXTOBIN = 0x166;
        public const uint MQMESSAGE_SETMESSAGEID = 0x167;
        public const uint MQMESSAGE_SETCORRELATIONID = 360;
        public const uint MQMESSAGE_SETBOOLEANPROPERTY = 0x169;
        public const uint MQMESSAGE_SETBOOLEANPROPERTY2 = 0x16a;
        public const uint MQMESSAGE_SETBYTESPROPERTY = 0x16b;
        public const uint MQMESSAGE_SETBYTESPROPERTY2 = 0x16c;
        public const uint MQMESSAGE_SETBYTEPROPERTY = 0x16d;
        public const uint MQMESSAGE_SETBYTEPROPERTY2 = 0x16e;
        public const uint MQMESSAGE_SETSHORTPROPERTY = 0x16f;
        public const uint MQMESSAGE_SETSHORTPROPERTY2 = 0x170;
        public const uint MQMESSAGE_SETINT2PROPERTY = 0x171;
        public const uint MQMESSAGE_SETINT2PROPERTY2 = 370;
        public const uint MQMESSAGE_SETINTPROPERTY = 0x173;
        public const uint MQMESSAGE_SETINTPROPERTY2 = 0x174;
        public const uint MQMESSAGE_SETINT4PROPERTY = 0x175;
        public const uint MQMESSAGE_SETINT4PROPERTY2 = 0x176;
        public const uint MQMESSAGE_SETLONGPROPERTY = 0x177;
        public const uint MQMESSAGE_SETLONGPROPERTY2 = 0x178;
        public const uint MQMESSAGE_SETINT8PROPERTY = 0x179;
        public const uint MQMESSAGE_SETINT8PROPERTY2 = 0x17a;
        public const uint MQMESSAGE_SETFLOATPROPERTY = 0x17b;
        public const uint MQMESSAGE_SETFLOATPROPERTY2 = 380;
        public const uint MQMESSAGE_SETDOUBLEPROPERTY = 0x17d;
        public const uint MQMESSAGE_SETDOUBLEPROPERTY2 = 0x17e;
        public const uint MQMESSAGE_SETSTRINGPROPERTY = 0x17f;
        public const uint MQMESSAGE_SETSTRINGPROPERTY2 = 0x180;
        public const uint MQMESSAGE_SETOBJECTPROPERTY = 0x181;
        public const uint MQMESSAGE_SETOBJECTPROPERTY2 = 0x182;
        public const uint MQMESSAGE_ADDPROPERTYTOLIST = 0x183;
        public const uint MQMESSAGE_MAKEUSRFOLDEREXPLICIT = 0x184;
        public const uint MQMESSAGE_MAKEMQFOLDEREXPLICIT = 0x185;
        public const uint MQMESSAGE_BADCONVERTEXCEPTION = 390;
        public const uint MQMESSAGE_VALIDATEPROPERTY = 0x187;
        public const uint MQMESSAGE_CHECKNOTNULLPROPERTYNAME = 0x188;
        public const uint MQMESSAGE_CHECKMAXSIZEOFPROPERTYNAME = 0x189;
        public const uint MQMESSAGE_CHECKISVALIDJAVAIDENTIFIER = 0x18a;
        public const uint MQMESSAGE_VALIDATENAMEFOREMPTYDOT = 0x18b;
        public const uint MQMESSAGE_VALIDATENAMEFORRESERVEDSQLNAMES = 0x18c;
        public const uint MQMESSAGE_VALIDATENAMEFORRESERVEDFOLDERNAMES = 0x18d;
        public const uint MQMESSAGE_CHECKNOTMIXEDCONTENT = 0x18e;
        public const uint MQMESSAGE_PARSEBOOLEAN = 0x18f;
        public const uint MQMESSAGE_PARSEBYTE = 400;
        public const uint MQMESSAGE_PARSEDOUBLE = 0x191;
        public const uint MQMESSAGE_PARSESINGLE = 0x192;
        public const uint MQMESSAGE_PARSEINT32 = 0x193;
        public const uint MQMESSAGE_PARSEINT64 = 0x194;
        public const uint MQMESSAGE_PARSEINT16 = 0x195;
        public const uint MQMESSAGE_PARSESTRING = 0x196;
        public const uint MQMESSAGE_PARSEBYTES = 0x197;
        public const uint MQMESSAGE_PARSEOBJECTASTYPE = 0x198;
        public const uint MQMESSAGE_GETPROPERTYNAMES = 0x199;
        public const uint MQMESSAGE_DELETEPROPERTY = 410;
        public const uint MQMESSAGE_SETMQMDTODEFAULT = 0x19b;
        public const uint MQMESSAGEDESCRIPTOR_CLEARINVALIDFIELDS = 0x19c;
        public const uint MQMESSAGEDESCRIPTOR_GETVERSIONLENGTH = 0x19d;
        public const uint MQMESSAGEDESCRIPTOR_WRITESTRUCT = 0x19e;
        public const uint MQMESSAGEDESCRIPTOR_READSTRUCT = 0x19f;
        public const uint MQMESSAGEPROPERTIES_GETBYTESPROPERTY = 0x1a0;
        public const uint MQMESSAGEPROPERTIES_GETBYTESPROPERTY2 = 0x1a1;
        public const uint MQMESSAGEPROPERTIES_GETBOOLEANPROPERTY = 0x1a2;
        public const uint MQMESSAGEPROPERTIES_GETBOOLEANPROPERTY2 = 0x1a3;
        public const uint MQMESSAGEPROPERTIES_GETBYTEPROPERTY = 420;
        public const uint MQMESSAGEPROPERTIES_GETBYTEPROPERTY2 = 0x1a5;
        public const uint MQMESSAGEPROPERTIES_GETSHORTPROPERTY = 0x1a6;
        public const uint MQMESSAGEPROPERTIES_GETSHORTPROPERTY2 = 0x1a7;
        public const uint MQMESSAGEPROPERTIES_GETINT2PROPERTY = 0x1a8;
        public const uint MQMESSAGEPROPERTIES_GETINT2PROPERTY2 = 0x1a9;
        public const uint MQMESSAGEPROPERTIES_GETINTPROPERTY = 0x1aa;
        public const uint MQMESSAGEPROPERTIES_GETINTPROPERTY2 = 0x1ab;
        public const uint MQMESSAGEPROPERTIES_GETINT4PROPERTY = 0x1ac;
        public const uint MQMESSAGEPROPERTIES_GETINT4PROPERTY2 = 0x1ad;
        public const uint MQMESSAGEPROPERTIES_GETLONGPROPERTY = 430;
        public const uint MQMESSAGEPROPERTIES_GETLONGPROPERTY2 = 0x1af;
        public const uint MQMESSAGEPROPERTIES_GETINT8PROPERTY = 0x1b0;
        public const uint MQMESSAGEPROPERTIES_GETINT8PROPERTY2 = 0x1b1;
        public const uint MQMESSAGEPROPERTIES_GETFLOATPROPERTY = 0x1b2;
        public const uint MQMESSAGEPROPERTIES_GETFLOATPROPERTY2 = 0x1b3;
        public const uint MQMESSAGEPROPERTIES_GETDOUBLEPROPERTY = 0x1b4;
        public const uint MQMESSAGEPROPERTIES_GETDOUBLEPROPERTY2 = 0x1b5;
        public const uint MQMESSAGEPROPERTIES_GETSTRINGPROPERTY = 0x1b6;
        public const uint MQMESSAGEPROPERTIES_GETSTRINGPROPERTY2 = 0x1b7;
        public const uint MQMESSAGEPROPERTIES_GETOBJECTPROPERTY = 440;
        public const uint MQMESSAGEPROPERTIES_GETOBJECTPROPERTY2 = 0x1b9;
        public const uint MQMESSAGEPROPERTIES_SETBOOLEANPROPERTY = 0x1ba;
        public const uint MQMESSAGEPROPERTIES_SETBOOLEANPROPERTY2 = 0x1bb;
        public const uint MQMESSAGEPROPERTIES_SETBYTESPROPERTY = 0x1bc;
        public const uint MQMESSAGEPROPERTIES_SETBYTESPROPERTY2 = 0x1bd;
        public const uint MQMESSAGEPROPERTIES_SETBYTEPROPERTY = 0x1be;
        public const uint MQMESSAGEPROPERTIES_SETBYTEPROPERTY2 = 0x1bf;
        public const uint MQMESSAGEPROPERTIES_SETSHORTPROPERTY = 0x1c0;
        public const uint MQMESSAGEPROPERTIES_SETSHORTPROPERTY2 = 0x1c1;
        public const uint MQMESSAGEPROPERTIES_SETINT2PROPERTY = 450;
        public const uint MQMESSAGEPROPERTIES_SETINT2PROPERTY2 = 0x1c3;
        public const uint MQMESSAGEPROPERTIES_SETINTPROPERTY = 0x1c4;
        public const uint MQMESSAGEPROPERTIES_SETINTPROPERTY2 = 0x1c5;
        public const uint MQMESSAGEPROPERTIES_SETINT4PROPERTY = 0x1c6;
        public const uint MQMESSAGEPROPERTIES_SETINT4PROPERTY2 = 0x1c7;
        public const uint MQMESSAGEPROPERTIES_SETLONGPROPERTY = 0x1c8;
        public const uint MQMESSAGEPROPERTIES_SETLONGPROPERTY2 = 0x1c9;
        public const uint MQMESSAGEPROPERTIES_SETINT8PROPERTY = 0x1ca;
        public const uint MQMESSAGEPROPERTIES_SETINT8PROPERTY2 = 0x1cb;
        public const uint MQMESSAGEPROPERTIES_SETFLOATPROPERTY = 460;
        public const uint MQMESSAGEPROPERTIES_SETFLOATPROPERTY2 = 0x1cd;
        public const uint MQMESSAGEPROPERTIES_SETDOUBLEPROPERTY = 0x1ce;
        public const uint MQMESSAGEPROPERTIES_SETDOUBLEPROPERTY2 = 0x1cf;
        public const uint MQMESSAGEPROPERTIES_SETSTRINGPROPERTY = 0x1d0;
        public const uint MQMESSAGEPROPERTIES_SETSTRINGPROPERTY2 = 0x1d1;
        public const uint MQMESSAGEPROPERTIES_SETOBJECTPROPERTY = 0x1d2;
        public const uint MQMESSAGEPROPERTIES_SETOBJECTPROPERTY2 = 0x1d3;
        public const uint MQMESSAGEPROPERTIES_ADDPROPERTYTOLIST = 0x1d4;
        public const uint MQMESSAGEPROPERTIES_BADCONVERTEXCEPTION = 0x1d5;
        public const uint MQMESSAGEPROPERTIES_NULLREFEXCEPTION = 470;
        public const uint MQMESSAGEPROPERTIES_VALIDATEPROPERTY = 0x1d7;
        public const uint MQMESSAGEPROPERTIES_CHECKNOTNULLPROPERTYNAME = 0x1d8;
        public const uint MQMESSAGEPROPERTIES_CHECKMAXSIZEOFPROPERTYNAME = 0x1d9;
        public const uint MQMESSAGEPROPERTIES_CHECKISVALIDJAVAIDENTIFIER = 0x1da;
        public const uint MQMESSAGEPROPERTIES_VALIDATENAMEFOREMPTYDOT = 0x1db;
        public const uint MQMESSAGEPROPERTIES_VALIDATENAMEFORRESERVEDSQLNAMES = 0x1dc;
        public const uint MQMESSAGEPROPERTIES_VALIDATENAMEFORRESERVEDFOLDERNAMES = 0x1dd;
        public const uint MQMESSAGEPROPERTIES_CHECKNOTMIXEDCONTENT = 0x1de;
        public const uint MQMESSAGEPROPERTIES_PARSEBOOLEAN = 0x1df;
        public const uint MQMESSAGEPROPERTIES_PARSEBYTE = 480;
        public const uint MQMESSAGEPROPERTIES_PARSEDOUBLE = 0x1e1;
        public const uint MQMESSAGEPROPERTIES_PARSESINGLE = 0x1e2;
        public const uint MQMESSAGEPROPERTIES_PARSEINT32 = 0x1e3;
        public const uint MQMESSAGEPROPERTIES_PARSEINT64 = 0x1e4;
        public const uint MQMESSAGEPROPERTIES_PARSEINT16 = 0x1e5;
        public const uint MQMESSAGEPROPERTIES_PARSESTRING = 0x1e6;
        public const uint MQMESSAGEPROPERTIES_PARSEBYTES = 0x1e7;
        public const uint MQMESSAGEPROPERTIES_PARSEOBJECTASTYPE = 0x1e8;
        public const uint MQMESSAGEPROPERTIES_GETPROPERTYNAMES = 0x1e9;
        public const uint MQMESSAGEPROPERTIES_DELETEPROPERTY = 490;
        public const uint MQMSGAREAIMPL_ADDUSECOUNT = 0x1eb;
        public const uint MQMSGAREAIMPL_FREE = 0x1ec;
        public const uint MQMSGAREAIMPL_ISINUSE = 0x1ed;
        public const uint MQMSGAREAIMPL_INVALIDATE = 0x1ee;
        public const uint MQMSGAREAIMPL_ENSUREINUSE = 0x1ef;
        public const uint MQMSGAREAPOOL_ALLOCBUFFER = 0x1f0;
        public const uint MQMSGAREAPOOL_FREEBUFFER = 0x1f1;
        public const uint MQNOTIFICATION_WRITESTRUCT = 0x1f2;
        public const uint MQNOTIFICATION_READSTRUCT = 0x1f3;
        public const uint MQOBJECTDESCRIPTOR_CLEARINVALIDFIELDS = 500;
        public const uint MQOBJECTDESCRIPTOR_GETVERSIONLENGTH = 0x1f5;
        public const uint MQOBJECTDESCRIPTOR_GETPADDEDLENGTH = 0x1f6;
        public const uint MQOBJECTDESCRIPTOR_GETREQUIREDBUFFERSIZE = 0x1f7;
        public const uint MQOBJECTDESCRIPTOR_COPYCHARVINTOOD = 0x1f8;
        public const uint MQOBJECTDESCRIPTOR_WRITESTRUCT = 0x1f9;
        public const uint MQOBJECTDESCRIPTOR_READSTRUCT = 0x1fa;
        public const uint MQOPEN_PRIV_WRITESTRUCT = 0x1fb;
        public const uint MQOPEN_PRIV_READSTRUCT = 0x1fc;
        public const uint MQPROCESS_OPENPROCESSFORINQUIRE = 0x1fd;
        public const uint MQPROCESS_DISPOSE = 510;
        public const uint MQPROCESS_CLOSE = 0x1ff;
        public const uint MQPROPERTYDESCRIPTOR_ISDEFAULT = 0x200;
        public const uint MQPROXYQUEUE_REQUESTMUTEX = 0x201;
        public const uint MQPROXYQUEUE_RELEASEMUTEX = 0x202;
        public const uint MQPROXYQUEUE_SETIDENTIFIER = 0x203;
        public const uint MQPROXYQUEUE_ALLOCMESSAGE = 0x204;
        public const uint MQPROXYQUEUE_FREEMESSAGE = 0x205;
        public const uint MQPROXYQUEUE_CHECKSELECTIONCRITERIA = 0x206;
        public const uint MQPROXYQUEUE_REQUESTMESSAGES = 0x207;
        public const uint MQPROXYQUEUE_MATCHSELECTION = 520;
        public const uint MQPROXYQUEUE_FINDNEXTMESSAGE = 0x209;
        public const uint MQPROXYQUEUE_VERIFYOPTSFORGET = 0x20a;
        public const uint MQPROXYQUEUE_CHECKGETMSGOPTIONS = 0x20b;
        public const uint MQPROXYQUEUE_FLUSHQUEUE = 0x20c;
        public const uint MQPROXYQUEUE_REMOVEMESSAGE = 0x20d;
        public const uint MQPROXYQUEUE_REMOVEALLMESSAGES = 0x20e;
        public const uint MQPROXYQUEUE_RESETBROWSEFIRST = 0x20f;
        public const uint MQPROXYQUEUE_COPYOUTMESSAGE = 0x210;
        public const uint MQPROXYQUEUE_ADDPHYSICALMESSAGE = 0x211;
        public const uint MQPROXYQUEUE_PROXYMQGET = 530;
        public const uint MQPROXYQUEUE_PROXYMQCLOSE = 0x213;
        public const uint MQPROXYQUEUE_RECEIVENOTIFICATION = 0x214;
        public const uint MQPROXYQUEUE_ADDMESSAGE = 0x215;
        public const uint MQPROXYQUEUE_CHECKPURGE = 0x216;
        public const uint MQPROXYQUEUE_COMPARE = 0x217;
        public const uint MQPROXYQUEUE_BITSET = 0x218;
        public const uint MQPROXYQUEUEMANAGER_CREATEPROXYQUEUE = 0x219;
        public const uint MQPROXYQUEUEMANAGER_FINDPROXYQUEUE = 0x21a;
        public const uint MQPROXYQUEUEMANAGER_SETIDENTIFIER = 0x21b;
        public const uint MQPROXYQUEUEMANAGER_DELETEPROXYQUEUE = 540;
        public const uint MQPROXYQUEUEMANAGER_ADDMESSAGE = 0x21d;
        public const uint MQPROXYQUEUEMANAGER_RECEIVENOTIFICATION = 0x21e;
        public const uint MQPROXYQUEUEMANAGER_PROXYQUEUELIST = 0x21f;
        public const uint MQPUTMESSAGEOPTIONS_CLEARINVALIDFIELDS = 0x220;
        public const uint MQPUTMESSAGEOPTIONS_GETVERSIONLENGTH = 0x221;
        public const uint MQPUTMESSAGEOPTIONS_WRITESTRUCT = 0x222;
        public const uint MQPUTMESSAGEOPTIONS_READSTRUCT = 0x223;
        public const uint MQPUTMESSAGEOPTIONS_VALIDATEOPTIONS = 0x224;
        public const uint MQQUEUE_CLOSE = 0x225;
        public const uint MQQUEUE_GET = 550;
        public const uint MQQUEUE_PUT = 0x227;
        public const uint MQQUEUE_PUTFORWARDMESSAGE = 0x228;
        public const uint MQQUEUE_PUTFORWARDMESSAGE2 = 0x229;
        public const uint MQQUEUE_PUTREPLYMESSAGE = 0x22a;
        public const uint MQQUEUE_PUTREPLYMESSAGE2 = 0x22b;
        public const uint MQQUEUE_PUTREPORTMESSAGE = 0x22c;
        public const uint MQQUEUE_PUTREPORTMESSAGE2 = 0x22d;
        public const uint MQQUEUE_VALIDTOCOPY = 0x22e;
        public const uint MQQUEUE_COPYMDFROMOLDMSGINTOFWDMSG = 0x22f;
        public const uint MQQUEUE_COPYMDFROMOLDMSGINTOREPLYMSG = 560;
        public const uint MQQUEUE_COPYMDFROMOLDMSGINTOREPORTMSG = 0x231;
        public const uint MQQUEUEMANAGER_DISPOSE = 0x232;
        public const uint MQQUEUEMANAGER_CONNECT = 0x233;
        public const uint MQQUEUEMANAGER_DISCONNECT2 = 0x234;
        public const uint MQQUEUEMANAGER_ISMTSENVIRONMENT = 0x235;
        public const uint MQQUEUEMANAGER_ACCESSQUEUE = 0x236;
        public const uint MQQUEUEMANAGER_ACCESSQUEUE2 = 0x237;
        public const uint MQQUEUEMANAGER_ACCESSPROCESS = 0x238;
        public const uint MQQUEUEMANAGER_ACCESSPROCESS2 = 0x239;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC = 570;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC2 = 0x23b;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC3 = 0x23c;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC4 = 0x23d;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC5 = 0x23e;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC6 = 0x23f;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC7 = 0x240;
        public const uint MQQUEUEMANAGER_ACCESSTOPIC8 = 0x241;
        public const uint MQQUEUEMANAGER_BEGIN = 0x242;
        public const uint MQQUEUEMANAGER_COMMIT = 0x243;
        public const uint MQQUEUEMANAGER_BACKOUT = 580;
        public const uint MQQUEUEMANAGER_ACTIVATEMESSAGE = 0x245;
        public const uint MQQUEUEMANAGER_SYNCPOINT = 0x246;
        public const uint MQQUEUEMANAGER_QUERYSPI = 0x247;
        public const uint MQQUEUEMANAGER_PUT = 0x248;
        public const uint MQQUEUEMANAGER_PUT2 = 0x249;
        public const uint MQQUEUEMANAGER_PUT3 = 0x24a;
        public const uint MQQUEUEMANAGER_PUT4 = 0x24b;
        public const uint MQQUEUEMANAGER_PUT5 = 0x24c;
        public const uint MQQUEUEMANAGER_PERFORMMSGPROCESSGINGBEFOREPUT = 0x24d;
        public const uint MQQUEUEMANAGER_PERFORMMSGPROCESSINGAFTERPUT = 590;
        public const uint MQQUEUEMANAGER_PUT6 = 0x24f;
        public const uint MQQUEUEMANAGER_PUT7 = 0x250;
        public const uint MQQUEUEMANAGER_PUT8 = 0x251;
        public const uint MQQUEUEMANAGER_PUT9 = 0x252;
        public const uint MQQUEUEMANAGER_PUT10 = 0x253;
        public const uint MQQUEUEMANAGER_GETASYNCSTATUS = 0x254;
        public const uint MQRCVTHREAD_RUN = 0x255;
        public const uint MQRCVTHREAD_RECEIVEBUFFER = 0x256;
        public const uint MQRCVTHREAD_RECEIVEDATA = 0x257;
        public const uint MQRCVTHREAD_SETDISCONNECTING = 600;
        public const uint MQRCVTHREAD_SENDHEARTBEAT = 0x259;
        public const uint MQREQUEST_MSGS_INITIALIZE = 0x25a;
        public const uint MQREQUEST_MSGS_GETLENGTH = 0x25b;
        public const uint MQREQUEST_MSGS_WRITESTRUCT = 0x25c;
        public const uint MQSERVERCONNECTOR_MQCONN = 0x25d;
        public const uint MQSERVERCONNECTOR_MQCONNX = 0x25e;
        public const uint MQSERVERCONNECTOR_MQDISC = 0x25f;
        public const uint MQSERVERCONNECTOR_MQOPEN = 0x260;
        public const uint MQSERVERCONNECTOR_MQCLOSE = 0x261;
        public const uint MQSERVERCONNECTOR_SPIPUT = 610;
        public const uint MQSERVERCONNECTOR_MQPUT = 0x263;
        public const uint MQSERVERCONNECTOR_MQPUT1 = 0x264;
        public const uint MQSERVERCONNECTOR_MQSTAT = 0x265;
        public const uint MQSERVERCONNECTOR_MQSUB = 0x266;
        public const uint MQSERVERCONNECTOR_MQSUBRQ = 0x267;
        public const uint MQSERVERCONNECTOR_SPIGET = 0x268;
        public const uint MQSERVERCONNECTOR_MQGET = 0x269;
        public const uint MQSERVERCONNECTOR_ZSTMQGET = 0x26a;
        public const uint MQSERVERCONNECTOR_MQINQ = 0x26b;
        public const uint MQSERVERCONNECTOR_MQSET = 620;
        public const uint MQSERVERCONNECTOR_MQBEGIN = 0x26d;
        public const uint MQSERVERCONNECTOR_MQCMIT = 0x26e;
        public const uint MQSERVERCONNECTOR_MQBACK = 0x26f;
        public const uint MQSERVERCONNECTOR_SPIQUERYSPI = 0x270;
        public const uint MQSERVERCONNECTOR_SPIACTIVATEMESSAGE = 0x271;
        public const uint MQSERVERCONNECTOR_SPISYNCPOINT = 0x272;
        public const uint MQSOCKACT_MQSOCKACT = 0x273;
        public const uint MQSOCKACT_MQSOCKACT2 = 0x274;
        public const uint MQSOCKACT_WRITESTRUCT = 0x275;
        public const uint MQSOCKACT_READSTRUCT = 630;
        public const uint MQSPI_WRITESTRUCT = 0x277;
        public const uint MQSPI_READSTRUCT = 0x278;
        public const uint MQSPIACTIVATEIN_TOBUFFER = 0x279;
        public const uint MQSPIACTIVATEIN_WRITESTRUCT = 0x27a;
        public const uint MQSPIACTIVATEINOUT_TOBUFFER = 0x27b;
        public const uint MQSPIACTIVATEINOUT_WRITESTRUCT = 0x27c;
        public const uint MQSPIACTIVATEINOUT_READSTRUCT = 0x27d;
        public const uint MQSPIACTIVATEOUT_TOBUFFER = 0x27e;
        public const uint MQSPIACTIVATEOUT_WRITESTRUCT = 0x27f;
        public const uint MQSPIACTIVATEOUT_READSTRUCT = 640;
        public const uint MQSPIGETIN_GETVERSIONLENGTH = 0x281;
        public const uint MQSPIGETIN_TOBUFFER = 0x282;
        public const uint MQSPIGETIN_WRITESTRUCT = 0x283;
        public const uint MQSPIGETINOUT_GETHDRVERSIONLENGTH = 0x284;
        public const uint MQSPIGETINOUT_TOBUFFER = 0x285;
        public const uint MQSPIGETINOUT_WRITESTRUCT = 0x286;
        public const uint MQSPIGETINOUT_READSTRUCT = 0x287;
        public const uint MQSPIGETOUT_GETVERSIONLENGTH = 0x288;
        public const uint MQSPIGETOUT_TOBUFFER = 0x289;
        public const uint MQSPIGETOUT_WRITESTRUCT = 650;
        public const uint MQSPIGETOUT_READSTRUCT = 0x28b;
        public const uint MQSPIGETOUT_READSTRUCT2 = 0x28c;
        public const uint MQSPIPUTIN_GETVERSIONLENGTH = 0x28d;
        public const uint MQSPIPUTIN_TOBUFFER = 0x28e;
        public const uint MQSPIPUTIN_WRITESTRUCT = 0x28f;
        public const uint MQSPIPUTINOUT_GETHDRVERSIONLENGTH = 0x290;
        public const uint MQSPIPUTINOUT_TOBUFFER = 0x291;
        public const uint MQSPIPUTINOUT_WRITESTRUCT = 0x292;
        public const uint MQSPIPUTINOUT_READSTRUCT = 0x293;
        public const uint MQSPIPUTOUT_TOBUFFER = 660;
        public const uint MQSPIPUTOUT_WRITESTRUCT = 0x295;
        public const uint MQSPIPUTOUT_READSTRUCT = 0x296;
        public const uint MQSPIQUERYIN_TOBUFFER = 0x297;
        public const uint MQSPIQUERYIN_WRITESTRUCT = 0x298;
        public const uint MQSPIQUERYINOUT_TOBUFFER = 0x299;
        public const uint MQSPIQUERYINOUT_WRITESTRUCT = 0x29a;
        public const uint MQSPIQUERYINOUT_READSTRUCT = 0x29b;
        public const uint MQSPIQUERYOUT_SPISUPPORTED = 0x29c;
        public const uint MQSPIQUERYOUT_TOBUFFER = 0x29d;
        public const uint MQSPIQUERYOUT_WRITESTRUCT = 670;
        public const uint MQSPIQUERYOUT_READSTRUCT = 0x29f;
        public const uint MQSPIQUEUE_SPIPUT = 0x2a0;
        public const uint MQSPIQUEUE_SPIDEFERREDPUT = 0x2a1;
        public const uint MQSPIQUEUE_SPIGET = 0x2a2;
        public const uint MQSPIQUEUE_SPIGET2 = 0x2a3;
        public const uint MQSPIQUEUEMANAGER_ACCESSSPIQUEUE = 0x2a4;
        public const uint MQSPIQUEUEMANAGER_ACCESSSPIQUEUE2 = 0x2a5;
        public const uint MQSPIQUEUEMANAGER_SPISUPPORTSDEFERRED = 0x2a6;
        public const uint MQSPIQUEUEMANAGER_SPISUPPORTSINHERITED = 0x2a7;
        public const uint MQSPIQUEUEMANAGER_SPIACTIVATEDEFERRED = 680;
        public const uint MQSPIQUEUEMANAGER_SPICANCELDEFERRED = 0x2a9;
        public const uint MQSPIQUEUEMANAGER_SPIASYNCCOMMIT = 0x2aa;
        public const uint MQSPIRESERVEIN_MQSPIRESERVEIN = 0x2ab;
        public const uint MQSPIRESERVEIN_MQSPIRESERVEIN2 = 0x2ac;
        public const uint MQSPIRESERVEIN_GETVERSIONLENGTH = 0x2ad;
        public const uint MQSPIRESERVEIN_WRITESTRUCT = 0x2ae;
        public const uint MQSPIRESERVEINOUT_GETHDRVERSIONLENGTH = 0x2af;
        public const uint MQSPIRESERVEINOUT_TOBUFFER = 0x2b0;
        public const uint MQSPIRESERVEINOUT_WRITESTRUCT = 0x2b1;
        public const uint MQSPIRESERVEINOUT_READSTRUCT = 690;
        public const uint MQSPIRESERVEOUT_TOBUFFER = 0x2b3;
        public const uint MQSPIRESERVEOUT_WRITESTRUCT = 0x2b4;
        public const uint MQSPIRESERVEOUT_READSTRUCT = 0x2b5;
        public const uint MQSPISYNCPOINTIN_TOBUFFER = 0x2b6;
        public const uint MQSPISYNCPOINTIN_WRITESTRUCT = 0x2b7;
        public const uint MQSPISYNCPOINTINOUT_TOBUFFER = 0x2b8;
        public const uint MQSPISYNCPOINTINOUT_WRITESTRUCT = 0x2b9;
        public const uint MQSPISYNCPOINTINOUT_READSTRUCT = 0x2ba;
        public const uint MQSPISYNCPOINTOUT_TOBUFFER = 0x2bb;
        public const uint MQSPISYNCPOINTOUT_WRITESTRUCT = 700;
        public const uint MQSPISYNCPOINTOUT_READSTRUCT = 0x2bd;
        public const uint MQSUBSCRIPTION_SUBSCRIBE = 0x2be;
        public const uint MQSUBSCRIPTION_REQUESTPUBLICATIONUPDATE = 0x2bf;
        public const uint MQSUBSCRIPTIONREQUESTOPTIONS_CLEARINVALIDFIELDS = 0x2c0;
        public const uint MQSUBSCRIPTIONREQUESTOPTIONS_GETVERSIONLENGTH = 0x2c1;
        public const uint MQSUBSCRIPTIONREQUESTOPTIONS_WRITESTRUCT = 0x2c2;
        public const uint MQSUBSCRIPTIONREQUESTOPTIONS_READSTRUCT = 0x2c3;
        public const uint MQTCPCONNECTION_ADDFAPCONNECTIONTOLIST = 0x2c4;
        public const uint MQTCPCONNECTION_GETFAPCONNECTIONFROMLIST = 0x2c5;
        public const uint MQTCPCONNECTION_GETFAPCONN = 710;
        public const uint MQTCPCONNECTION_REMOVEFAPCONNECTIONFROMLIST = 0x2c7;
        public const uint MQTCPCONNECTION_CONNECTSOCKET = 0x2c8;
        public const uint MQTCPCONNECTION_PARSELOCALADDRESS = 0x2c9;
        public const uint MQTCPCONNECTION_CONNECTUSINGLOCALADDR = 0x2ca;
        public const uint MQTCPCONNECTION_CLOSESOCKET = 0x2cb;
        public const uint MQTCPCONNECTION_SENDDATA = 0x2cc;
        public const uint MQTCPCONNECTION_RECEIVEDATA = 0x2cd;
        public const uint MQTCPCONNECTION_ENABLENONBLOCKINGSOCKET = 0x2ce;
        public const uint MQTCPCONNECTION_SETUPASYNCMODE = 0x2cf;
        public const uint MQTCPCONNECTION_INCRWAITINGCONVERSATIONS = 720;
        public const uint MQTOPIC_OPENFORPUBLICATION = 0x2d1;
        public const uint MQTOPIC_OPENFORSUBSCRIPTION = 0x2d2;
        public const uint MQTOPIC_CREATEMQSUBSCRIPTIONDESCRIPTOR = 0x2d3;
        public const uint MQTOPIC_ISDURABLE = 0x2d4;
        public const uint MQTOPIC_ISMANAGED = 0x2d5;
        public const uint MQTOPIC_ISSUBSCRIBED = 0x2d6;
        public const uint MQTOPIC_CLOSE = 0x2d7;
        public const uint MQTSH_CHANGETOMULTIPLEXING = 0x2d8;
        public const uint MQTSH_INITIALIZE = 0x2d9;
        public const uint MQTSH_GETLENGTH = 730;
        public const uint MQTSH_WRITESTRUCT = 0x2db;
        public const uint MQTSH_READSTRUCT = 0x2dc;
        public const uint MQUID_GETLENGTH = 0x2dd;
        public const uint MQUID_SETCURRENTUSER = 0x2de;
        public const uint MQUID_SETUSER = 0x2df;
        public const uint MQUID_WRITESTRUCT = 0x2e0;
        public const uint NMQIENVIRONMENT_GETMQI = 0x2e1;
        public const uint NMQIENVIRONMENT_GETINSTANCE = 0x2e2;
        public const uint NMQIENVIRONMENT_NEWMQCD = 0x2e3;
        public const uint NMQIENVIRONMENT_NEWMQCNO = 740;
        public const uint NMQIENVIRONMENT_NEWMQCSP = 0x2e5;
        public const uint NMQIENVIRONMENT_NEWMQPMO = 0x2e6;
        public const uint NMQIENVIRONMENT_NEWMQGMO = 0x2e7;
        public const uint NMQIENVIRONMENT_NEWMQMD = 0x2e8;
        public const uint NMQIENVIRONMENT_NEWMQOD = 0x2e9;
        public const uint NMQIENVIRONMENT_NEWNMQICONNECTOPTIONS = 0x2ea;
        public const uint NMQIENVIRONMENT_NEWPHCONN = 0x2eb;
        public const uint NMQIENVIRONMENT_NEWPHOBJ = 0x2ec;
        public const uint PHCONN_TOSTRING = 0x2ed;
        public const uint PHOBJ_TOSTRING = 750;
        public const uint RFH2_ADDFOLDER = 0x2ef;
        public const uint RFH2_GETFOLDER = 0x2f0;
        public const uint RFH2_CONTAINS = 0x2f1;
        public const uint RFH2FOLDER_CONTAINS = 0x2f2;
        public const uint RFH2FOLDER_GETFOLDER = 0x2f3;
        public const uint RFH2FOLDER_SETCONTENT = 0x2f4;
        public const uint RFH2FOLDER_ADDFOLDER = 0x2f5;
        public const uint RFH2FOLDER_RENDER = 0x2f6;
        public const uint RFH2FOLDER_RENDERNOPAD = 0x2f7;
        public const uint UNMANAGEDHCONN_TOSTRING = 760;
        public const uint UNMANAGEDHCONN_UPDATEHCONN = 0x2f9;
        public const uint UNMANAGEDHOBJ_TOSTRING = 0x2fa;
        public const uint UNMANAGEDHOBJ_SETHOBJ = 0x2fb;
        public const uint UNMANAGEDHOBJ_EQUALS = 0x2fc;
        public const uint UNMANAGEDNMQIMQ_GETUNMANAGEDHCONN = 0x2fd;
        public const uint UNMANAGEDNMQIMQ_GETLOCALHOBJ = 0x2fe;
        public const uint UNMANAGEDNMQIMQ_MQCLOSE = 0x2ff;
        public const uint UNMANAGEDNMQIMQ_AUTHENTICATE = 0x300;
        public const uint UNMANAGEDNMQIMQ_MQCONN = 0x301;
        public const uint UNMANAGEDNMQIMQ_MQCONNX = 770;
        public const uint UNMANAGEDNMQIMQ_MQCONNX2 = 0x303;
        public const uint UNMANAGEDNMQIMQ_MQOPEN = 0x304;
        public const uint UNMANAGEDNMQIMQ_MQPUT = 0x305;
        public const uint UNMANAGEDNMQIMQ_MQGET = 0x306;
        public const uint UNMANAGEDNMQIMQ_MQDISC = 0x307;
        public const uint MANCSFFST = 0x308;
        public const uint MANCSOPENLOGFILE = 0x309;
        public const uint MANCSSETLOGPOSITION = 0x30a;
        public const uint MANCSDISPLAYMESSAGE = 0x30b;
        public const uint MANCSGETMESSAGE = 780;
        public const uint MANCSCONVERTSTRING = 0x30d;
        public const uint MANCSFILEADDACE = 0x30e;
        public const uint MQQUEUEMANAGER_CONNECT2 = 0x30f;
        public const uint MQCHANNELDEFINITION_MQCHANNELDEFINITION = 0x310;
        public const uint BINDINGSHCONN_TOSTRING = 0x311;
        public const uint BINDINGSHCONN_UPDATEHCONN = 0x312;
        public const uint BINDINGSHOBJ_TOSTRING = 0x313;
        public const uint BINDINGSHOBJ_SETHOBJ = 0x314;
        public const uint BINDINGSHOBJ_EQUALS = 0x315;
        public const uint BINDINGSNMQIMQ_GETBINDINGSHCONN = 790;
        public const uint BINDINGSNMQIMQ_GETLOCALHOBJ = 0x317;
        public const uint BINDINGSNMQIMQ_MQCLOSE = 0x318;
        public const uint BINDINGSNMQIMQ_AUTHENTICATE = 0x319;
        public const uint BINDINGSNMQIMQ_MQCONN = 0x31a;
        public const uint BINDINGSNMQIMQ_MQCONNX = 0x31b;
        public const uint BINDINGSNMQIMQ_MQCONNX2 = 0x31c;
        public const uint BINDINGSNMQIMQ_MQOPEN = 0x31d;
        public const uint BINDINGSNMQIMQ_MQPUT = 0x31e;
        public const uint BINDINGSNMQIMQ_MQPUT1 = 0x31f;
        public const uint BINDINGSNMQIMQ_MQGET = 800;
        public const uint BINDINGSNMQIMQ_MQDISC = 0x321;
        public const uint BINDINGSNMQIMQ_MQINQ = 0x322;
        public const uint BINDINGSNMQIMQ_MQSET = 0x323;
        public const uint MANAGEDNMQIMQ_READMQSERVER = 0x324;
        public const uint MANAGEDNMQIMQ_GETNAMELIST = 0x325;
        public const uint MANAGEDNMQIMQ_FINDNAMELISTENTRY = 0x326;
        public const uint MANAGEDNMQIMQ_CREATENAMELISTENTRYFROMCCDT = 0x327;
        public const uint MANAGEDNMQIMQ_FREENAMEENTRIES = 0x328;
        public const uint MANAGEDNMQIMQ_GETMANAGEDHCONN = 0x329;
        public const uint MANAGEDNMQIMQ_GETMANAGEDHOBJ = 810;
        public const uint MANAGEDNMQIMQ_DOCONN = 0x32b;
        public const uint MANAGEDNMQIMQ_AUTHENTICATE = 0x32c;
        public const uint MANAGEDNMQIMQ_MQCONN = 0x32d;
        public const uint MANAGEDNMQIMQ_MQCONNX = 0x32e;
        public const uint MANAGEDNMQIMQ_MQDISC = 0x32f;
        public const uint MANAGEDNMQIMQ_MQOPEN = 0x330;
        public const uint MANAGEDNMQIMQ_MQCLOSE = 0x331;
        public const uint MANAGEDNMQIMQ_MQPUT = 0x332;
        public const uint MANAGEDNMQIMQ_MQPUT1 = 0x333;
        public const uint MANAGEDNMQIMQ_MQGET = 820;
        public const uint MANAGEDNMQIMQ_MQINQ = 0x335;
        public const uint MANAGEDNMQIMQ_MQSET = 0x336;
        public const uint MQCHARV_WRITESTRUCT = 0x337;
        public const uint MQCHARV_READSTRUCT = 0x338;
        public const uint MQCHARV_GETENDPOSALIGNED = 0x339;
        public const uint MQCLIENTCONNECTOR_GETSHARINGCONVERSATIONSVALUE = 0x33a;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_CLEARINVALIDFIELDS = 0x33b;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETVERSIONLENGTH = 0x33c;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETPADDEDLENGTH = 0x33d;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETREQUIREDBUFFERSIZE = 830;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_COPYCHARVINTOSD = 0x33f;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_WRITESTRUCT = 0x340;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_READSTRUCT = 0x341;
        public const uint UNMANAGEDNMQIMQ_MQPUT1 = 0x342;
        public const uint UNMANAGEDNMQIMQ_MQINQ = 0x343;
        public const uint UNMANAGEDNMQIMQ_MQSET = 0x344;
        public const uint XAUNMANAGEDNMQIMQ_GETUNMANAGEDHCONN = 0x345;
        public const uint XAUNMANAGEDNMQIMQ_GETLOCALHOBJ = 0x346;
        public const uint XAUNMANAGEDNMQIMQ_MQCLOSE = 0x347;
        public const uint XAUNMANAGEDNMQIMQ_AUTHENTICATE = 840;
        public const uint XAUNMANAGEDNMQIMQ_MQCONN = 0x349;
        public const uint XAUNMANAGEDNMQIMQ_MQCONNX = 0x34a;
        public const uint XAUNMANAGEDNMQIMQ_MQCONNX2 = 0x34b;
        public const uint XAUNMANAGEDNMQIMQ_MQOPEN = 0x34c;
        public const uint XAUNMANAGEDNMQIMQ_MQPUT = 0x34d;
        public const uint XAUNMANAGEDNMQIMQ_MQPUT1 = 0x34e;
        public const uint XAUNMANAGEDNMQIMQ_MQGET = 0x34f;
        public const uint XAUNMANAGEDNMQIMQ_MQDISC = 0x350;
        public const uint XAUNMANAGEDNMQIMQ_MQINQ = 0x351;
        public const uint XAUNMANAGEDNMQIMQ_MQSET = 850;
        public const uint LPISD_GETPADDEDLENGTH = 0x353;
        public const uint LPISD_COPYCHARVINTOLPISD = 0x354;
        public const uint LPISD_WRITESTRUCT = 0x355;
        public const uint LPISD_READSTRUCT = 0x356;
        public const uint LPISDSUBPROPS_WRITESTRUCT = 0x357;
        public const uint LPISDSUBPROPS_READSTRUCT = 0x358;
        public const uint LPIUSD_GETPADDEDLENGTH = 0x359;
        public const uint LPIUSD_COPYCHARVINTOLPIUSD = 0x35a;
        public const uint LPIUSD_WRITESTRUCT = 0x35b;
        public const uint LPIUSD_READSTRUCT = 860;
        public const uint MQCHARV_WRITESTRUCT2 = 0x35d;
        public const uint MQCHARV_READSTRUCT2 = 0x35e;
        public const uint MQCHARV_GETENDPOSALIGNED2 = 0x35f;
        public const uint MQMANAGEDCLIENTCONNECTOR_GETPROPERTY = 0x360;
        public const uint MQSPIPUTOPTS_GETREQUIREDBUFFERSIZE = 0x361;
        public const uint MQSPIPUTOPTS_WRITESTRUCT = 0x362;
        public const uint MQSPIPUTOPTS_READSTRUCT = 0x363;
        public const uint SPICONNECTOPTIONS_GETREQUIREDBUFFERSIZE = 0x364;
        public const uint SPICONNECTOPTIONS_WRITESTRUCT = 0x365;
        public const uint SPICONNECTOPTIONS_READSTRUCT = 870;
        public const uint SPIGETOPTIONS_GETREQUIREDBUFFERSIZE = 0x367;
        public const uint SPIGETOPTIONS_WRITESTRUCT = 0x368;
        public const uint SPIGETOPTIONS_READSTRUCT = 0x369;
        public const uint SPIOPENOPTIONS_WRITESTRUCT = 0x36a;
        public const uint SPIOPENOPTIONS_READSTRUCT = 0x36b;
        public const uint BINDINGSNMQIMQ_MQSUB = 0x36c;
        public const uint BINDINGSNMQIMQ_MQSUBRQ = 0x36d;
        public const uint BINDINGSNMQIMQ_MQSTAT = 0x36e;
        public const uint BINDINGSNMQIMQ_MQCMIT = 0x36f;
        public const uint BINDINGSNMQIMQ_MQBACK = 880;
        public const uint BINDINGSNMQIMQ_MQBEGIN = 0x371;
        public const uint BINDINGSNMQIMQ_MQCB = 0x372;
        public const uint BINDINGSNMQIMQ_MQCTL = 0x373;
        public const uint BINDINGSNMQIMQ_NMQICONNECT = 0x374;
        public const uint BINDINGSNMQIMQ_SPICONNECT = 0x375;
        public const uint BINDINGSNMQIMQ_NMQIPUT = 0x376;
        public const uint BINDINGSNMQIMQ_NMQIPUT1 = 0x377;
        public const uint BINDINGSNMQIMQ_SPIGET = 0x378;
        public const uint BINDINGSNMQIMQ_CHECKCMDLEVEL = 0x379;
        public const uint BINDINGSNMQIMQ_NMQICONVERTMESSAGE = 890;
        public const uint BINDINGSNMQIMQ_NMQIGETMESSAGE = 0x37b;
        public const uint BINDINGSNMQIMQ_SPINOTIFY = 0x37c;
        public const uint BINDINGSNMQIMQ_SPISUBSCRIBE = 0x37d;
        public const uint BINDINGSNMQIMQ_SPIOPEN = 0x37e;
        public const uint MANAGEDNMQIMQ_CREATENAMELISTENTRYFROMCCDT2 = 0x37f;
        public const uint MANAGEDNMQIMQ_NMQICONNECT = 0x380;
        public const uint MANAGEDNMQIMQ_MQSUB = 0x381;
        public const uint MANAGEDNMQIMQ_MQSUBRQ = 0x382;
        public const uint MANAGEDNMQIMQ_MQSTAT = 0x383;
        public const uint MANAGEDNMQIMQ_MQCMIT = 900;
        public const uint MANAGEDNMQIMQ_MQBACK = 0x385;
        public const uint MANAGEDNMQIMQ_MQBEGIN = 0x386;
        public const uint MANAGEDNMQIMQ_SPICONNECT = 0x387;
        public const uint MANAGEDNMQIMQ_NMQIPUT = 0x388;
        public const uint MANAGEDNMQIMQ_NMQIPUT1 = 0x389;
        public const uint MANAGEDNMQIMQ_SPIGET = 0x38a;
        public const uint MANAGEDNMQIMQ_SPIOPEN = 0x38b;
        public const uint MANAGEDNMQIMQ_CHECKCMDLEVEL = 0x38c;
        public const uint MANAGEDNMQIMQ_NMQICONVERTMESSAGE = 0x38d;
        public const uint MANAGEDNMQIMQ_NMQIGETMESSAGE = 910;
        public const uint MANAGEDNMQIMQ_SPINOTIFY = 0x38f;
        public const uint MANAGEDNMQIMQ_SPISUBSCRIBE = 0x390;
        public const uint MANAGEDNMQIMQ_MQCB = 0x391;
        public const uint MANAGEDNMQIMQ_MQCTL = 0x392;
        public const uint MQASYNCCONSUME_REQUESTTHREADLOCK = 0x393;
        public const uint MQASYNCCONSUME_RELEASETHREADLOCK = 0x394;
        public const uint MQASYNCCONSUME_VALIDATEMQCTLO = 0x395;
        public const uint MQASYNCCONSUME_VALIDATEMQCBD = 0x396;
        public const uint MQASYNCCONSUME_VALIDATEMQMD = 0x397;
        public const uint MQASYNCCONSUME_VALIDATEMQGMO = 920;
        public const uint MQASYNCCONSUME_SENDNOTIFICATION = 0x399;
        public const uint MQASYNCCONSUME_SENDCONSUMERSTATE = 0x39a;
        public const uint MQASYNCCONSUME_SENDCONNSTATE = 0x39b;
        public const uint MQASYNCCONSUME_ADDDISPATCHLIST = 0x39c;
        public const uint MQASYNCCONSUME_REMOVEDISPATCHLIST = 0x39d;
        public const uint MQASYNCCONSUME_SETASYNCSELECTION = 0x39e;
        public const uint MQASYNCCONSUME_CALLCONSUMER = 0x39f;
        public const uint MQASYNCCONSUME_CALLEVENTHANDLER = 0x3a0;
        public const uint MQASYNCCONSUME_DRIVEOUTSTANDING = 0x3a1;
        public const uint MQASYNCCONSUME_CHECKTXNALLOWED = 930;
        public const uint MQASYNCCONSUME_CHECKTXNMSG = 0x3a3;
        public const uint MQASYNCCONSUME_STARTINIT = 0x3a4;
        public const uint MQASYNCCONSUME_DRIVESTOPS = 0x3a5;
        public const uint MQASYNCCONSUME_DRIVEEVENTSMC = 0x3a6;
        public const uint MQASYNCCONSUME_DRIVEEVENTSEH = 0x3a7;
        public const uint MQASYNCCONSUME_CHECKACTIVECONSUMERS = 0x3a8;
        public const uint MQASYNCCONSUME_DRIVECONSUMER = 0x3a9;
        public const uint MQASYNCCONSUME_CHOOSEDISPATCHTHREAD = 0x3aa;
        public const uint MQASYNCCONSUME_CHECKDISPATCHABLEQ = 0x3ab;
        public const uint MQASYNCCONSUME_CHECKDISPATCHABLE = 940;
        public const uint MQASYNCCONSUME_MQCBSUSPENDMC = 0x3ad;
        public const uint MQASYNCCONSUME_MQCBRESUMEMC = 0x3ae;
        public const uint MQASYNCCONSUME_MQCBREGISTERMC = 0x3af;
        public const uint MQASYNCCONSUME_MQCBDEREGISTERMC = 0x3b0;
        public const uint MQASYNCCONSUME_MQCBREGISTEREH = 0x3b1;
        public const uint MQASYNCCONSUME_MQCBDEREGISTEREH = 0x3b2;
        public const uint MQASYNCCONSUME_MQCBSUSPENDEH = 0x3b3;
        public const uint MQASYNCCONSUME_MQCBRESUMEEH = 0x3b4;
        public const uint MQASYNCCONSUME_STARTWAIT = 0x3b5;
        public const uint MQASYNCCONSUME_RAISEEVENT = 950;
        public const uint MQDISPATCHTHREAD_POSTSLEEPINGEVENT = 0x3b7;
        public const uint MQDISPATCHTHREAD_WAITONSLEEPINGEVENT = 0x3b8;
        public const uint MQDISPATCHTHREAD_RUN = 0x3b9;
        public const uint MQDISPATCHTHREAD_INCREMENTDISPATCHSEQ = 0x3ba;
        public const uint MQERD_GETREASONCODE = 0x3bb;
        public const uint MQFAP_NMQIOPEN = 0x3bc;
        public const uint MQFAP_SPINOTIFY = 0x3bd;
        public const uint MQFAP_SPISUBSCRIBE = 0x3be;
        public const uint MQFAP_NMQISUBSCRIBE = 0x3bf;
        public const uint MQFAP_SPIOPEN = 960;
        public const uint MQFAPCONNECTION_QMQUIESCING = 0x3c1;
        public const uint NMQIENVIRONMENT_GETPROPERTY = 0x3c2;
        public const uint NMQIENVIRONMENT_NEWMQAIR = 0x3c3;
        public const uint NMQIENVIRONMENT_NEWMQSD = 0x3c4;
        public const uint NMQIENVIRONMENT_NEWMQSRO = 0x3c5;
        public const uint NMQIENVIRONMENT_NEWLPIND = 0x3c6;
        public const uint NMQIENVIRONMENT_NEWMQSTS = 0x3c7;
        public const uint NMQIENVIRONMENT_NEWMQBO = 0x3c8;
        public const uint NMQIENVIRONMENT_NEWQUEUEMANAGERINFO = 0x3c9;
        public const uint NMQIENVIRONMENT_NEWMQCHARV = 970;
        public const uint NMQIENVIRONMENT_NEWMQCXP = 0x3cb;
        public const uint NMQIENVIRONMENT_NEWMQPD = 0x3cc;
        public const uint NMQIENVIRONMENT_NEWMQCBC = 0x3cd;
        public const uint NMQIENVIRONMENT_NEWMQCTLO = 0x3ce;
        public const uint NMQIENVIRONMENT_NEWMQCBD = 0x3cf;
        public const uint NMQIENVIRONMENT_NEWMQSCO = 0x3d0;
        public const uint NMQIENVIRONMENT_NEWSPIOPENOPTIONS = 0x3d1;
        public const uint NMQIENVIRONMENT_NEWLPINOTIFYDETAILS = 0x3d2;
        public const uint NMQIENVIRONMENT_NEWLPISDSUBPROPS = 0x3d3;
        public const uint NMQIENVIRONMENT_NEWLPIUSD = 980;
        public const uint NMQIENVIRONMENT_NEWSPICONNECTOPTIONS = 0x3d5;
        public const uint NMQIENVIRONMENT_NEWSPIGETOPTIONS = 0x3d6;
        public const uint NMQIENVIRONMENT_NEWSPIPUTOPTIONS = 0x3d7;
        public const uint NMQIENVIRONMENT_NEWSPISD = 0x3d8;
        public const uint UNMANAGEDNMQIMQ_MQSUB = 0x3d9;
        public const uint UNMANAGEDNMQIMQ_MQSUBRQ = 0x3da;
        public const uint UNMANAGEDNMQIMQ_MQSTAT = 0x3db;
        public const uint UNMANAGEDNMQIMQ_MQCMIT = 0x3dc;
        public const uint UNMANAGEDNMQIMQ_MQBACK = 0x3dd;
        public const uint UNMANAGEDNMQIMQ_MQBEGIN = 990;
        public const uint UNMANAGEDNMQIMQ_MQCB = 0x3df;
        public const uint UNMANAGEDNMQIMQ_MQCTL = 0x3e0;
        public const uint UNMANAGEDNMQIMQ_NMQICONNECT = 0x3e1;
        public const uint UNMANAGEDNMQIMQ_SPICONNECT = 0x3e2;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT = 0x3e3;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT1 = 0x3e4;
        public const uint UNMANAGEDNMQIMQ_SPIGET = 0x3e5;
        public const uint UNMANAGEDNMQIMQ_CHECKCMDLEVEL = 0x3e6;
        public const uint UNMANAGEDNMQIMQ_NMQICONVERTMESSAGE = 0x3e7;
        public const uint UNMANAGEDNMQIMQ_NMQIGETMESSAGE = 0x3e8;
        public const uint UNMANAGEDNMQIMQ_SPIQUERYSPI = 0x3e9;
        public const uint UNMANAGEDNMQIMQ_SPINOTIFY = 0x3ea;
        public const uint UNMANAGEDNMQIMQ_SPISUBSCRIBE = 0x3eb;
        public const uint UNMANAGEDNMQIMQ_SPIOPEN = 0x3ec;
        public const uint XAUNMANAGEDNMQIMQ_MQSUB = 0x3ed;
        public const uint XAUNMANAGEDNMQIMQ_MQSUBRQ = 0x3ee;
        public const uint XAUNMANAGEDNMQIMQ_MQSTAT = 0x3ef;
        public const uint XAUNMANAGEDNMQIMQ_MQCMIT = 0x3f0;
        public const uint XAUNMANAGEDNMQIMQ_MQBACK = 0x3f1;
        public const uint XAUNMANAGEDNMQIMQ_MQBEGIN = 0x3f2;
        public const uint XAUNMANAGEDNMQIMQ_MQCB = 0x3f3;
        public const uint XAUNMANAGEDNMQIMQ_MQCTL = 0x3f4;
        public const uint XAUNMANAGEDNMQIMQ_NMQICONNECT = 0x3f5;
        public const uint XAUNMANAGEDNMQIMQ_SPICONNECT = 0x3f6;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT = 0x3f7;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT1 = 0x3f8;
        public const uint XAUNMANAGEDNMQIMQ_SPIGET = 0x3f9;
        public const uint XAUNMANAGEDNMQIMQ_CHECKCMDLEVEL = 0x3fa;
        public const uint XAUNMANAGEDNMQIMQ_NMQICONVERTMESSAGE = 0x3fb;
        public const uint XAUNMANAGEDNMQIMQ_NMQIGETMESSAGE = 0x3fc;
        public const uint XAUNMANAGEDNMQIMQ_SPIQUERYSPI = 0x3fd;
        public const uint XAUNMANAGEDNMQIMQ_SPINOTIFY = 0x3fe;
        public const uint XAUNMANAGEDNMQIMQ_SPISUBSCRIBE = 0x3ff;
        public const uint BINDINGSNMQIMQ_NMQICONSUMERMETHODBINDINGS = 0x400;
        public const uint LPISD_GETLENGTH = 0x401;
        public const uint LPISD_COPYTOLPISD32 = 0x402;
        public const uint LPISD_COPYTOLPISD = 0x403;
        public const uint MANAGEDHCONN_REQUESTDISPATCHLOCK = 0x404;
        public const uint MANAGEDHCONN_RELEASEDISPATCHLOCK = 0x405;
        public const uint MANAGEDHCONN_POSTDISPATCHTHREADEVENT = 0x406;
        public const uint MANAGEDHCONN_WAITONDISPATCHEVENT = 0x407;
        public const uint MANAGEDHCONN_DISPATCHTHREADEXCHANGE = 0x408;
        public const uint MQAUTHENTICATIONINFORMATIONRECORD_IDISPOSABLE_DISPOSE = 0x409;
        public const uint MQCHARV_GETLENGTH = 0x40a;
        public const uint MQCHARV_COPYTOMQCHARV32 = 0x40b;
        public const uint MQCHARV_COPYTOMQCHARV = 0x40c;
        public const uint MQCLIENTCONNECTOR_GETPROPERTY = 0x40d;
        public const uint MQCLIENTCONNECTOR_SPIOPEN = 0x40e;
        public const uint MQCLIENTXACONNECTOR_GETPROPERTY = 0x40f;
        public const uint MQCLIENTXACONNECTOR_SPIOPEN = 0x410;
        public const uint MQDESTINATION_IDISPOSABLE_DISPOSE = 0x411;
        public const uint MQDLH_GETSIZE = 0x412;
        public const uint MQDLH_WRITESTRUCT = 0x413;
        public const uint MQDLH_READSTRUCT = 0x414;
        public const uint MQDLH_SETPUTDATETIME = 0x415;
        public const uint MQMANAGEDCLIENTCONNECTOR_SPIOPEN = 0x416;
        public const uint MQOBJECTDESCRIPTOR_GETLENGTH = 0x417;
        public const uint MQOBJECTDESCRIPTOR_CALCULATEOFFSETS = 0x418;
        public const uint MQOBJECTDESCRIPTOR_COPYTOMQOD32 = 0x419;
        public const uint MQOBJECTDESCRIPTOR_COPYTOMQOD = 0x41a;
        public const uint MQPROCESS_IDISPOSABLE_DISPOSE = 0x41b;
        public const uint MQPROXYQUEUE_COPYMDTOUSERMD = 0x41c;
        public const uint MQQUEUEMANAGER_IDISPOSABLE_DISPOSE = 0x41d;
        public const uint MQSERVERCONNECTOR_GETPROPERTY = 0x41e;
        public const uint MQSERVERCONNECTOR_SPIOPEN = 0x41f;
        public const uint MQSPINOTIFYIN_TOBUFFER = 0x420;
        public const uint MQSPINOTIFYIN_WRITESTRUCT = 0x421;
        public const uint MQSPINOTIFYINOUT_TOBUFFER = 0x422;
        public const uint MQSPINOTIFYINOUT_WRITESTRUCT = 0x423;
        public const uint MQSPINOTIFYINOUT_READSTRUCT = 0x424;
        public const uint MQSPINOTIFYOUT_TOBUFFER = 0x425;
        public const uint MQSPINOTIFYOUT_WRITESTRUCT = 0x426;
        public const uint MQSPINOTIFYOUT_READSTRUCT = 0x427;
        public const uint MQSPIOPENIN_TOBUFFER = 0x428;
        public const uint MQSPIOPENIN_WRITESTRUCT = 0x429;
        public const uint MQSPIOPENINOUT_GETHDRVERSIONLENGTH = 0x42a;
        public const uint MQSPIOPENINOUT_TOBUFFER = 0x42b;
        public const uint MQSPIOPENINOUT_WRITESTRUCT = 0x42c;
        public const uint MQSPIOPENINOUT_READSTRUCT = 0x42d;
        public const uint MQSPIOPENOUT_TOBUFFER = 0x42e;
        public const uint MQSPIOPENOUT_WRITESTRUCT = 0x42f;
        public const uint MQSPIOPENOUT_READSTRUCT = 0x430;
        public const uint MQSPISUBSCRIBEIN_TOBUFFER = 0x431;
        public const uint MQSPISUBSCRIBEIN_WRITESTRUCT = 0x432;
        public const uint MQSPISUBSCRIBEINOUT_GETHDRVERSIONLENGTH = 0x433;
        public const uint MQSPISUBSCRIBEINOUT_TOBUFFER = 0x434;
        public const uint MQSPISUBSCRIBEINOUT_WRITESTRUCT = 0x435;
        public const uint MQSPISUBSCRIBEINOUT_READSTRUCT = 0x436;
        public const uint MQSPISUBSCRIBEOUT_TOBUFFER = 0x437;
        public const uint MQSPISUBSCRIBEOUT_WRITESTRUCT = 0x438;
        public const uint MQSPISUBSCRIBEOUT_READSTRUCT = 0x439;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETLENGTH = 0x43a;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_CALCULATEOFFSETS = 0x43b;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_COPYTOMQSD32 = 0x43c;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_COPYTOMQSD = 0x43d;
        public const uint NMQIENVIRONMENT_NEWMQDLH = 0x43e;
        public const uint UNMANAGEDNMQIMQ_NMQICONSUMERMETHODUM = 0x43f;
        public const uint XAUNMANAGEDNMQIMQ_MQCB2 = 0x440;
        public const uint XAUNMANAGEDNMQIMQ_MQCTL2 = 0x441;
        public const uint XAUNMANAGEDNMQIMQ_SPIOPEN = 0x442;
        public const uint XAUNMANAGEDNMQIMQ_NMQICONSUMERMETHODXA = 0x443;
        public const uint BINDINGSNMQIMQ_NMQIPUT2 = 0x444;
        public const uint BINDINGSNMQIMQ_NMQIPUT3 = 0x445;
        public const uint BINDINGSNMQIMQ_NMQIPUT12 = 0x446;
        public const uint BINDINGSNMQIMQ_NMQIPUT13 = 0x447;
        public const uint MANAGEDNMQIMQ_NMQIPUT2 = 0x448;
        public const uint MANAGEDNMQIMQ_NMQIPUT3 = 0x449;
        public const uint MANAGEDNMQIMQ_NMQIPUT12 = 0x44a;
        public const uint MANAGEDNMQIMQ_NMQIPUT13 = 0x44b;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT2 = 0x44c;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT3 = 0x44d;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT12 = 0x44e;
        public const uint UNMANAGEDNMQIMQ_NMQIPUT13 = 0x44f;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT2 = 0x450;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT3 = 0x451;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT12 = 0x452;
        public const uint XAUNMANAGEDNMQIMQ_NMQIPUT13 = 0x453;
        public const uint MQFAP_ISDISPATCHTHREAD = 0x454;
        public const uint BINDINGSNMQIMQ_SPIQUERYSPI = 0x455;
        public const uint BINDINGSNMQIMQ_SPIACTIVATEMESSAGE = 0x456;
        public const uint BINDINGSNMQIMQ_SPISYNCPOINT = 0x457;
        public const uint BINDINGSNMQIMQ_SPIPUT = 0x458;
        public const uint BINDINGSNMQIMQ_SPIGET2 = 0x459;
        public const uint BINDINGSNMQIMQ_ZSTMQGET = 0x45a;
        public const uint MANAGEDNMQIMQ_SPIQUERYSPI = 0x45b;
        public const uint MANAGEDNMQIMQ_SPIACTIVATEMESSAGE = 0x45c;
        public const uint MANAGEDNMQIMQ_SPISYNCPOINT = 0x45d;
        public const uint MANAGEDNMQIMQ_SPIPUT = 0x45e;
        public const uint MANAGEDNMQIMQ_SPIGET2 = 0x45f;
        public const uint MANAGEDNMQIMQ_ZSTMQGET = 0x460;
        public const uint MQCONN_CHECKARRAYLENGTH = 0x461;
        public const uint MQDLH_CHECKARRAYLENGTH = 0x462;
        public const uint MQGETMESSAGEOPTIONS_CHECKARRAYLENGTH = 0x463;
        public const uint MQMESSAGEDESCRIPTOR_CHECKARRAYLENGTH = 0x464;
        public const uint MQOBJECTDESCRIPTOR_GETPADDEDLENGTH2 = 0x465;
        public const uint MQOBJECTDESCRIPTOR_CHECKARRAYLENGTH = 0x466;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETPADDEDLENGTH2 = 0x467;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_CHECKARRAYLENGTH = 0x468;
        public const uint LPISDSUBPROPS_CHECKARRAYLENGTH = 0x469;
        public const uint LPIUSD_CHECKARRAYLENGTH = 0x46a;
        public const uint MQSPIPRODIDIN_TOBUFFER = 0x46b;
        public const uint MQSPIPRODIDIN_WRITESTRUCT = 0x46c;
        public const uint MQSPIPRODIDINOUT_TOBUFFER = 0x46d;
        public const uint MQSPIPRODIDINOUT_WRITESTRUCT = 0x46e;
        public const uint MQSPIPRODIDOUT_TOBUFFER = 0x46f;
        public const uint MQSPIPRODIDOUT_WRITESTRUCT = 0x470;
        public const uint UNMANAGEDNMQIMQ_SETPRODUCTIDENTIFIER = 0x471;
        public const uint UNMANAGEDNMQIMQ_SPIQUERYSPI2 = 0x472;
        public const uint UNMANAGEDNMQIMQ_SPIACTIVATEMESSAGE = 0x473;
        public const uint UNMANAGEDNMQIMQ_SPISYNCPOINT = 0x474;
        public const uint UNMANAGEDNMQIMQ_SPIPUT = 0x475;
        public const uint UNMANAGEDNMQIMQ_SPIGET2 = 0x476;
        public const uint UNMANAGEDNMQIMQ_ZSTMQGET = 0x477;
        public const uint UNMANAGEDNMQIMQ_GETSHARINGCONVERSATIONSVALUE = 0x478;
        public const uint XAUNMANAGEDNMQIMQ_SETPRODUCTIDENTIFIER = 0x479;
        public const uint XAUNMANAGEDNMQIMQ_SPIQUERYSPI2 = 0x47a;
        public const uint XAUNMANAGEDNMQIMQ_SPIACTIVATEMESSAGE = 0x47b;
        public const uint XAUNMANAGEDNMQIMQ_SPISYNCPOINT = 0x47c;
        public const uint XAUNMANAGEDNMQIMQ_SPIPUT = 0x47d;
        public const uint XAUNMANAGEDNMQIMQ_SPIGET2 = 0x47e;
        public const uint XAUNMANAGEDNMQIMQ_ZSTMQGET = 0x47f;
        public const uint XAUNMANAGEDNMQIMQ_GETSHARINGCONVERSATIONSVALUE = 0x480;
        public const uint BINDINGSNMQIMQ_SPIQUERYSPI2 = 0x481;
        public const uint BINDINGSNMQIMQ_SPIACTIVATEMESSAGE2 = 0x482;
        public const uint BINDINGSNMQIMQ_SPISYNCPOINT2 = 0x483;
        public const uint BINDINGSNMQIMQ_SPIPUT2 = 0x484;
        public const uint BINDINGSNMQIMQ_SPIGET3 = 0x485;
        public const uint BINDINGSNMQIMQ_ZSTMQGET2 = 0x486;
        public const uint MANAGEDNMQIMQ_SPIQUERYSPI2 = 0x487;
        public const uint MANAGEDNMQIMQ_SPIACTIVATEMESSAGE2 = 0x488;
        public const uint MANAGEDNMQIMQ_SPISYNCPOINT2 = 0x489;
        public const uint MANAGEDNMQIMQ_SPIPUT2 = 0x48a;
        public const uint MANAGEDNMQIMQ_SPIGET3 = 0x48b;
        public const uint MANAGEDNMQIMQ_ZSTMQGET2 = 0x48c;
        public const uint MQCBC_WRITESTRUCT = 0x48d;
        public const uint MQCBC_READSTRUCT = 0x48e;
        public const uint MQCBD_WRITESTRUCT = 0x48f;
        public const uint MQCBD_CHECKARRAYLENGTH = 0x490;
        public const uint MQCBD_READSTRUCT = 0x491;
        public const uint MQCBD_COPYMQCBD = 0x492;
        public const uint MQCTLO_WRITESTRUCT = 0x493;
        public const uint MQCTLO_READSTRUCT = 0x494;
        public const uint MQPROXYQUEUE_RELEASEWAITINGGETTERS = 0x495;
        public const uint MQCHANNELEXITHANDLER_PROCESSSECURITYPARMS = 0x496;
        public const uint MQTCPCONNECTION_ISSOCKETCONNECTED = 0x497;
        public const uint MQTCPCONNECTION_SENDHEARTBEAT = 0x498;
        public const uint LPINOTIFYDETAILS_WRITESTRUCT = 0x499;
        public const uint LPINOTIFYDETAILS_CHECKARRAYLENGTH = 0x49a;
        public const uint LPINOTIFYDETAILS_READSTRUCT = 0x49b;
        public const uint SPICONNECTOPTIONS_GETREQUIREDBUFFERSIZE2 = 0x49c;
        public const uint SPICONNECTOPTIONS_WRITESTRUCT2 = 0x49d;
        public const uint SPICONNECTOPTIONS_READSTRUCT2 = 0x49e;
        public const uint SPIGETOPTIONS_GETREQUIREDBUFFERSIZE2 = 0x49f;
        public const uint SPIGETOPTIONS_WRITESTRUCT2 = 0x4a0;
        public const uint SPIGETOPTIONS_READSTRUCT2 = 0x4a1;
        public const uint SPIOPENOPTIONS_WRITESTRUCT2 = 0x4a2;
        public const uint SPIOPENOPTIONS_READSTRUCT2 = 0x4a3;
        public const uint UNMANAGEDNMQIMQ_SPIQUERYSPI3 = 0x4a4;
        public const uint UNMANAGEDNMQIMQ_SPIACTIVATEMESSAGE2 = 0x4a5;
        public const uint UNMANAGEDNMQIMQ_SPISYNCPOINT2 = 0x4a6;
        public const uint UNMANAGEDNMQIMQ_SPIPUT2 = 0x4a7;
        public const uint UNMANAGEDNMQIMQ_SPIGET3 = 0x4a8;
        public const uint UNMANAGEDNMQIMQ_ZSTMQGET2 = 0x4a9;
        public const uint UNMANAGEDNMQIMQ_GETSHARINGCONVERSATIONSVALUE2 = 0x4aa;
        public const uint XAUNMANAGEDNMQIMQ_SPIQUERYSPI3 = 0x4ab;
        public const uint XAUNMANAGEDNMQIMQ_SPIACTIVATEMESSAGE2 = 0x4ac;
        public const uint XAUNMANAGEDNMQIMQ_SPISYNCPOINT2 = 0x4ad;
        public const uint XAUNMANAGEDNMQIMQ_SPIPUT2 = 0x4ae;
        public const uint XAUNMANAGEDNMQIMQ_SPIGET3 = 0x4af;
        public const uint XAUNMANAGEDNMQIMQ_ZSTMQGET2 = 0x4b0;
        public const uint XAUNMANAGEDNMQIMQ_GETSHARINGCONVERSATIONSVALUE2 = 0x4b1;
        public const uint MQASYNCCONSUME_RESETRECONNECTIONEVENTS = 0x4b2;
        public const uint MANAGEDHCONN_GETUID = 0x4b3;
        public const uint MANAGEDHCONN_ISRECONNECTABLEHCONN = 0x4b4;
        public const uint MANAGEDRECONNECTABLEHCONN_ADDHOBJ = 0x4b5;
        public const uint MANAGEDRECONNECTABLEHCONN_ADDHSUB = 0x4b6;
        public const uint MANAGEDRECONNECTABLEHCONN_REMOVEHOBJ = 0x4b7;
        public const uint MANAGEDRECONNECTABLEHCONN_RECONNECT = 0x4b8;
        public const uint MANAGEDRECONNECTABLEHCONN_RECONNECT2 = 0x4b9;
        public const uint MANAGEDRECONNECTABLEHCONN_DRIVEEVENTHANDLER = 0x4ba;
        public const uint MANAGEDRECONNECTABLEHCONN_HASFAILED = 0x4bb;
        public const uint MANAGEDRECONNECTABLEHCONN_HASFAILED2 = 0x4bc;
        public const uint MANAGEDRECONNECTABLEHCONN_CHECKUSABLE = 0x4bd;
        public const uint MANAGEDRECONNECTABLEHCONN_ISRECONNECTABLEHCONN = 0x4be;
        public const uint MANAGEDRECONNECTABLEHOBJ_EQUALS = 0x4bf;
        public const uint MANAGEDRECONNECTABLEHSUB_GETEXPIRYREMAINDER = 0x4c0;
        public const uint MQMANAGEDRECONNECTABLETHREAD_RUN = 0x4c1;
        public const uint MQMANAGEDRECONNECTABLETHREAD_BESTHCONN = 0x4c2;
        public const uint MQMANAGEDRECONNECTABLETHREAD_RECONNECT = 0x4c3;
        public const uint MQMANAGEDRECONNECTABLETHREAD_ADDRECONNECTABLEHCONN = 0x4c4;
        public const uint MQMANAGEDRECONNECTABLETHREAD_REMOVERECONNECTABLEHCONN = 0x4c5;
        public const uint MQMANAGEDRECONNECTABLETHREAD_BUILDRECONNECTIONTIMES = 0x4c6;
        public const uint MQMANAGEDRECONNECTABLETHREAD_RECONNECTIONCOMPLETE = 0x4c7;
        public const uint MQCHANNELDEFINITION_CLONE = 0x4c8;
        public const uint MQCHANNELLISTENTRY_CREATECHANNELENTRYLISTS = 0x4c9;
        public const uint MQCOMMSBUFFERIMPL_CHECKPOOL = 0x4ca;
        public const uint MQCOMMSBUFFERIMPL_THROWBUFFEREXCEPTION = 0x4cb;
        public const uint MQCOMMSBUFFERIMPL_ISVALID = 0x4cc;
        public const uint BINDINGSNMQIMQ_NMQICONNECT2 = 0x4cd;
        public const uint MANAGEDRECONNECTABLEHCONN_RECONNECT3 = 0x4ce;
        public const uint MANAGEDRECONNECTABLEHCONN_ELIGIBLEFORRECONNECT = 0x4cf;
        public const uint MANAGEDRECONNECTABLEHCONN_TOSTRING = 0x4d0;
        public const uint MANAGEDRECONNECTABLEHCONN_SETRECONNECTIONFAILURE = 0x4d1;
        public const uint MANAGEDRECONNECTABLEHCONN_SETUPCALLBACK = 0x4d2;
        public const uint MANAGEDRECONNECTABLEHCONN_SETUPEVENTHANDLER = 0x4d3;
        public const uint MANAGEDRECONNECTABLEHOBJ_TOSTRING = 0x4d4;
        public const uint MANAGEDRECONNECTABLEHOBJ_SETUPCALLBACK = 0x4d5;
        public const uint MANAGEDRECONNECTABLEHSUB_TOSTRING = 0x4d6;
        public const uint MANAGEDNMQIMQ_GETNAMELISTFROMMQCD = 0x4d7;
        public const uint MANAGEDNMQIMQ_NMQICONNECT2 = 0x4d8;
        public const uint MANAGEDNMQIMQ_NMQISPIOPEN = 0x4d9;
        public const uint MANAGEDNMQIMQ_NMQISUBSCRIBE = 0x4da;
        public const uint MANAGEDNMQIMQ_NMQISUBSCRIBEREQUEST = 0x4db;
        public const uint MANAGEDNMQIMQ_NMQIOPEN = 0x4dc;
        public const uint MANAGEDNMQIMQ_NMQIGET = 0x4dd;
        public const uint MANAGEDNMQIMQ_NMQIMQSTAT = 0x4de;
        public const uint MANAGEDNMQIMQ_NMQIMQBACK = 0x4df;
        public const uint MANAGEDNMQIMQ_NMQIMQCMIT = 0x4e0;
        public const uint MANAGEDNMQIMQ_NMQISPISUBSCRIBE = 0x4e1;
        public const uint MANAGEDNMQIMQ_NMQISPINOTIFY = 0x4e2;
        public const uint MANAGEDNMQIMQ_NMQISET = 0x4e3;
        public const uint MANAGEDNMQIMQ_NMQIINQ = 0x4e4;
        public const uint MANAGEDNMQIMQ_NMQIMQCLOSE = 0x4e5;
        public const uint MANAGEDNMQIMQ_HANDLEDOOMEDTRANSACTION = 0x4e6;
        public const uint MQFAP_GETMAXBUFLEN = 0x4e7;
        public const uint MQFAP_INEXIT = 0x4e8;
        public const uint MQFAPCONNECTION_ISRECONNECTABLE = 0x4e9;
        public const uint MQFAPCONNECTION_NOTIFYRECONNECT = 0x4ea;
        public const uint MQMANAGEDRECONNECTABLETHREAD_ELIGIBLEFORRECONNECT = 0x4eb;
        public const uint MQPROXYQUEUE_NOTIFYRECONNECT = 0x4ec;
        public const uint MQSUBSCRIPTIONDESCRIPTOR_GETREQUIREDBUFFERSIZEWORESOBJ = 0x4ed;
        public const uint MQTSH_CHECKTSH = 0x4ee;
        public const uint UNMANAGEDNMQIMQ_NMQICONNECT2 = 0x4ef;
        public const uint XAUNMANAGEDNMQIMQ_NMQICONNECT2 = 0x4f0;
        public const uint MQASYNCCONSUME_CLEARDISPATCHERQUEUELIST = 0x4f1;
        public const uint MANAGEDHCONN_CHECKUOWNOTMIXED = 0x4f2;
        public const uint MANAGEDHCONN_VALIDATECONNECTOPTIONSFORXA = 0x4f3;
        public const uint MANAGEDHCONN_ENLISTMENTREQUIRED = 0x4f4;
        public const uint MANAGEDNMQIMQ_TRANSACTIONCHECK = 0x4f5;
        public const uint MQFAPCONNECTION_PROTOCOLDISCONNECT = 0x4f6;
        public const uint MQRCVTHREAD_ISDISCONNECTING = 0x4f7;
        public const uint MQDTCCALLBACKOBSERVER_ENLISTTRANSACTIONINTODTC = 0x4f8;
        public const uint MQDTCCALLBACKOBSERVER_ENLISTOPENEDTRANSACTION = 0x4f9;
        public const uint MQDTCCALLBACKOBSERVER_GENERATEGUID = 0x4fa;
        public const uint MQDTCCALLBACKOBSERVER_SINGLEPHASECOMMIT = 0x4fb;
        public const uint MQDTCCALLBACKOBSERVER_COMMIT = 0x4fc;
        public const uint MQDTCCALLBACKOBSERVER_INDOUBT = 0x4fd;
        public const uint MQDTCCALLBACKOBSERVER_PREPARE = 0x4fe;
        public const uint MQDTCCALLBACKOBSERVER_ROLLBACK = 0x4ff;
        public const uint MQXAINFO_SETXAINFO = 0x500;
        public const uint MQXAINFO_COVERTXASTRINGTOBYTES = 0x501;
        public const uint MQXAINFO_WRITESTRUCT = 0x502;
        public const uint MQXAINFO_READSTRUCT = 0x503;
        public const uint MQXID_READBYTES = 0x504;
        public const uint MQXID_SETXID = 0x505;
        public const uint MQXID_WRITESTRUCT = 0x506;
        public const uint MQXID_READXIDFROMBYTES = 0x507;
        public const uint MQXID_GENERATEGTRID = 0x508;
        public const uint MQXID_TOSTRING = 0x509;
        public const uint MQXID_EQUALS = 0x50a;
        public const uint NMQIXARESOURCEMANAGER_INITIALIZEMQRMI = 0x50b;
        public const uint NMQIXARESOURCEMANAGER_CURRENT_TRANSACTIONCOMPLETED = 0x50c;
        public const uint NMQIXARESOURCEMANAGER_GETBRANCHQUALIFIER = 0x50d;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXAOPEN = 0x50e;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXASTART = 0x50f;
        public const uint NMQIXARESOURCEMANAGER_THROWIFTRANSACTIONALREADYACTIVE = 0x510;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXAEND = 0x511;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXAPREPARE = 0x512;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXACOMMIT = 0x513;
        public const uint NMQIXARESOURCEMANAGER_MQRMIXAROLLBACK = 0x514;
        public const uint NMQIXARESOURCEMANAGER_MQRMIDISC = 0x515;
        public const uint NMQIXARESOURCEMANAGER_WAITFORINPROGRESSTRANSACTION = 0x516;
        public const uint NMQIXARESOURCEMANAGER_DISCONNECTXACONNECTION = 0x517;
        public const uint NMQIXARESOURCEMANAGER_XACLOSE = 0x518;
        public const uint MQMONITORLOGWRITTER_WRITELOG = 0x519;
        public const uint MQMONITORLOGWRITTER_WRITETRANSACTIONID = 0x51a;
        public const uint MQMONITORLOGWRITTER_WRITELOG2 = 0x51b;
        public const uint MQMONITORLOGWRITTER_GETHEADER = 0x51c;
        public const uint MQMONITORLOGWRITTER_CLOSE = 0x51d;
        public const uint MQMONITORLOGWRITTER_DISPOSE = 0x51e;
        public const uint MQTRANSACTIONRECOVERY_INITIALIZEFORRECOVERY = 0x51f;
        public const uint MQTRANSACTIONRECOVERY_INITIATEFORRECOVERY = 0x520;
        public const uint MQTRANSACTIONRECOVERY_RUNRECOVERY = 0x521;
        public const uint MQTRANSACTIONRECOVERY_RECOVERTRANSACTION = 0x522;
        public const uint MQRECOVERYENLISTMENT_CHECKXIDLISTEDINCOMPLETEINWMQ = 0x523;
        public const uint MQRECOVERYENLISTMENT_COMMIT = 0x524;
        public const uint MQRECOVERYENLISTMENT_HEURISTICTRANSACTIONCOMPLETION = 0x525;
        public const uint MQRECOVERYENLISTMENT_ROLLBACK = 0x526;
        public const uint MQRECOVERYENLISTMENT_INDOUBT = 0x527;
        public const uint MQRECOVERYENLISTMENT_PREPARE = 0x528;
        public const uint MQXARECOVERYBRIDGE_MQXARECOVERYBRIDGE = 0x529;
        public const uint MQXARECOVERYBRIDGE_INITIALIZETRANSACTIONRECOVERY = 0x52a;
        public const uint MQXARECOVERYBRIDGE_LOGCURRENTTRANSACTIONSTART = 0x52b;
        public const uint MQXARECOVERYBRIDGE_LOGCURRENTTRANSACTIONEND = 0x52c;
        public const uint MQFAP_XA_OPEN = 0x52d;
        public const uint MQFAP_XA_START = 0x52e;
        public const uint MQFAP_XA_END = 0x52f;
        public const uint MQFAP_XA_PREPARE = 0x530;
        public const uint MQFAP_XA_COMMIT = 0x531;
        public const uint MQFAP_XA_ROLLBACK = 0x532;
        public const uint MQFAP_XA_FORGET = 0x533;
        public const uint MQFAP_XA_RECOVER = 0x534;
        public const uint MQFAP_XA_CLOSE = 0x535;
        public const uint MQSPISHARECNVIN_TOBUFFER = 0x536;
        public const uint MQSPISHARECNVIN_WRITESTRUCT = 0x537;
        public const uint MQSPISHARECNVINOUT_TOBUFFER = 0x538;
        public const uint MQSPISHARECNVINOUT_WRITESTRUCT = 0x539;
        public const uint MQSPISHARECNVOUT_TOBUFFER = 0x53a;
        public const uint MQSPISHARECNVOUT_WRITESTRUCT = 0x53b;
        public const uint MQSPISHARECNVOUT_READSTRUCT = 0x53c;
        public const uint MQQUEUEMANAGER_CHECKHCONNHEALTH = 0x53d;
        public const uint MANAGEDHCONN_CHECKCLIENTEMPTY = 0x53e;
        public const uint MANAGEDHCONN_CHECKDISPATCHABLE = 0x53f;
        public const uint MANAGEDHCONN_CHECKTXNALLOWED = 0x540;
        public const uint MANAGEDHCONN_POSTDISPATCHTHREADEVENT2 = 0x541;
        public const uint MANAGEDHCONN_WAITONDISPATCHEVENT2 = 0x542;
        public const uint MANAGEDHCONN_DISPATCHTHREADEXCHANGE2 = 0x543;
        public const uint MANAGEDHCONN_DRIVEEVENTSEH = 0x544;
        public const uint MANAGEDHCONN_DRIVEOUTSTANDING = 0x545;
        public const uint MANAGEDHCONN_HASEVENTSOUTSTANDING = 0x546;
        public const uint MANAGEDHCONN_INITIALIZEFORRECONNECT = 0x547;
        public const uint MANAGEDHCONN_LEAVECALL = 0x548;
        public const uint MANAGEDHCONN_LEAVECALL2 = 0x549;
        public const uint MANAGEDHCONN_LEAVENOTIFYCALL = 0x54a;
        public const uint MANAGEDHCONN_LEAVECALL3 = 0x54b;
        public const uint MANAGEDHCONN_REQUESTDISPATCHLOCK2 = 0x54c;
        public const uint MANAGEDHCONN_RELEASEDISPATCHLOCK2 = 0x54d;
        public const uint MANAGEDHCONN_FULLYRELEASEDISPATCHLOCK = 0x54e;
        public const uint MANAGEDHCONN_REQUESTTHREADLOCK = 0x54f;
        public const uint MANAGEDHCONN_RELEASETHREADLOCK = 0x550;
        public const uint MANAGEDHCONN_RESETRECONNECTIONEVENTS = 0x551;
        public const uint MANAGEDHCONN_SENDCONNSTATE = 0x552;
        public const uint MANAGEDHCONN_SENDNOTIFICATION = 0x553;
        public const uint MANAGEDHCONN_SETDISCONNECTED = 0x554;
        public const uint MANAGEDHCONN_ADDHSUB = 0x555;
        public const uint MANAGEDHCONN_ADDHOBJ = 0x556;
        public const uint MANAGEDHCONN_RAISEEVENT = 0x557;
        public const uint MANAGEDHCONN_REMOVEHOBJ = 0x558;
        public const uint MANAGEDHCONN_RECONNECT = 0x559;
        public const uint MANAGEDHCONN_WAITFORRECONNECTION = 0x55a;
        public const uint MANAGEDHCONN_WAKEUPALLAFTERRECONNECTION = 0x55b;
        public const uint MANAGEDHCONN_WAKEUPAFTERRECONNECTION = 0x55c;
        public const uint MANAGEDHCONN_ELIGIBLEFORRECONNECT = 0x55d;
        public const uint MANAGEDHCONN_ENTERCALL = 0x55e;
        public const uint MANAGEDHCONN_ENTERCALL2 = 0x55f;
        public const uint MANAGEDHCONN_ENTERNOTIFYCALL = 0x560;
        public const uint MANAGEDHCONN_ENTERCALL3 = 0x561;
        public const uint MANAGEDHCONN_HASFAILED = 0x562;
        public const uint MANAGEDHCONN_RECONNECTED = 0x563;
        public const uint MANAGEDHCONN_SETUPCALLBACK = 0x564;
        public const uint MANAGEDHCONN_SETUPEVENTHANDLER = 0x565;
        public const uint MANAGEDHCONN_ISCALLBACKSTARTED = 0x566;
        public const uint MANAGEDHCONN_ISCALLBACKSUSPENDED = 0x567;
        public const uint MANAGEDHCONN_CHECKUSABLE = 0x568;
        public const uint MANAGEDHCONN_SETRECONNECTIONFAILURE = 0x569;
        public const uint MANAGEDHCONN_GETRECONNECTIONTIMEOUT = 0x56a;
        public const uint MANAGEDHCONN_WAKEGETTERS = 0x56b;
        public const uint MANAGEDHCONN_QMQUIESCING = 0x56c;
        public const uint MANAGEDHCONN_CALLEVENTHANDLER = 0x56d;
        public const uint MANAGEDHCONN_MQCBREGISTEREH = 0x56e;
        public const uint MANAGEDHCONN_MQCBDEREGISTEREH = 0x56f;
        public const uint MANAGEDHCONN_MQCBSUSPENDEH = 0x570;
        public const uint MANAGEDHCONN_MQCBRESUMEEH = 0x571;
        public const uint MANAGEDHCONN_ADDTODISPATCHLIST = 0x572;
        public const uint MANAGEDHCONN_REMOVEFROMDISPATCHLIST = 0x573;
        public const uint MANAGEDHCONN_STARTINIT = 0x574;
        public const uint MANAGEDHCONN_DRIVESTOPS = 0x575;
        public const uint MANAGEDHCONN_DELIVEREXCEPTION = 0x576;
        public const uint MANAGEDHCONN_DOSUSPEND = 0x577;
        public const uint MANAGEDHCONN_CHECKTXNMESSAGE = 0x578;
        public const uint MANAGEDHCONN_DOSTOP = 0x579;
        public const uint MANAGEDHCONN_ISQUIESCING = 0x57a;
        public const uint MANAGEDHCONN_SETQUIESCING = 0x57b;
        public const uint MANAGEDHCONN_UNSETQUIESCING = 0x57c;
        public const uint MANAGEDHCONN_ISTRANSACTIONDOOMED = 0x57d;
        public const uint MANAGEDHCONN_ISSUSPENDED = 0x57e;
        public const uint MANAGEDHCONN_SUSPENDPENDING = 0x57f;
        public const uint MANAGEDHCONN_SETSUSPENDED = 0x580;
        public const uint MANAGEDHCONN_UNSETSUSPENDED = 0x581;
        public const uint MANAGEDHCONN_ISSTARTED = 0x582;
        public const uint MANAGEDHCONN_SETSTARTED = 0x583;
        public const uint MANAGEDHCONN_UNSETSTARTED = 0x584;
        public const uint MANAGEDHCONN_SETSTOPPENDING = 0x585;
        public const uint MANAGEDHCONN_ISXACONNECTED = 0x586;
        public const uint MANAGEDHCONN_UNSETSUSPENDPENDING = 0x587;
        public const uint MANAGEDHCONN_STOPPENDING = 0x588;
        public const uint MANAGEDHCONN_INTRANSACTION = 0x589;
        public const uint MANAGEDHCONN_SETINTRANSACTION = 0x58a;
        public const uint MANAGEDHCONN_UNSETINTRANSACTION = 0x58b;
        public const uint MANAGEDHCONN_SETSUSPENDPENDING = 0x58c;
        public const uint MANAGEDHCONN_SETSUSPENDING = 0x58d;
        public const uint MANAGEDHCONN_CONSUMERSCHANGED = 0x58e;
        public const uint MANAGEDHCONN_SETCONSUMERSCHANGED = 0x58f;
        public const uint MANAGEDHCONN_SETTRANSACTIONDOOMED = 0x590;
        public const uint MANAGEDHCONN_UNSETTRANSACTIONDOOMED = 0x591;
        public const uint MANAGEDHCONN_WAITFORTRANSACTIONEND = 0x592;
        public const uint MANAGEDHCONN_PULSETRANSACTIONENDWAIT = 0x593;
        public const uint MANAGEDHOBJ_SETUPCALLBACK = 0x594;
        public const uint MANAGEDHSUB_GEEXPIRYREMAINDER = 0x595;
        public const uint MQCONNECTIONSPECIFICATION_EQUALS = 0x596;
        public const uint MQCONNECTIONSPECIFICATION_REGISTERCONNECTION = 0x597;
        public const uint MQCONNECTIONSPECIFICATION_GETSESSION = 0x598;
        public const uint MQCONNECTIONSPECIFICATION_GETSESSIONFROMNEWCONNECTION = 0x599;
        public const uint MQCONNECTIONSPECIFICATION_CREATEANDCONNECTCONNECTION = 0x59a;
        public const uint MQCONNECTIONSPECIFICATION_GETSESSIONFROMELIGIBLECONNECTION = 0x59b;
        public const uint MQCONNECTIONSPECIFICATION_GETCONNECTOPTIONS = 0x59c;
        public const uint MQCONNECTIONSPECIFICATION_REMOVECONNECTION = 0x59d;
        public const uint MQCONNECTIONSPECIFICATION_ADDCONNECTION = 0x59e;
        public const uint MQFAP_READMQSERVER = 0x59f;
        public const uint MQFAP_GETNAMELIST = 0x5a0;
        public const uint MQFAP_FINDNAMELISTENTRY = 0x5a1;
        public const uint MQFAP_CREATENAMELISTENTRYFROMCCDT = 0x5a2;
        public const uint MQFAP_CREATENAMELISTENTRYFROMCCDT2 = 0x5a3;
        public const uint MQFAP_GETNAMELISTFROMMQCD = 0x5a4;
        public const uint MQFAP_FREENAMEENTRIES = 0x5a5;
        public const uint MQFAP_MQBEGIN = 0x5a6;
        public const uint MQFAP_MQCONN = 0x5a7;
        public const uint MQFAP_MQCONNX = 0x5a8;
        public const uint MQFAP_GETMANAGEDHCONN = 0x5a9;
        public const uint MQFAP_GETMANAGEDHOBJ = 0x5aa;
        public const uint MQFAP_MQCB = 0x5ab;
        public const uint MQFAP_NMQICONNECT = 0x5ac;
        public const uint MQFAP_SPICONNECT = 0x5ad;
        public const uint MQFAP_NMQICONNECT2 = 0x5ae;
        public const uint MQFAP_MQCTL = 0x5af;
        public const uint MQFAP_MQDISC = 0x5b0;
        public const uint MQFAP_MQOPEN2 = 0x5b1;
        public const uint MQFAP_MQOPEN3 = 0x5b2;
        public const uint MQFAP_THREADISRECONNECTTHREAD = 0x5b3;
        public const uint MQFAP_NMQIOPEN2 = 0x5b4;
        public const uint MQFAP_MQCLOSE2 = 0x5b5;
        public const uint MQFAP_MQPUT2 = 0x5b6;
        public const uint MQFAP_NMQIPUT = 0x5b7;
        public const uint MQFAP_MQPUT12 = 0x5b8;
        public const uint MQFAP_NMQIPUT1 = 0x5b9;
        public const uint MQFAP_SPIGET2 = 0x5ba;
        public const uint MQFAP_MQGET2 = 0x5bb;
        public const uint MQFAP_NMQIGET = 0x5bc;
        public const uint MQFAP_ZSTMQGET2 = 0x5bd;
        public const uint MQFAP_CHECKGETOPTIONS = 0x5be;
        public const uint MQFAP_MQSUB2 = 0x5bf;
        public const uint MQFAP_MQSUB3 = 0x5c0;
        public const uint MQFAP_SPIQUERYSPI3 = 0x5c1;
        public const uint MQFAP_SPIQUERYSPI4 = 0x5c2;
        public const uint MQFAP_SPINOTIFY2 = 0x5c3;
        public const uint MQFAP_SPISUBSCRIBE2 = 0x5c4;
        public const uint MQFAP_SPIOPEN2 = 0x5c5;
        public const uint MQFAP_NMQICONVERTMESSAGE = 0x5c6;
        public const uint MQFAP_CHECKCMDLEVEL = 0x5c7;
        public const uint MQFAP_NMQIGETMESSAGE = 0x5c8;
        public const uint MQFAP_HANDLEDOOMEDTRANSACTION = 0x5c9;
        public const uint MQFAP_VALIDATEMQCTLO = 0x5ca;
        public const uint MQFAP_VALIDATEMQCBD = 0x5cb;
        public const uint MQFAP_TRANSACTIONCHECK = 0x5cc;
        public const uint MQFAPCONNECTION_ASSIGNSESSION = 0x5cd;
        public const uint MQFAPCONNECTION_REMOVESESSION = 0x5ce;
        public const uint MQFAPCONNECTION_CONNECT2 = 0x5cf;
        public const uint MQFAPCONNECTION_CLEANUP = 0x5d0;
        public const uint MQFAPCONNECTION_DISCONNECT3 = 0x5d1;
        public const uint MQFAPCONNECTION_INITIALISESESSION2 = 0x5d2;
        public const uint MQFAPCONNECTION_SETUPASYNCMODE2 = 0x5d3;
        public const uint MQFAPCONNECTION_NEGOTIATESECURITY2 = 0x5d4;
        public const uint MQFAPCONNECTION_INITOAMFLOW = 0x5d5;
        public const uint MQFAPCONNECTION_SENDTSH = 0x5d6;
        public const uint MQFAPCONNECTION_ALLOCINITIALDATATSH = 0x5d7;
        public const uint MQFAPCONNECTION_INITSECURITYEXITS2 = 0x5d8;
        public const uint MQFAPCONNECTION_ALLOCATETSH = 0x5d9;
        public const uint MQFAPCONNECTION_ALLOCATETSH2 = 0x5da;
        public const uint MQFAPCONNECTION_RELEASERECEIVEDTSH = 0x5db;
        public const uint MQFAPCONNECTION_REQUESTSENDLOCK = 0x5dc;
        public const uint MQFAPCONNECTION_RELEASESENDLOCK = 0x5dd;
        public const uint MQFAPCONNECTION_RECEIVEASYNCTSH = 0x5de;
        public const uint MQFAPCONNECTION_RECEIVETSH = 0x5df;
        public const uint MQFAPCONNECTION_DELIVERTSH = 0x5e0;
        public const uint MQFAPCONNECTION_ASYNCFAILURENOTIFY2 = 0x5e1;
        public const uint MQFAPCONNECTION_QMQUIESCING2 = 0x5e2;
        public const uint MQFAPCONNECTION_SENDHEARTBEAT2 = 0x5e3;
        public const uint MQFAPCONNECTION_ANALYSEERRORSEGMENT = 0x5e4;
        public const uint MQFAPCONNECTION_NOTIFYRECONNECT2 = 0x5e5;
        public const uint MQFAPCONNECTION_GETSESSIONBYCONVID = 0x5e6;
        public const uint MQFAPCONNECTIONPOOL_GETSESSION = 0x5e7;
        public const uint MQFAPCONNECTIONPOOL_REMOVESPEC = 0x5e8;
        public const uint MQMANAGEDRECONNECTABLETHREAD_RELEASEHCONN = 0x5e9;
        public const uint MQPROXYMESSAGE_SETTRANSACTIONAL = 0x5ea;
        public const uint MQPROXYQUEUE_CALLCONSUMER = 0x5eb;
        public const uint MQPROXYQUEUE_SENDCONSUMERSTATE = 0x5ec;
        public const uint MQPROXYQUEUE_SETASYNCSELECTION = 0x5ed;
        public const uint MQPROXYQUEUE_ISEMPTY = 0x5ee;
        public const uint MQPROXYQUEUE_NOTIFYCONNECTIONFAILURE = 0x5ef;
        public const uint MQPROXYQUEUE_RESETFORRECONNECT = 0x5f0;
        public const uint MQPROXYQUEUE_RAISEEVENT = 0x5f1;
        public const uint MQPROXYQUEUE_CHECKTXNMESSAGE = 0x5f2;
        public const uint MQPROXYQUEUE_DRIVECONSUMER = 0x5f3;
        public const uint MQPROXYQUEUE_MQCBSUSPENDMC = 0x5f4;
        public const uint MQPROXYQUEUE_MQCBRESUMEMC = 0x5f5;
        public const uint MQPROXYQUEUE_MQCBREGISTERMC = 0x5f6;
        public const uint MQPROXYQUEUE_MQCBDEREGISTERMC = 0x5f7;
        public const uint MQPROXYQUEUE_DRIVEEVENTSMC = 0x5f8;
        public const uint MQPROXYQUEUE_ISDISPATCHABLEQ = 0x5f9;
        public const uint MQPROXYQUEUE_DELIVERMSGS = 0x5fa;
        public const uint MQPROXYQUEUE_VALIDATEMQGMO = 0x5fb;
        public const uint MQPROXYQUEUE_VALIDATEMQMD = 0x5fc;
        public const uint MQPROXYQUEUE_DRIVESTOP = 0x5fd;
        public const uint MQPROXYQUEUE_UNSETCALLBACKONEMPTY = 0x5fe;
        public const uint MQPROXYQUEUE_CALLBACKONEMPTY = 0x5ff;
        public const uint MQPROXYQUEUE_ADDCBD = 0x600;
        public const uint MQPROXYQUEUE_REMOVECBD = 0x601;
        public const uint MQPROXYQUEUE_COMPARECBD = 0x602;
        public const uint MQPROXYQUEUEMANAGER_CREATEPROXYQUEUE2 = 0x603;
        public const uint MQPROXYQUEUEMANAGER_FINDPROXYQUEUE2 = 0x604;
        public const uint MQPROXYQUEUEMANAGER_SETIDENTIFIER2 = 0x605;
        public const uint MQPROXYQUEUEMANAGER_DELETEPROXYQUEUE2 = 0x606;
        public const uint MQPROXYQUEUEMANAGER_ADDMESSAGE2 = 0x607;
        public const uint MQPROXYQUEUEMANAGER_RECEIVENOTIFICATION2 = 0x608;
        public const uint MQPROXYQUEUEMANAGER_CHECKCLIENTEMPTY = 0x609;
        public const uint MQPROXYQUEUEMANAGER_NOTIFYCONNECTIONFAILURE = 0x60a;
        public const uint MQPROXYQUEUEMANAGER_WAKEGETTERS = 0x60b;
        public const uint MQPROXYQUEUEMANAGER_CHECKTXNMESSAGE = 0x60c;
        public const uint MQPROXYQUEUEMANAGER_RAISEEVENT = 0x60d;
        public const uint MQRCVTHREAD_RUN2 = 0x60e;
        public const uint MQRCVTHREAD_RECEIVEONETSH = 0x60f;
        public const uint MQRCVTHREAD_RECEIVEBUFFER2 = 0x610;
        public const uint MQRCVTHREAD_SETDISCONNECTING2 = 0x611;
        public const uint MQSESSION_CHECKIFDISCONNECTED = 0x612;
        public const uint MQSESSION_PROCESSRECEIVEDDATA = 0x613;
        public const uint MQSESSION_LOCKRCVEXITFORTSH = 0x614;
        public const uint MQSESSION_UNLOCKRCVEXITFORTSH = 0x615;
        public const uint MQSESSION_ALLOCATETSH = 0x616;
        public const uint MQSESSION_ALLOCATETSH2 = 0x617;
        public const uint MQSESSION_ALLOCATETSH3 = 0x618;
        public const uint MQSESSION_DELIVERTSH = 0x619;
        public const uint MQSESSION_RECEIVEASYNCTSH = 0x61a;
        public const uint MQSESSION_ASYNCFAILURENOTIFY = 0x61b;
        public const uint MQSESSION_SENDTSH = 0x61c;
        public const uint MQSESSION_RECEIVETSH = 0x61d;
        public const uint MQSESSION_DELIVEREXCHANGEREPLY = 0x61e;
        public const uint MQSESSION_ALLOCATEREQUESTENTRY = 0x61f;
        public const uint MQSESSION_RELEASEREQUESTENTRY = 0x620;
        public const uint MQSESSION_STARTCONVERSATION = 0x621;
        public const uint MQSESSION_EXCHANGETSH = 0x622;
        public const uint MQSESSION_RELEASERECEIVEDTSH = 0x623;
        public const uint MQSESSION_ALLOCATETSHFORPUT = 0x624;
        public const uint MQSESSION_ALLOCATETSHFORPQREQMSGS = 0x625;
        public const uint MQSESSION_ALLOCATETSHFORNOTIFICATION = 0x626;
        public const uint MQSESSION_ALLOCATEAPI = 0x627;
        public const uint MQSESSION_INITSENDRECEIVEEXITS = 0x628;
        public const uint MQSESSION_DISCONNECT = 0x629;
        public const uint MQSESSION_SETDISCONNECTED = 0x62a;
        public const uint MQSESSION_INITOAMFLOW = 0x62b;
        public const uint MQSESSION_DISABLERECONNECT = 0x62c;
        public const uint MQSESSION_DELIVEREXCEPTION = 0x62d;
        public const uint MQSESSION_QMQUIESCING = 0x62e;
        public const uint MQSESSION_TOSTRING = 0x62f;
        public const uint MQSESSION_LOADINFO = 0x630;
        public const uint MQPLAINSOCKET_READ = 0x631;
        public const uint MQPLAINSOCKET_WRITE = 0x632;
        public const uint MQPLAINSOCKET_CLOSE = 0x633;
        public const uint MQPLAINSOCKET_DISPOSE = 0x634;
        public const uint MQENCRYPTEDSOCKET_CLIENTVALIDATINGSERVERCERTIFICATE = 0x635;
        public const uint MQENCRYPTEDSOCKET_FIXCLIENTCERTIFICATE = 0x636;
        public const uint MQENCRYPTEDSOCKET_RETRIEVEANDVALIDATESSLPARAMS = 0x637;
        public const uint MQENCRYPTEDSOCKET_READ = 0x638;
        public const uint MQENCRYPTEDSOCKET_WRITE = 0x639;
        public const uint MQENCRYPTEDSOCKET_CLOSE = 0x63a;
        public const uint MQENCRYPTEDSOCKET_DISPOSE = 0x63b;
        public const uint MQENCRYPTEDSOCKET_MAKSECUREDCONNECTION = 0x63c;
        public const uint MQPEERNAMEMATCHING_PARSEDN = 0x63d;
        public const uint MQPEERNAMEMATCHING_SETVALUE = 0x63e;
        public const uint MQPEERNAMEMATCHING_ISMATCHINGPEERNAME = 0x63f;
        public const uint MQPEERNAMEMATCHING_WEQUALS = 0x640;
        public const uint MQEXTERNALSOURCETRACER = 0x641;
        public const uint MANAGEDHCONN_ENLISTTRANSACTION = 0x642;
        public const uint MANAGEDHCONN_MQRMIOPEN = 0x643;
        public const uint MANAGEDHCONN_XACLOSE = 0x644;
        public const uint MANAGEDHCONN_CLEANUPTRANSACTIONSTATE = 0x645;
        public const uint MANAGEDHCONN_WAITFORINPROGRESSTRANSACTION = 0x646;
        public const uint MANAGEDHCONN_PULSECOMMITWAIT = 0x647;
        public const uint MQFAP_MQPUT3 = 0x648;
        public const uint MQFAP_MQGET3 = 0x649;
        public const uint MQFAP_PERFORMMSGPROCESSINGBEFOREPUT = 0x64a;
        public const uint MQFAP_PERFORMMSGPROCESSINGAFTERGET = 0x64b;
        public const uint MQFAP_PERFORMMSGPROCESSINGAFTERPUT = 0x64c;
        public const uint BINDINGSNMQIMQ_MQPUT3 = 0x64d;
        public const uint BINDINGSNMQIMQ_MQGET3 = 0x64e;
        public const uint BINDINGSNMQIMQ_PERFORMMSGPROCESSINGBEFOREPUT = 0x64f;
        public const uint BINDINGSNMQIMQ_PERFORMMSGPROCESSINGAFTERGET = 0x650;
        public const uint BINDINGSNMQIMQ_PERFORMMSGPROCESSINGAFTERPUT = 0x651;
        public const uint UNMANAGEDNMQIMQ_MQPUT3 = 0x652;
        public const uint UNMANAGEDNMQIMQ_MQGET3 = 0x653;
        public const uint UNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGBEFOREPUT = 0x654;
        public const uint UNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGAFTERGET = 0x655;
        public const uint UNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGAFTERPUT = 0x656;
        public const uint XAUNMANAGEDNMQIMQ_MQPUT3 = 0x657;
        public const uint XAUNMANAGEDNMQIMQ_MQGET3 = 0x658;
        public const uint XAUNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGBEFOREPUT = 0x659;
        public const uint XAUNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGAFTERGET = 0x65a;
        public const uint XAUNMANAGEDNMQIMQ_PERFORMMSGPROCESSINGAFTERPUT = 0x65b;
        internal static string[] dotnetFuncs;
        public static string GetFunctionName(uint component, uint method)
        {
            string[] dotnetFuncs = null;
            string str = null;
            if (component == 0x48)
            {
                dotnetFuncs = FUNCID.dotnetFuncs;
            }
            if ((dotnetFuncs != null) && (method < dotnetFuncs.Length))
            {
                str = dotnetFuncs[method];
            }
            if (str == null)
            {
                str = "Unknown (" + component.ToString() + "," + method.ToString() + ")";
            }
            return str;
        }

        public static string GetComponentId(uint component)
        {
            if (component == 0x48)
            {
                return "DN";
            }
            return "UN";
        }

        static FUNCID()
        {
            dotnetFuncs = new string[] { 
                "DUMMY", "HobjAdapter.ToString()", "MQAPI.Initialize(MQLONG,MQLONG)", "MQAPI.WriteStruct(Byte [ ],int)", "MQAPI.ReadStruct(Byte [ ],int)", "MQAsyncStatus.ClearInvalidFields(MQLONG)", "MQAsyncStatus.GetVersionLength()", "MQAsyncStatus.WriteStruct(Byte [ ],int)", "MQAsyncStatus.ReadStruct(Byte [ ],int)", "MQASYNC_MESSAGE.GetSegmentLength()", "MQASYNC_MESSAGE.ReadStruct(Byte [ ],int)", "MQAuthenticationInformationRecord.Dispose(Boolean)", "MQMessage.WriteShort(short)", "MQMessage.ReadUint2()", "MQMessage.ConvertHexToByte(byte [ ])", "MQQueueManager.Disconnect()", 
                "MQSession.AccessQueueManager(String)", "MQSession.AccessMessage()", "MQSession.AccessPutMessageOptions()", "MQSession.AccessGetMessageOptions()", "MQCAUT.WriteStruct(Byte [ ],int)", "MQChannelDefinition.setDefaultDefinition()", "MQChannelDefinition.FindByte(byte [ ],int,int,byte)", "MQChannelDefinition.ParseExitsList(byte [ ],ref int,int)", "MQChannelDefinition.ParseExitsLists(byte [ ],int,int)", "MQChannelDefinition.Equals(MQChannelDefinition)", "MQChannelDefinition.Compare(byte [ ],byte [ ])", "MQChannelDefinition.CompareIntArr(int [ ],int [ ])", "MQChannelExitHandler.LoadExit(ref ExitInstance)", "MQChannelExitHandler.InvokeExits(int,MQChannelExit,ExitInstance [ ],byte [ ],ref int,ref int,ref int,ref Boolean)", "MQChannelExitHandler.LoadExits(MQLONG)", "MQChannelExitHandler.InitializeExits(MQLONG,Boolean)", 
                "MQChannelExitHandler.InitSecurity(ref int,ref int,ref int,ref Boolean)", "MQChannelExitHandler.ProcessSecurity(ref byte [ ],ref int,ref int,ref int,ref Boolean)", "MQChannelExitHandler.ProcessSendExits(ref byte [ ],ref int,ref int,ref int)", "MQChannelExitHandler.ProcessReceiveExits(ref byte [ ],ref int,ref int,ref int)", "MQChannelExitHandler.TermExits()", "MQChannelExitHandler.GetQualifiedExitPath(ref String)", "MQChannelListEntry.CheckUpdateRequired()", "MQChannelListEntry.AddChannelEntry(MQChannelDefinition)", "MQChannelListEntry.OrderWeightedChannelEntry()", "MQChannelListEntry.SelectChannelEntry(MQChannelDefinition,MQThreadChannelEntry)", "MQChannelListEntry.SelectNamedEntry(MQChannelDefinition)", "MQChannelListEntry.SelectRandomEntry(MQThreadChannelEntry)", "MQChannelTable.Readuint(Stream)", "MQChannelTable.FindFirstChannel(Stream)", "MQChannelTable.FindChannel(Stream,String,ref int)", "MQChannelTable.GetChannelDefinition(String,ref int)", 
                "MQChannelTable.GetStream()", "MQChannelTable.CreateChannelEntryLists(MQChannelListEntry)", "MQClientCfg.FindAndParse()", "MQClientCfg.OverwriteFromEnvironmentVariables()", "MQClientCfg.OverwriteFromDotnetConfigurationFile()", "MQClientCfg.GetStringValue(StringCfgProperty)", "MQClientCfg.GetIntValue(IntCfgProperty)", "MQClientCfg.GetBoolValue(BoolCfgProperty)", "StringCfgProperty.ParseValue(String)", "IntCfgProperty.ParseValue(String)", "BoolCfgProperty.ParseValue(String)", "MQClientCfg.FindClientIni()", "MQClientConnector.MQCONN(String,out MQHCONN,out MQLONG,out MQLONG)", "MQClientConnector.MQCONNX(String,ref MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "MQClientConnector.MQDISC(out MQHCONN,out MQLONG,out MQLONG)", "MQClientConnector.MQOPEN(MQHCONN,ref MQObjectDescriptor,MQLONG,out MQHOBJ,out MQLONG,out MQLONG)", 
                "MQClientConnector.MQCLOSE(MQHCONN,ref MQHOBJ,MQLONG,out MQLONG,out MQLONG)", "MQClientConnector.SPIPut(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientConnector.MQPUT(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientConnector.MQPUT1(MQHCONN,ref MQObjectDescriptor,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientConnector.MQSTAT(MQHCONN,int,ref MQAsyncStatus,out MQLONG,out MQLONG)", "MQClientConnector.MQSUB(MQHCONN,ref MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQClientConnector.MQSUBRQ(MQHCONN,ref MQLONG,MQLONG,ref MQSubscriptionRequestOptions,out MQLONG,out MQLONG)", "MQClientConnector.SPIGet(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQClientConnector.MQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQClientConnector.zstMQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,MQLPIGetOpts,out MQLONG,out MQLONG)", "MQClientConnector.MQINQ(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientConnector.MQSET(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientConnector.MQBEGIN(MQHCONN,ref MQBO,out MQLONG,out MQLONG)", "MQClientConnector.MQCMIT(MQHCONN,out MQLONG,out MQLONG)", "MQClientConnector.MQBACK(MQHCONN,out MQLONG,out MQLONG)", "MQClientConnector.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG)", 
                "MQClientConnector.SPIActivateMessage(MQHCONN,ref MQSPIActivateOpts,out MQLONG,out MQLONG)", "MQClientConnector.SPISyncpoint(MQHCONN,ref MQSPISyncpointOpts,out MQLONG,out MQLONG)", "MQClientXaConnector.MQCONN(String,out MQHCONN,out MQLONG,out MQLONG)", "MQClientXaConnector.MQCONNX(String,ref MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "MQClientXaConnector.MQDISC(out MQHCONN,out MQLONG,out MQLONG)", "MQClientXaConnector.MQOPEN(MQHCONN,ref MQObjectDescriptor,MQLONG,out MQHOBJ,out MQLONG,out MQLONG)", "MQClientXaConnector.MQCLOSE(MQHCONN,ref MQHOBJ,MQLONG,out MQLONG,out MQLONG)", "MQClientXaConnector.SPIPut(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientXaConnector.MQPUT(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientXaConnector.MQPUT1(MQHCONN,ref MQObjectDescriptor,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientXaConnector.MQSTAT(MQHCONN,int,ref MQAsyncStatus,out MQLONG,out MQLONG)", "MQClientXaConnector.MQSUB(MQHCONN,ref MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQClientXaConnector.MQSUBRQ(MQHCONN,ref MQLONG,MQLONG,ref MQSubscriptionRequestOptions,out MQLONG,out MQLONG)", "MQClientXaConnector.SPIGet(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQClientXaConnector.MQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQClientXaConnector.zstMQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,MQLPIGetOpts,out MQLONG,out MQLONG)", 
                "MQClientXaConnector.MQINQ(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientXaConnector.MQSET(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQClientXaConnector.MQBEGIN(MQHCONN,ref MQBO,out MQLONG,out MQLONG)", "MQClientXaConnector.MQCMIT(MQHCONN,out MQLONG,out MQLONG)", "MQClientXaConnector.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG)", "MQClientXaConnector.MQBACK(MQHCONN,out MQLONG,out MQLONG)", "MQClientXaConnector.SPIActivateMessage(MQHCONN,ref MQSPIActivateOpts,out MQLONG,out MQLONG)", "MQClientXaConnector.SPISyncpoint(MQHCONN,ref MQSPISyncpointOpts,out MQLONG,out MQLONG)", "MQCommsBufferImpl.AddUseCount(int)", "MQCommsBufferImpl.Free()", "MQCommsBufferImpl.Reset(bool)", "MQCommsBufferImpl.EnsureInUse()", "MQCommsBufferPool.FreeBuffer(IMQCommsBuffer)", "MQCommsBufferPool.AllocateBuffer(int)", "MQCONN.WriteStruct(Byte [ ],int)", "MQCONN.ReadStruct(Byte [ ],int)", 
                "MQConnectionPool.GetConnection(MQChannelDefinition,MQLONG,out Boolean)", "MQConnectionPool.RemoveConnection(MQTCPConnection)", "MQConnectOptions.CheckValidity(ref MQLONG,ref MQLONG)", "MQDestination.Dispose(Boolean)", "MQDestination.CreateMQObjectDescriptor()", "MQDestination.Open(MQObjectDescriptor)", "MQDestination.ValidateDestination()", "MQDestination.Close()", "MQDestination.Get(MQMessage)", "MQDestination.Get(MQMessage,MQGetMessageOptions)", "MQDestination.Get(MQMessage,MQGetMessageOptions,int)", "MQDestination.CopyMQMD(MQMD,ref MQMD)", "MQDestination.Put(MQMessage)", "MQDestination.Put(MQMessage,MQPutMessageOptions)", "MQDestination.PerformMsgProcessgingBeforePut(ref MQMessage)", "MQDestination.PerformMsgProcessingAfterGet(ref MQMessage,byte [ ],int)", 
                "MQDestination.PerformMsgProcessingAfterPut(ref MQMessage,byte [ ],int,int,String)", "MQERD.WriteStruct(Byte [ ],int)", "MQERD.ReadStruct(Byte [ ],int)", "MQERD.ErrorException(string)", "MQFAP.EnterCall(ref MQLONG,ref MQLONG)", "MQFAP.LeaveCall()", "MQFAP.ReceiveData(ref MQTSH,ref int,ref int)", "MQFAP.SendData(byte [ ],int,int,int)", "MQFAP.SendConnect(String,MQConnectOptions,out MQLONG,out MQLONG,ref MQHCONN)", "MQFAP.MakeConnection(String,MQConnectOptions,out MQLONG,out MQLONG,out MQHCONN)", "MQFAP.Disconnect(MQHCONN,out MQLONG,out MQLONG)", "MQFAP.MQOPEN(MQHCONN,ref MQObjectDescriptor,MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQFAP.MQCLOSE(MQHCONN,MQLONG,MQLONG,out MQLONG,out MQLONG)", "MQFAP.WriteIntArray(byte [ ],int,MQLONG [ ],MQLONG)", "MQFAP.ReadIntArray(byte [ ],int,MQLONG [ ],MQLONG)", "MQFAP.MQSET(MQHCONN,MQLONG,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", 
                "MQFAP.MQINQ(MQHCONN,MQLONG,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQFAP.SPIPut(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQFAP.QuerySyncDelivery(MQHCONN,MQLONG,ref MQPutMessageOptions,ref MQMessageDescriptor,out MQLONG,out MQLONG)", "MQFAP.GetTags(int,MQHCONN,MQTagPool,out MQLONG,out MQLONG)", "MQFAP.MQPUT(MQHCONN,MQLONG,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQFAP.MQPUT1(MQHCONN,ref MQObjectDescriptor,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQFAP.MQSTAT(MQHCONN,int,ref MQAsyncStatus,out MQLONG,out MQLONG)", "MQFAP.SPIGet(MQHCONN,MQLONG,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQFAP.MQGET(MQHCONN,MQLONG,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQFAP.zstMQGET(MQHCONN,MQLONG,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,MQLPIGetOpts,out MQLONG,out MQLONG)", "MQFAP.MQCMIT(MQHCONN,out MQLONG,out MQLONG)", "MQFAP.MQBACK(MQHCONN,out MQLONG,out MQLONG)", "MQFAP.MQSUB(MQHCONN,ref MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQFAP.MQSUBRQ(MQHCONN,ref MQLONG,MQLONG,ref MQSubscriptionRequestOptions,out MQLONG,out MQLONG)", "MQFAP.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG)", "MQFAP.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG,bool)", 
                "MQFAP.SPIActivateMessage(MQHCONN,ref MQSPIActivateOpts,out MQLONG,out MQLONG)", "MQFAP.SPISyncpoint(MQHCONN,ref MQSPISyncpointOpts,out MQLONG,out MQLONG)", "MQFAPConnection.Connect(out MQLONG,out MQLONG)", "MQFAPConnection.InitSecurityExits()", "MQFAPConnection.InitSendRcvExits(Boolean)", "MQFAPConnection.CreateConnection(out int,out int,out Boolean)", "MQFAPConnection.CreateNegotiatedCD(out int,out int,bool)", "MQFAPConnection.CopyConnectionProperties()", "MQFAPConnection.InitialFlows(MQConnectOptions,Boolean,ref int,ref int)", "MQFAPConnection.GetConnectOptions()", "MQFAPConnection.InitialiseSession(MQLONG,ref int,ref int)", "MQFAPConnection.NegotiateSecurity(out MQLONG,out MQLONG)", "MQFAPConnection.SendConnAuth(MQConnectOptions,out MQLONG,out MQLONG)", "MQFAPConnection.SupportsAsyncMode()", "MQFAPConnection.SetUpAsyncMode()", "MQFAPConnection.SendStartConvFlow(ref int,ref int)", 
                "MQFAPConnection.SendEndConvFlow(MQTSH)", "MQFAPConnection.SendData(byte [ ],int,int,int)", "MQFAPConnection.ReceiveData(ref MQTSH,ref int,ref int)", "MQFAPConnection.RequestLockOnExitCall(IMQCommsBuffer)", "MQFAPConnection.ReleaseLockOnExitCall(IMQCommsBuffer)", "MQFAPConnection.SendHeartBeat(Boolean)", "MQFAPConnection.DeliverData(IMQCommsBuffer)", "MQFAPConnection.DeliverExchangeReply(MQLONG,IMQCommsBuffer)", "MQFAPConnection.ExchangeData(byte [ ],int,int,int,ref MQTSH)", "MQFAPConnection.AllocateRequestEntry()", "MQFAPConnection.ReleaseRequestEntry(MQRequestEntry)", "MQFAPConnection.Disconnect()", "MQFAPConnection.Close(MQTSH)", "MQFAPConnection.IsConnected()", "MQFAPConnection.AsyncFailureNotify(Exception)", "MQFAPConnection.Disconnect(MQFAPConnection)", 
                "MQFAPConnection.AsyncFailureNotifyAll(Exception)", "MQFAPMQCNO.WriteStruct(Byte [ ],int)", "MQFAPMQCNO.ReadStruct(Byte [ ],int)", "MQGetMessageOptions.ClearInvalidFields(MQLONG)", "MQGetMessageOptions.GetVersionLength()", "MQGetMessageOptions.WriteStruct(Byte [ ],int)", "MQGetMessageOptions.ReadStruct(Byte [ ],int)", "MQID.WriteStruct(Byte [ ],int)", "MQID.ReadStruct(Byte [ ],int)", "MQIniFile.Parse(Stream)", "MQIniFile.GetAttributeValue(String)", "MQIniFile.EnterStanza(String)", "MQIniFile.StoreAttributeValuePair(String,String)", "MQIniFile.GetCurrentLineType()", "MQIniFile.ProcessCurrentLine()", "MQManagedClientConnector.ReadMQServer()", 
                "MQManagedClientConnector.GetNameList(String)", "MQManagedClientConnector.FindNameListEntry(String)", "MQManagedClientConnector.CreateNameListEntryFromCCDT(String)", "MQManagedClientConnector.FreeNameEntries()", "MQManagedClientConnector.DoConn(String,MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQCONN(String,out MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQCONNX(String,ref MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQDISC(out MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQOPEN(MQHCONN,ref MQObjectDescriptor,MQLONG,out MQHOBJ,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQCLOSE(MQHCONN,ref MQHOBJ,MQLONG,out MQLONG,out MQLONG)", "MQManagedClientConnector.SPIPut(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQManagedClientConnector.MQPUT(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQManagedClientConnector.MQPUT1(MQHCONN,ref MQObjectDescriptor,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQManagedClientConnector.MQSTAT(MQHCONN,int,ref MQAsyncStatus,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQSUB(MQHCONN,ref MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQSUBRQ(MQHCONN,ref MQLONG,MQLONG,ref MQSubscriptionRequestOptions,out MQLONG,out MQLONG)", 
                "MQManagedClientConnector.SPIGet(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQManagedClientConnector.zstMQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,MQLPIGetOpts,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQINQ(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQManagedClientConnector.MQSET(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQManagedClientConnector.MQBEGIN(MQHCONN,ref MQBO,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQCMIT(MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.MQBACK(MQHCONN,out MQLONG,out MQLONG)", "MQManagedClientConnector.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG)", "MQManagedClientConnector.SPIActivateMessage(MQHCONN,ref MQSPIActivateOpts,out MQLONG,out MQLONG)", "MQManagedClientConnector.SPISyncpoint(MQHCONN,ref MQSPISyncpointOpts,out MQLONG,out MQLONG)", "MQManagedObject.Close()", "MQManagedObject.Set(MQLONG [ ],MQLONG [ ],MQBYTE [ ])", "MQManagedObject.Inquire(MQLONG [ ],MQLONG [ ],MQBYTE [ ])", "MQManagedObject.QueryAttribute(MQLONG)", "MQManagedObject.QueryAttribute(MQLONG,MQLONG)", 
                "MQManagedObject.SetAttribute(MQLONG,MQLONG)", "MQManagedObject.SetAttribute(MQLONG,string,MQLONG)", "MQManagedObject.OpenForInquire()", "MQManagedObject.OpenForSet()", "MQMarshalMessageForGet.ProcessMessageForRFH()", "MQMarshalMessageForGet.ConvertBytesContentToString()", "MQMarshalMessageForGet.ProcessAllAvailableRFHs()", "MQMarshalMessageForGet.GetFormatAsString(Encoding)", "MQMarshalMessageForGet.GetFormatAsLong(Encoding)", "MQMarshalMessageForGet.GetFormatAsLongFromBytes(Encoding)", "MQMarshalMessageForGet.GetValueAsObject(String,String)", "MQMarshalMessageForGet.ReadInt(int)", "MQMarshalMessageForGet.ReadInt(int,byte [ ],int)", "MQMarshalMessageForGet.CheckForPropertyDescriptorAttributes(ref MQPropertyDescriptor,ref XmlTextReader)", "MQMarshalMessageForPut.ConstructMessageForSend()", "MQMarshalMessageForPut.WriteRFH2Properties()", 
                "MQMarshalMessageForPut.ExpandMessageData(int)", "MQMarshalMessageForPut.AppendByteArray(byte [ ])", "MQMarshalMessageForPut.AppendByteArray(byte [ ],int,int)", "MQMarshalMessageForPut.AppendInt(int,int)", "MQMarshalMessageForPut.SetContent(RFH2Folder,Object)", "MQMarshalMessageForPut.EscapeXMLChars(StringBuilder,string)", "MQMarshalMessageForPut.WriteTriplet(StringBuilder,string,Object,bool)", "MQMarshalMessageForPut.SetPropertyDescriptor(RFH2Folder,MQPropertyDescriptor)", "MQMessage.GetBuffer()", "MQMessage.ClearMessage()", "MQMessage.Read(int)", "MQMessage.ReadBoolean()", "MQMessage.ReadByte()", "MQMessage.ReadBytes(int)", "MQMessage.ReadChar()", "MQMessage.ReadDecimal2()", 
                "MQMessage.ReadDecimal4()", "MQMessage.ReadDecimal8()", "MQMessage.ReadDouble()", "MQMessage.ReadFloat()", "MQMessage.ReadFully(ref byte [ ])", "MQMessage.ReadFully(ref byte [ ],int,int)", "MQMessage.ReadFully(ref sbyte [ ])", "MQMessage.ReadFully(ref sbyte [ ],int,int)", "MQMessage.ReadInt()", "MQMessage.ReadInt2()", "MQMessage.ReadInt4()", "MQMessage.ReadInt8()", "MQMessage.ReadLine()", "MQMessage.ReadLong()", "MQMessage.ReadShort()", "MQMessage.ReadString(int)", 
                "MQMessage.ReadUInt2()", "MQMessage.ReadUnsignedByte()", "MQMessage.ReadUnsignedShort()", "MQMessage.ReadUTF()", "MQMessage.ResizeBuffer(int)", "MQMessage.ReadReverse(int)", "MQMessage.Seek(int)", "MQMessage.SkipBytes(int)", "MQMessage.Write(int)", "MQMessage.Write(byte [ ])", "MQMessage.Write(byte [ ],int,int)", "MQMessage.Write(sbyte [ ])", "MQMessage.Write(sbyte [ ],int,int)", "MQMessage.WriteBoolean(bool)", "MQMessage.WriteByte(byte)", "MQMessage.WriteByte(sbyte)", 
                "MQMessage.WriteByte(int)", "MQMessage.WriteBytes(string)", "MQMessage.WriteChar(int)", "MQMessage.WriteChars(String)", "MQMessage.WriteDecimal2(short)", "MQMessage.WriteDecimal4(int)", "MQMessage.WriteDecimal8(long)", "MQMessage.WriteDouble(double)", "MQMessage.WriteFloat(float)", "MQMessage.WriteInt(int)", "MQMessage.WriteInt2(int)", "MQMessage.WriteInt4(int)", "MQMessage.WriteInt8(long)", "MQMessage.WriteLong(long)", "MQMessage.WriteShort(int)", "MQMessage.WriteString(string,bool)", 
                "MQMessage.WriteString(string)", "MQMessage.WriteUTF(string)", "MQMessage.ReadUnicodeLine()", "MQMessage.ReadConvertedLine()", "MQMessage.WriteObject(object)", "MQMessage.ReadObject()", "MQMessage.frexp(double,ref int)", "MQMessage.ldexp(double,int)", "MQMessage.ldexpl(double,int)", "MQMessage.modf(double,ref double)", "MQMessage.GetBytesProperty(String,MQPropertyDescriptor)", "MQMessage.GetBytesProperty(String)", "MQMessage.GetBooleanProperty(String,MQPropertyDescriptor)", "MQMessage.GetBooleanProperty(String)", "MQMessage.GetByteProperty(String,MQPropertyDescriptor)", "MQMessage.GetByteProperty(String)", 
                "MQMessage.GetShortProperty(String,MQPropertyDescriptor)", "MQMessage.GetShortProperty(String)", "MQMessage.GetInt2Property(String,MQPropertyDescriptor)", "MQMessage.GetInt2Property(String)", "MQMessage.GetIntProperty(String,MQPropertyDescriptor)", "MQMessage.GetIntProperty(String)", "MQMessage.GetInt4Property(String,MQPropertyDescriptor)", "MQMessage.GetInt4Property(String)", "MQMessage.GetLongProperty(String,MQPropertyDescriptor)", "MQMessage.GetLongProperty(String)", "MQMessage.GetInt8Property(String,MQPropertyDescriptor)", "MQMessage.GetInt8Property(String)", "MQMessage.GetFloatProperty(String,MQPropertyDescriptor)", "MQMessage.GetFloatProperty(String)", "MQMessage.GetDoubleProperty(String,MQPropertyDescriptor)", "MQMessage.GetDoubleProperty(String)", 
                "MQMessage.GetStringProperty(String,MQPropertyDescriptor)", "MQMessage.GetStringProperty(String)", "MQMessage.GetObjectProperty(String)", "MQMessage.GetObjectProperty(String,MQPropertyDescriptor)", "MQMessage.SetJmsProperty(String,Object)", "MQMessage.GetJmsProperty(String)", "MQMessage.HexToBin(String,int)", "MQMessage.SetMessageId(byte [ ])", "MQMessage.SetCorrelationId(byte [ ])", "MQMessage.SetBooleanProperty(String,MQPropertyDescriptor,Boolean)", "MQMessage.SetBooleanProperty(String,Boolean)", "MQMessage.SetBytesProperty(String,MQPropertyDescriptor,sbyte [ ])", "MQMessage.SetBytesProperty(String,sbyte [ ])", "MQMessage.SetByteProperty(String,MQPropertyDescriptor,sbyte)", "MQMessage.SetByteProperty(String,sbyte)", "MQMessage.SetShortProperty(String,MQPropertyDescriptor,short)", 
                "MQMessage.SetShortProperty(String,short)", "MQMessage.SetInt2Property(String,MQPropertyDescriptor,short)", "MQMessage.SetInt2Property(String,short)", "MQMessage.SetIntProperty(String,MQPropertyDescriptor,int)", "MQMessage.SetIntProperty(String,int)", "MQMessage.SetInt4Property(String,MQPropertyDescriptor,int)", "MQMessage.SetInt4Property(String,int)", "MQMessage.SetLongProperty(String,MQPropertyDescriptor,long)", "MQMessage.SetLongProperty(String,long)", "MQMessage.SetInt8Property(String,MQPropertyDescriptor,long)", "MQMessage.SetInt8Property(String,long)", "MQMessage.SetFloatProperty(String,MQPropertyDescriptor,float)", "MQMessage.SetFloatProperty(String,float)", "MQMessage.SetDoubleProperty(String,MQPropertyDescriptor,double)", "MQMessage.SetDoubleProperty(String,double)", "MQMessage.SetStringProperty(String,MQPropertyDescriptor,String)", 
                "MQMessage.SetStringProperty(String,String)", "MQMessage.SetObjectProperty(String,Object)", "MQMessage.SetObjectProperty(String,MQPropertyDescriptor,Object)", "MQMessage.AddPropertyToList(String,MQPropertyDescriptor,object)", "MQMessage.MakeUsrFolderExplicit(String)", "MQMessage.MakeMQFolderExplicit(String)", "MQMessage.BadConvertException(uint)", "MQMessage.ValidateProperty(String)", "MQMessage.CheckNotNullPropertyName(String)", "MQMessage.CheckMaxSizeOfPropertyName(String)", "MQMessage.CheckIsValidJavaIdentifier(String)", "MQMessage.ValidateNameForEmptyDot(String)", "MQMessage.ValidateNameForReservedSQLNames(String)", "MQMessage.ValidateNameForReservedFolderNames(String)", "MQMessage.CheckNotMixedContent(string)", "MQMessage.ParseBoolean(Object)", 
                "MQMessage.ParseByte(Object)", "MQMessage.ParseDouble(Object)", "MQMessage.ParseSingle(Object)", "MQMessage.ParseInt32(Object)", "MQMessage.ParseInt64(Object)", "MQMessage.ParseInt16(Object)", "MQMessage.ParseString(Object)", "MQMessage.ParseBytes(Object)", "MQMessage.ParseObjectAsType(Object,Type)", "MQMessage.GetPropertyNames(String)", "MQMessage.DeleteProperty(String)", "MQMessage.SetMQMDToDefault(String)", "MQMessageDescriptor.ClearInvalidFields(MQLONG)", "MQMessageDescriptor.GetVersionLength()", "MQMessageDescriptor.WriteStruct(Byte [ ],int)", "MQMessageDescriptor.ReadStruct(Byte [ ],int)", 
                "MQMessageProperties.GetBytesProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetBytesProperty(String)", "MQMessageProperties.GetBooleanProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetBooleanProperty(String)", "MQMessageProperties.GetByteProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetByteProperty(String)", "MQMessageProperties.GetShortProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetShortProperty(String)", "MQMessageProperties.GetInt2Property(String,MQPropertyDescriptor)", "MQMessageProperties.GetInt2Property(String)", "MQMessageProperties.GetIntProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetIntProperty(String)", "MQMessageProperties.GetInt4Property(String,MQPropertyDescriptor)", "MQMessageProperties.GetInt4Property(String)", "MQMessageProperties.GetLongProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetLongProperty(String)", 
                "MQMessageProperties.GetInt8Property(String,MQPropertyDescriptor)", "MQMessageProperties.GetInt8Property(String)", "MQMessageProperties.GetFloatProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetFloatProperty(String)", "MQMessageProperties.GetDoubleProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetDoubleProperty(String)", "MQMessageProperties.GetStringProperty(String,MQPropertyDescriptor)", "MQMessageProperties.GetStringProperty(String)", "MQMessageProperties.GetObjectProperty(String)", "MQMessageProperties.GetObjectProperty(String,MQPropertyDescriptor)", "MQMessageProperties.SetBooleanProperty(String,MQPropertyDescriptor,Boolean)", "MQMessageProperties.SetBooleanProperty(String,Boolean)", "MQMessageProperties.SetBytesProperty(String,MQPropertyDescriptor,sbyte [ ])", "MQMessageProperties.SetBytesProperty(String,sbyte [ ])", "MQMessageProperties.SetByteProperty(String,MQPropertyDescriptor,sbyte)", "MQMessageProperties.SetByteProperty(String,sbyte)", 
                "MQMessageProperties.SetShortProperty(String,MQPropertyDescriptor,short)", "MQMessageProperties.SetShortProperty(String,short)", "MQMessageProperties.SetInt2Property(String,MQPropertyDescriptor,short)", "MQMessageProperties.SetInt2Property(String,short)", "MQMessageProperties.SetIntProperty(String,MQPropertyDescriptor,int)", "MQMessageProperties.SetIntProperty(String,int)", "MQMessageProperties.SetInt4Property(String,MQPropertyDescriptor,int)", "MQMessageProperties.SetInt4Property(String,int)", "MQMessageProperties.SetLongProperty(String,MQPropertyDescriptor,long)", "MQMessageProperties.SetLongProperty(String,long)", "MQMessageProperties.SetInt8Property(String,MQPropertyDescriptor,long)", "MQMessageProperties.SetInt8Property(String,long)", "MQMessageProperties.SetFloatProperty(String,MQPropertyDescriptor,float)", "MQMessageProperties.SetFloatProperty(String,float)", "MQMessageProperties.SetDoubleProperty(String,MQPropertyDescriptor,double)", "MQMessageProperties.SetDoubleProperty(String,double)", 
                "MQMessageProperties.SetStringProperty(String,MQPropertyDescriptor,String)", "MQMessageProperties.SetStringProperty(String,String)", "MQMessageProperties.SetObjectProperty(String,Object)", "MQMessageProperties.SetObjectProperty(String,MQPropertyDescriptor,Object)", "MQMessageProperties.AddPropertyToList(String,object)", "MQMessageProperties.BadConvertException(uint)", "MQMessageProperties.NullRefException(uint,String)", "MQMessageProperties.ValidateProperty(String)", "MQMessageProperties.CheckNotNullPropertyName(String)", "MQMessageProperties.CheckMaxSizeOfPropertyName(String)", "MQMessageProperties.CheckIsValidJavaIdentifier(String)", "MQMessageProperties.ValidateNameForEmptyDot(String)", "MQMessageProperties.ValidateNameForReservedSQLNames(String)", "MQMessageProperties.ValidateNameForReservedFolderNames(String)", "MQMessageProperties.CheckNotMixedContent(string)", "MQMessageProperties.ParseBoolean(Object)", 
                "MQMessageProperties.ParseByte(Object)", "MQMessageProperties.ParseDouble(Object)", "MQMessageProperties.ParseSingle(Object)", "MQMessageProperties.ParseInt32(Object)", "MQMessageProperties.ParseInt64(Object)", "MQMessageProperties.ParseInt16(Object)", "MQMessageProperties.ParseString(Object)", "MQMessageProperties.ParseBytes(Object)", "MQMessageProperties.ParseObjectAsType(Object,Type)", "MQMessageProperties.GetPropertyNames(String)", "MQMessageProperties.DeleteProperty(String)", "MQMsgAreaImpl.AddUseCount(MQLONG)", "MQMsgAreaImpl.Free()", "MQMsgAreaImpl.IsInUse()", "MQMsgAreaImpl.Invalidate()", "MQMsgAreaImpl.EnsureInUse()", 
                "MQMsgAreaPool.AllocBuffer(int)", "MQMsgAreaPool.FreeBuffer(MQMsgAreaImpl)", "MQNOTIFICATION.WriteStruct(Byte [ ],int)", "MQNOTIFICATION.ReadStruct(Byte [ ],int)", "MQObjectDescriptor.ClearInvalidFields(MQLONG)", "MQObjectDescriptor.GetVersionLength()", "MQObjectDescriptor.GetPaddedLength(string)", "MQObjectDescriptor.GetRequiredBufferSize()", "MQObjectDescriptor.CopyCHARVIntoOD()", "MQObjectDescriptor.WriteStruct(Byte [ ],int)", "MQObjectDescriptor.ReadStruct(Byte [ ],int,int)", "MQOPEN_PRIV.WriteStruct(Byte [ ],int)", "MQOPEN_PRIV.ReadStruct(Byte [ ],int)", "MQProcess.OpenProcessForInquire(int)", "MQProcess.Dispose(Boolean)", "MQProcess.Close()", 
                "MQPropertyDescriptor.IsDefault()", "MQProxyQueue.RequestMutex()", "MQProxyQueue.ReleaseMutex()", "MQProxyQueue.SetIdentifier(MQHOBJ,MQLONG,MQLONG)", "MQProxyQueue.AllocMessage(MQLONG)", "MQProxyQueue.FreeMessage(MQProxyMessage)", "MQProxyQueue.CheckSelectionCriteria(MQMessageDescriptor,MQGetMessageOptions,MQLONG,ref MQLONG,ref MQLONG)", "MQProxyQueue.RequestMessages(Boolean,int,Boolean)", "MQProxyQueue.MatchSelection(MQProxyMessage,Boolean)", "MQProxyQueue.FindNextMessage(Boolean)", "MQProxyQueue.VerifyOptsForGet(MQGetMessageOptions,int)", "MQProxyQueue.CheckGetMsgOptions(MQMessageDescriptor,MQGetMessageOptions,ref MQLONG,ref MQLONG)", "MQProxyQueue.FlushQueue(Boolean)", "MQProxyQueue.RemoveMessage(Boolean,Boolean,MQProxyMessage)", "MQProxyQueue.RemoveAllMessages()", "MQProxyQueue.ResetBrowseFirst()", 
                "MQProxyQueue.CopyOutMessage(MQProxyMessage,MQMessageDescriptor,MQGetMessageOptions,MQLONG,byte [ ],ref MQLONG,ref MQLONG,ref MQLONG)", "MQProxyQueue.AddPhysicalMessage(MQProxyMessage)", "MQProxyQueue.ProxyMQGET(MQMessageDescriptor,MQGetMessageOptions,MQLONG,byte [ ],ref MQLONG,MQLPIGetOpts,ref MQLONG,ref MQLONG)", "MQProxyQueue.ProxyMQCLOSE(MQLONG,ref MQLONG,ref MQLONG)", "MQProxyQueue.ReceiveNotification(MQNOTIFICATION)", "MQProxyQueue.AddMessage(MQTSH,MQASYNC_MESSAGE,byte [ ],MQLONG)", "MQProxyQueue.CheckPurge(long)", "MQProxyQueue.Compare(byte [ ],byte [ ])", "MQProxyQueue.BitSet(int,int)", "MQProxyQueueManager.CreateProxyQueue()", "MQProxyQueueManager.FindProxyQueue(MQLONG)", "MQProxyQueueManager.SetIdentifier(MQProxyQueue,MQHOBJ,MQLONG,MQLONG)", "MQProxyQueueManager.DeleteProxyQueue(MQProxyQueue)", "MQProxyQueueManager.AddMessage(IMQCommsBuffer)", "MQProxyQueueManager.ReceiveNotification(IMQCommsBuffer)", "MQProxyQueueManager.ProxyQueueList()", 
                "MQPutMessageOptions.ClearInvalidFields(MQLONG)", "MQPutMessageOptions.GetVersionLength()", "MQPutMessageOptions.WriteStruct(Byte [ ],int)", "MQPutMessageOptions.ReadStruct(Byte [ ],int)", "MQPutMessageOptions.ValidateOptions()", "MQQueue.Close()", "MQQueue.Get(MQMessage,MQGetMessageOptions,int,int)", "MQQueue.Put(MQMessage,MQPutMessageOptions,MQLONG)", "MQQueue.PutForwardMessage(MQMessage)", "MQQueue.PutForwardMessage(MQMessage,MQPutMessageOptions)", "MQQueue.PutReplyMessage(MQMessage)", "MQQueue.PutReplyMessage(MQMessage,MQPutMessageOptions)", "MQQueue.PutReportMessage(MQMessage)", "MQQueue.PutReportMessage(MQMessage,MQPutMessageOptions)", "MQQueue.ValidToCopy(int,int)", "MQQueue.CopyMDFromOldMsgIntoFwdMsg(MQMessage,MQMessage)", 
                "MQQueue.CopyMDFromOldMsgIntoReplyMsg(MQMessage,MQMessage,int)", "MQQueue.CopyMDFromOldMsgIntoReportMsg(MQMessage,MQMessage,int)", "MQQueueManager.Dispose(Boolean)", "MQQueueManager.Connect()", "MQQueueManager.Disconnect()1", "MQQueueManager.IsMTSEnvironment()", "MQQueueManager.AccessQueue(String,MQLONG)", "MQQueueManager.AccessQueue(String,MQLONG,String,String,String)", "MQQueueManager.AccessProcess(String,MQLONG)", "MQQueueManager.AccessProcess(String,MQLONG,String,String)", "MQQueueManager.AccessTopic(string,string,int,int)", "MQQueueManager.AccessTopic(string,string,int,int,string)", "MQQueueManager.AccessTopic(string,string,int,string,string)", "MQQueueManager.AccessTopic(string,string,int,string,string,Hashtable)", "MQQueueManager.AccessTopic(MQDestination,string,string,int)", "MQQueueManager.AccessTopic(MQDestination,string,string,int,string)", 
                "MQQueueManager.AccessTopic(MQDestination,string,string,int,string,string)", "MQQueueManager.AccessTopic(MQDestination,string,string,int,string,string,Hashtable)", "MQQueueManager.Begin()", "MQQueueManager.Commit()", "MQQueueManager.Backout()", "MQQueueManager.ActivateMessage(MQLONG,String,String,MQBYTE [ ])", "MQQueueManager.Syncpoint(MQLONG,MQLONG)", "MQQueueManager.QuerySPI(MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG)", "MQQueueManager.Put(int,string,MQMessage)", "MQQueueManager.Put(int,string,MQMessage,MQPutMessageOptions)", "MQQueueManager.Put(int,string,string,string,MQMessage)", "MQQueueManager.Put(int,string,string,string,MQMessage,MQPutMessageOptions)", "MQQueueManager.Put(int,string,string,string,MQMessage,MQPutMessageOptions,string)", "MQQueueManager.PerformMsgProcessgingBeforePut(ref MQMessage)", "MQQueueManager.PerformMsgProcessingAfterPut(ref MQMessage,byte [ ],int,int,String)", "MQQueueManager.Put(String,String,MQMessage,MQPutMessageOptions,String)", 
                "MQQueueManager.Put(String,String,MQMessage,MQPutMessageOptions)", "MQQueueManager.Put(String,String,MQMessage)", "MQQueueManager.Put(String,MQMessage,MQPutMessageOptions)", "MQQueueManager.Put(String,MQMessage)", "MQQueueManager.GetAsyncStatus()", "MQRcvThread.Run()", "MQRcvThread.ReceiveBuffer()", "MQRcvThread.ReceiveData()", "MQRcvThread.SetDisconnecting()", "MQRcvThread.SendHeartBeat(Boolean)", "MQREQUEST_MSGS.Initialize()", "MQREQUEST_MSGS.GetLength()", "MQREQUEST_MSGS.WriteStruct(Byte [ ],int)", "MQServerConnector.MQCONN(String,out MQHCONN,out MQLONG,out MQLONG)", "MQServerConnector.MQCONNX(String,ref MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "MQServerConnector.MQDISC(out MQHCONN,out MQLONG,out MQLONG)", 
                "MQServerConnector.MQOPEN(MQHCONN,ref MQObjectDescriptor,MQLONG,out MQHOBJ,out MQLONG,out MQLONG)", "MQServerConnector.MQCLOSE(MQHCONN,ref MQHOBJ,MQLONG,out MQLONG,out MQLONG)", "MQServerConnector.SPIPut(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQServerConnector.MQPUT(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQServerConnector.MQPUT1(MQHCONN,ref MQObjectDescriptor,ref MQMessageDescriptor,ref MQPutMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQServerConnector.MQSTAT(MQHCONN,int,ref MQAsyncStatus,out MQLONG,out MQLONG)", "MQServerConnector.MQSUB(MQHCONN,ref MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out MQLONG,out MQLONG)", "MQServerConnector.MQSUBRQ(MQHCONN,ref MQLONG,MQLONG,ref MQSubscriptionRequestOptions,out MQLONG,out MQLONG)", "MQServerConnector.SPIGet(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQServerConnector.MQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQServerConnector.zstMQGET(MQHCONN,MQHOBJ,ref MQMessageDescriptor,ref MQGetMessageOptions,MQLONG,MQBYTE [ ],out MQLONG,MQLPIGetOpts,out MQLONG,out MQLONG)", "MQServerConnector.MQINQ(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQServerConnector.MQSET(MQHCONN,MQHOBJ,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQBYTE [ ],out MQLONG,out MQLONG)", "MQServerConnector.MQBEGIN(MQHCONN,ref MQBO,out MQLONG,out MQLONG)", "MQServerConnector.MQCMIT(MQHCONN,out MQLONG,out MQLONG)", "MQServerConnector.MQBACK(MQHCONN,out MQLONG,out MQLONG)", 
                "MQServerConnector.SPIQuerySPI(MQHCONN,MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,out MQLONG,out MQLONG)", "MQServerConnector.SPIActivateMessage(MQHCONN,ref MQSPIActivateOpts,out MQLONG,out MQLONG)", "MQServerConnector.SPISyncpoint(MQHCONN,ref MQSPISyncpointOpts,out MQLONG,out MQLONG)", "MQSOCKACT:.MQSOCKACT()", "MQSOCKACT:.MQSOCKACT(MQLONG,MQLONG,MQLONG,MQLONG,MQLONG)", "MQSOCKACT:.WriteStruct(Byte [ ],int)", "MQSOCKACT:.ReadStruct(Byte [ ],int)", "MQSPI.WriteStruct(Byte [ ],int)", "MQSPI.ReadStruct(Byte [ ],int)", "MQSPIActivateIn.ToBuffer()", "MQSPIActivateIn.WriteStruct(Byte [ ],int)", "MQSPIActivateInOut.ToBuffer()", "MQSPIActivateInOut.WriteStruct(Byte [ ],int)", "MQSPIActivateInOut.ReadStruct(Byte [ ],int)", "MQSPIActivateOut.ToBuffer()", "MQSPIActivateOut.WriteStruct(Byte [ ],int)", 
                "MQSPIActivateOut.ReadStruct(Byte [ ],int)", "MQSPIGetIn.GetVersionLength()", "MQSPIGetIn.ToBuffer()", "MQSPIGetIn.WriteStruct(Byte [ ],int)", "MQSPIGetInOut.GetHdrVersionLength()", "MQSPIGetInOut.ToBuffer()", "MQSPIGetInOut.WriteStruct(Byte [ ],int)", "MQSPIGetInOut.ReadStruct(Byte [ ],int)", "MQSPIGetOut.GetVersionLength()", "MQSPIGetOut.ToBuffer()", "MQSPIGetOut.WriteStruct(Byte [ ],int)", "MQSPIGetOut.ReadStruct(Byte [ ],int,Boolean)", "MQSPIGetOut.ReadStruct(Byte [ ],int)", "MQSPIPutIn.GetVersionLength()", "MQSPIPutIn.ToBuffer()", "MQSPIPutIn.WriteStruct(Byte [ ],int)", 
                "MQSPIPutInOut.GetHdrVersionLength()", "MQSPIPutInOut.ToBuffer()", "MQSPIPutInOut.WriteStruct(Byte [ ],int)", "MQSPIPutInOut.ReadStruct(Byte [ ],int)", "MQSPIPutOut.ToBuffer()", "MQSPIPutOut.WriteStruct(Byte [ ],int)", "MQSPIPutOut.ReadStruct(Byte [ ],int)", "MQSPIQueryIn.ToBuffer()", "MQSPIQueryIn.WriteStruct(Byte [ ],int)", "MQSPIQueryInOut.ToBuffer()", "MQSPIQueryInOut.WriteStruct(Byte [ ],int)", "MQSPIQueryInOut.ReadStruct(Byte [ ],int)", "MQSPIQueryOut.SPISupported(MQLONG,ref MQLONG,ref MQLONG,ref MQLONG,ref MQLONG)", "MQSPIQueryOut.ToBuffer()", "MQSPIQueryOut.WriteStruct(Byte [ ],int)", "MQSPIQueryOut.ReadStruct(Byte [ ],int)", 
                "MQSPIQueue.SPIPut(MQMessage,MQPutMessageOptions,MQLONG)", "MQSPIQueue.SPIDeferredPut(MQMessage,MQPutMessageOptions)", "MQSPIQueue.SPIGet(MQMessage,MQGetMessageOptions,MQLONG)", "MQSPIQueue.SPIGet(MQMessage,MQGetMessageOptions,MQLONG,MQLONG)", "MQSPIQueueManager.AccessSPIQueue(String,MQLONG)", "MQSPIQueueManager.AccessSPIQueue(String,MQLONG,String,String,String)", "MQSPIQueueManager.SPISupportsDeferred()", "MQSPIQueueManager.SPISupportsInherited()", "MQSPIQueueManager.SPIActivateDeferred(MQBYTE [ ])", "MQSPIQueueManager.SPICancelDeferred(MQBYTE [ ])", "MQSPIQueueManager.SPIAsyncCommit()", "MQSPIReserveIn:MQBase.MQSPIReserveIn()", "MQSPIReserveIn:MQBase.MQSPIReserveIn(MQLONG)", "MQSPIReserveIn:MQBase.GetVersionLength()", "MQSPIReserveIn:MQBase.WriteStruct(Byte [ ],int)", "MQSPIReserveInOut.GetHdrVersionLength()", 
                "MQSPIReserveInOut.ToBuffer()", "MQSPIReserveInOut.WriteStruct(Byte [ ],int)", "MQSPIReserveInOut.ReadStruct(Byte [ ],int)", "MQSPIReserveOut.ToBuffer()", "MQSPIReserveOut.WriteStruct(Byte [ ],int)", "MQSPIReserveOut.ReadStruct(Byte [ ],int)", "MQSPISyncpointIn.ToBuffer()", "MQSPISyncpointIn.WriteStruct(Byte [ ],int)", "MQSPISyncpointInOut.ToBuffer()", "MQSPISyncpointInOut.WriteStruct(Byte [ ],int)", "MQSPISyncpointInOut.ReadStruct(Byte [ ],int)", "MQSPISyncpointOut.ToBuffer()", "MQSPISyncpointOut.WriteStruct(Byte [ ],int)", "MQSPISyncpointOut.ReadStruct(Byte [ ],int)", "MQSubscription.Subscribe(MQSubscriptionDescriptor)", "MQSubscription.RequestPublicationUpdate(int)", 
                "MQSubscriptionRequestOptions.ClearInvalidFields(MQLONG)", "MQSubscriptionRequestOptions.GetVersionLength()", "MQSubscriptionRequestOptions.WriteStruct(Byte [ ],int)", "MQSubscriptionRequestOptions.ReadStruct(Byte [ ],int)", "MQTCPConnection.AddFapConnectionToList(MQFAPConnection)", "MQTCPConnection.GetFapConnectionFromList(int)", "MQTCPConnection.GetFapConn()", "MQTCPConnection.RemoveFapConnectionFromList(MQFAPConnection)", "MQTCPConnection.ConnectSocket(string,string,MQLONG)", "MQTCPConnection.ParseLocalAddress(String)", "MQTCPConnection.ConnectUsingLocalAddr(ParsedLocalAddr,IPAddress,int)", "MQTCPConnection.CloseSocket()", "MQTCPConnection.SendData(byte [ ],int,int)", "MQTCPConnection.ReceiveData(ref byte [ ],ref int,ref int)", "MQTCPConnection.EnableNonBlockingSocket()", "MQTCPConnection.SetUpAsyncMode()", 
                "MQTCPConnection.IncrWaitingConversations()", "MQTopic.OpenForPublication(string)", "MQTopic.OpenForSubscription(MQDestination,string,string,Hashtable)", "MQTopic.CreateMQSubscriptionDescriptor(string,string,Hashtable)", "MQTopic.IsDurable()", "MQTopic.IsManaged()", "MQTopic.IsSubscribed()", "MQTopic.Close()", "MQTSH.ChangeToMultiplexing()", "MQTSH.Initialize(MQLONG,MQBYTE,MQBYTE,MQUSHORT)", "MQTSH.GetLength()", "MQTSH.WriteStruct(Byte [ ],int)", "MQTSH.ReadStruct(Byte [ ],int)", "MQUID.GetLength()", "MQUID.SetCurrentUser()", "MQUID.SetUser(String,String)", 
                "MQUID.WriteStruct(Byte [ ],int)", "NmqiEnvironment.GetMQI(int)", "NmqiEnvironment.GetInstance(String,String)", "NmqiEnvironment.NewMQCD()", "NmqiEnvironment.NewMQCNO()", "NmqiEnvironment.NewMQCSP()", "NmqiEnvironment.NewMQPMO()", "NmqiEnvironment.NewMQGMO()", "NmqiEnvironment.NewMQMD()", "NmqiEnvironment.NewMQOD()", "NmqiEnvironment.NewNmqiConnectOptions()", "NmqiEnvironment.NewPhconn()", "NmqiEnvironment.NewPhobj()", "Phconn.ToString()", "Phobj.ToString()", "RFH2.AddFolder(RFH2Folder)", 
                "RFH2.GetFolder(String)", "RFH2.Contains(String)", "RFH2Folder.Contains(String)", "RFH2Folder.GetFolder(String)", "RFH2Folder.SetContent(String,int)", "RFH2Folder.AddFolder(RFH2Folder)", "RFH2Folder.Render()", "RFH2Folder.RenderNoPad()", "UnmanagedHconn.ToString()", "UnmanagedHconn.UpdateHconn(UnmanagedNmqiMQ,Phconn)", "UnmanagedHobj.ToString()", "UnmanagedHobj.SetHobj(Phobj)", "UnmanagedHobj.Equals(Hobj)", "UnmanagedNmqiMQ.GetUnmanagedHconn(Hconn)", "UnmanagedNmqiMQ.GetLocalHobj(Hobj)", "UnmanagedNmqiMQ.MQCLOSE(Hconn,Phobj,int,out int,out int)", 
                "UnmanagedNmqiMQ.Authenticate(Hconn,string,string,out int,out int)", "UnmanagedNmqiMQ.MQCONN(String,Phconn,out int,out int)", "UnmanagedNmqiMQ.MQCONNX(String,MQConnectOptions,Phconn,out int,out int)", "UnmanagedNmqiMQ.MQCONNX(String,ref MQCNO,Hconn,Phconn,out int,out int)", "UnmanagedNmqiMQ.MQOPEN(Hconn,MQObjectDescriptor,int,Phobj,out int,out int)", "UnmanagedNmqiMQ.MQPUT(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "UnmanagedNmqiMQ.MQGET(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", "UnmanagedNmqiMQ.MQDISC(Phconn,out int,out int)", "ManagedCommonServices.FFST(String,string,string,uint,uint,MQULONG,MQULONG,ushort)", "ManagedCommonServices.OpenLogFile(String,String,FileMode,ref FileStream,Boolean)", "ManagedCommonServices.SetLogPosition(string,ref FileStream)", "ManagedCommonServices.DisplayMessage(string,string,uint,uint)", "ManagedCommonServices.GetMessage(string objectId,uint returncode,uint control,out string basicmessage,out string extendedmessage,out string replymessage,MQLONG basicLength,MQLONG extendedLength,MQLONG replyLength)", "ManagedCommonServices.ConvertString(string,MQLONG,MQLONG,MQBYTE[],MQLONG,ref MQBYTE[],ref MQLONG,MQLONG,ref MQULONG)", "ManagedCommonServices.FileAddACE(String,String,MQULONG,MQULONG,MQULONG)", "MQQueueManager.Connect()", 
                "MQChannelDefinition.MQChannelDefinition(byte[],int,int)", "BindingsHconn.ToString()", "BindingsHconn.UpdateHconn(NmqiMQ,Phconn)", "BindingsHobj.ToString()", "BindingsHobj.SetHobj(Phobj)", "BindingsHobj.Equals(Hobj)", "BindingsNmqiMQ.GetBindingsHconn(Hconn)", "BindingsNmqiMQ.GetLocalHobj(Hobj)", "BindingsNmqiMQ.MQCLOSE(Hconn,Phobj,int,out int,out int)", "BindingsNmqiMQ.Authenticate(Hconn,string,string,out int,out int)", "BindingsNmqiMQ.MQCONN(String,Phconn,out int,out int)", "BindingsNmqiMQ.MQCONNX(String,MQConnectOptions,Phconn,out int,out int)", "BindingsNmqiMQ.MQCONNX(String,ref MQCNO,Hconn,Phconn,out int,out int)", "BindingsNmqiMQ.MQOPEN(Hconn,MQObjectDescriptor,int,Phobj,out int,out int)", "BindingsNmqiMQ.MQPUT(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "BindingsNmqiMQ.MQPUT1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", 
                "BindingsNmqiMQ.MQGET(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", "BindingsNmqiMQ.MQDISC(Phconn,out int,out int)", "BindingsNmqiMQ.MQINQ(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "BindingsNmqiMQ.MQSET(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "ManagedNmqiMQ.ReadMQServer()", "ManagedNmqiMQ.GetNameList(String)", "ManagedNmqiMQ.FindNameListEntry(String)", "ManagedNmqiMQ.CreateNameListEntryFromCCDT(String)", "ManagedNmqiMQ.FreeNameEntries()", "ManagedNmqiMQ.GetManagedHconn(Hconn)", "ManagedNmqiMQ.GetManagedHobj(Hobj)", "ManagedNmqiMQ.DoConn(String,MQConnectOptions,out MQHCONN,out MQLONG,out MQLONG)", "ManagedNmqiMQ.Authenticate(Hconn,string,string,out int,out int)", "ManagedNmqiMQ.MQCONN(String,Phconn,out int,out int)", "ManagedNmqiMQ.MQCONNX(String,MQConnectOptions,Phconn,out int,out int)", "ManagedNmqiMQ.MQDISC(Phconn,out int,out int)", 
                "ManagedNmqiMQ.MQOPEN(Hconn,MQObjectDescriptor,int,Phobj,out int,out int)", "ManagedNmqiMQ.MQCLOSE(Hconn,Phobj,int,out int,out int)", "ManagedNmqiMQ.MQPUT(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "ManagedNmqiMQ.MQPUT1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "ManagedNmqiMQ.MQGET(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", "ManagedNmqiMQ.MQINQ(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "ManagedNmqiMQ.MQSET(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "MQCHARV.WriteStruct(Byte [ ],int,int,int)", "MQCHARV.ReadStruct(byte [ ],int,int)", "MQCHARV.GetEndPosAligned(int)", "MQClientConnector.GetSharingConversationsValue(MQHCONN,ref MQLONG)", "MQSubscriptionDescriptor.ClearInvalidFields(MQLONG)", "MQSubscriptionDescriptor.GetVersionLength()", "MQSubscriptionDescriptor.GetPaddedLength(string)", "MQSubscriptionDescriptor.GetRequiredBufferSize()", "MQSubscriptionDescriptor.CopyCHARVIntoSD()", 
                "MQSubscriptionDescriptor.WriteStruct(Byte [ ],int)", "MQSubscriptionDescriptor.ReadStruct(Byte [ ],int,int)", "UnmanagedNmqiMQ.MQPUT1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "UnmanagedNmqiMQ.MQINQ(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "UnmanagedNmqiMQ.MQSET(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "XAUnmanagedNmqiMQ.GetUnmanagedHconn(Hconn)", "XAUnmanagedNmqiMQ.GetLocalHobj(Hobj)", "XAUnmanagedNmqiMQ.MQCLOSE(Hconn,Phobj,int,out int,out int)", "XAUnmanagedNmqiMQ.Authenticate(Hconn,string,string,out int,out int)", "XAUnmanagedNmqiMQ.MQCONN(String,Phconn,out int,out int)", "XAUnmanagedNmqiMQ.MQCONNX(String,MQConnectOptions,Phconn,out int,out int)", "XAUnmanagedNmqiMQ.MQCONNX(String,ref MQCNO,Hconn,Phconn,out int,out int)", "XAUnmanagedNmqiMQ.MQOPEN(Hconn,MQObjectDescriptor,int,Phobj,out int,out int)", "XAUnmanagedNmqiMQ.MQPUT(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "XAUnmanagedNmqiMQ.MQPUT1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "XAUnmanagedNmqiMQ.MQGET(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", 
                "XAUnmanagedNmqiMQ.MQDISC(Phconn,out int,out int)", "XAUnmanagedNmqiMQ.MQINQ(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "XAUnmanagedNmqiMQ.MQSET(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "LpiSD.GetPaddedLength(string)", "LpiSD.CopyCHARVIntoLPISD()", "LpiSD.WriteStruct(Byte [ ],int)", "LpiSD.ReadStruct(Byte [ ],int)", "LpiSDSubProps.WriteStruct(Byte [ ],int)", "LpiSDSubProps.ReadStruct(Byte [ ],int)", "LpiUSD.GetPaddedLength(string)", "LpiUSD.CopyCHARVIntoLPIUSD()", "LpiUSD.WriteStruct(Byte [ ],int)", "LpiUSD.ReadStruct(Byte [ ],int)", "MQCHARV.WriteStruct(Byte [ ],int,int,int)1", "MQCHARV.ReadStruct(byte [ ],int,int)1", "MQCHARV.GetEndPosAligned(int)1", 
                "MQManagedClientConnector.GetProperty(String)", "MQSPIPutOpts.GetRequiredBufferSize(NmqiEnvironment,int)", "MQSPIPutOpts.WriteStruct(NmqiEnvironment,Byte [ ],int)", "MQSPIPutOpts.ReadStruct(NmqiEnvironment,Byte [ ],int)", "SpiConnectOptions.GetRequiredBufferSize(NmqiEnvironment,int)", "SpiConnectOptions.WriteStruct(NmqiEnvironment,Byte [ ],int)", "SpiConnectOptions.ReadStruct(NmqiEnvironment,Byte [ ],int)", "SpiGetOptions.GetRequiredBufferSize(NmqiEnvironment,int)", "SpiGetOptions.WriteStruct(NmqiEnvironment,Byte [ ],int)", "SpiGetOptions.ReadStruct(NmqiEnvironment,Byte [ ],int)", "SpiOpenOptions.WriteStruct(NmqiEnvironment,Byte [ ],int)", "SpiOpenOptions.ReadStruct(NmqiEnvironment,Byte [ ],int)", "BindingsNmqiMQ.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "BindingsNmqiMQ.MQSUBRQ(Hconn,Hobj,int,ref MQSubscriptionRequestOptions,out int,out int)", "BindingsNmqiMQ.MQSTAT(Hconn,MQLONG,MQAsyncStatus,out int,out int)", "BindingsNmqiMQ.MQCMIT(Hconn,out int,out int)", 
                "BindingsNmqiMQ.MQBACK(Hconn,out int,out int)", "BindingsNmqiMQ.MQBEGIN(Hconn,MQBeginOptions,out int,out int)", "BindingsNmqiMQ.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", "BindingsNmqiMQ.MQCTL(Hconn,int,MQCTLO,out int,out int)", "BindingsNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)", "BindingsNmqiMQ.SpiConnect(String,SpiConnectOptions,MQConnectOptions,Phconn,out int,out int)", "BindingsNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "BindingsNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "BindingsNmqiMQ.SpiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,SpiGetOptions,int,Byte [ ],out int,out int,out int)", "BindingsNmqiMQ.CheckCmdLevel(Hconn)", "BindingsNmqiMQ.NmqiConvertMessage(Hconn,Hobj,int,int,int,bool,MQMessageDescriptor,byte [ ],out int,int,int,out int,out int,out int)", "BindingsNmqiMQ.NmqiGetMessage(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,int,byte [ ],out int,out int,out int)", "BindingsNmqiMQ.spiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", "BindingsNmqiMQ.spiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "BindingsNmqiMQ.SpiOpen(Hconn,MQObjectDescriptor,SpiOpenOptions,Phobj,out int,out int)", "ManagedNmqiMQ.CreateNameListEntryFromCCDT(String)1", 
                "ManagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)", "ManagedNmqiMQ.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "ManagedNmqiMQ.MQSUBRQ(Hconn,Hobj,int,ref MQSubscriptionRequestOptions,out int,out int)", "ManagedNmqiMQ.MQSTAT(Hconn,MQLONG,MQAsyncStatus,out int,out int)", "ManagedNmqiMQ.MQCMIT(Hconn,out int,out int)", "ManagedNmqiMQ.MQBACK(Hconn,out int,out int)", "ManagedNmqiMQ.MQBEGIN(Hconn,MQBeginOptions,out int,out int)", "ManagedNmqiMQ.SpiConnect(String,SpiConnectOptions,MQConnectOptions,Phconn,out int,out int)", "ManagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "ManagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "ManagedNmqiMQ.SpiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,SpiGetOptions,int,Byte [ ],out int,out int,out int)", "ManagedNmqiMQ.SpiOpen(Hconn,MQObjectDescriptor,SpiOpenOptions,Phobj,out int,out int)", "ManagedNmqiMQ.CheckCmdLevel(Hconn)", "ManagedNmqiMQ.NmqiConvertMessage(Hconn,Hobj,int,int,int,bool,MQMessageDescriptor,byte [ ],out int,int,int,out int,out int,out int)", "ManagedNmqiMQ.NmqiGetMessage(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,int,byte [ ],out int,out int,out int)", "ManagedNmqiMQ.spiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", 
                "ManagedNmqiMQ.spiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "ManagedNmqiMQ.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", "ManagedNmqiMQ.MQCTL(Hconn,int,MQCTLO,out int,out int)", "MQAsyncConsume.RequestThreadLock()", "MQAsyncConsume.ReleaseThreadLock()", "MQAsyncConsume.ValidateMQCTLO(MQCTLO,out int,out int)", "MQAsyncConsume.ValidateMQCBD(MQCBD,out int,out int)", "MQAsyncConsume.ValidateMQMD(MQMessageDescriptor,out int,out int)", "MQAsyncConsume.ValidateMQGMO(MQGetMessageOptions,out int,out int)", "MQAsyncConsume.SendNotification(ManagedHconn,int,int,int,bool)", "MQAsyncConsume.SendConsumerState(ManagedHconn,MQProxyQueue,bool)", "MQAsyncConsume.SendConnState(ManagedHconn,bool)", "MQAsyncConsume.AddDispatchList(MQProxyQueue)", "MQAsyncConsume.RemoveDispatchList(MQProxyQueue)", "MQAsyncConsume.SetAsyncSelection(MQProxyQueue)", "MQAsyncConsume.CallConsumer(MQAsyncDelivery,int,int,int)", 
                "MQAsyncConsume.CallEventHandler(ManagedHconn,int,int,int)", "MQAsyncConsume.DriveOutstanding(ManagedHconn)", "MQAsyncConsume.CheckTxnAllowed(ManagedHconn)", "MQAsyncConsume.CheckTxnMsg(ManagedHconn)", "MQAsyncConsume.StartInit(ManagedHconn,bool)", "MQAsyncConsume.DriveStops(ManagedHconn)", "MQAsyncConsume.DriveEventsMC(ManagedHconn,MQAsyncDelivery)", "MQAsyncConsume.DriveEventsEH(MQAsyncDelivery)", "MQAsyncConsume.CheckActiveConsumers(ManagedHconn)", "MQAsyncConsume.DriveConsumer(MQAsyncDelivery,ref int,ref int)", "MQAsyncConsume.ChooseDispatchThread(ManagedHconn)", "MQAsyncConsume.CheckDispatchableQ(ManagedHconn,MQProxyQueue,ref int)", "MQAsyncConsume.CheckDispatchable(ManagedHconn,MQProxyQueue)", "MQAsyncConsume.MqcbSuspendMC(MQProxyQueue,out int,out int)", "MQAsyncConsume.MqcbResumeMC(MQProxyQueue,out int,out int)", "MQAsyncConsume.MqcbRegisterMC(ManagedHconn,MQCBD,MQProxyQueue,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", 
                "MQAsyncConsume.MqcbDeRegisterMC(ManagedHconn,MQProxyQueue,bool,out int,out int)", "MQAsyncConsume.MqcbRegisterEH(ManagedHconn,MQCBD,out int,out int)", "MQAsyncConsume.MqcbDeregisterEH(ManagedHconn,out int,out int)", "MQAsyncConsume.MqcbSuspendEH(ManagedHconn)", "MQAsyncConsume.MqcbResumeEH(ManagedHconn)", "MQAsyncConsume.StartWait(ManagedHconn,out int,out int)", "MQAsyncConsume.RaiseEvent(ManagedHconn,int)", "MQDispatchThread.PostSleepingEvent()", "MQDispatchThread.WaitOnSleepingEvent(int)", "MQDispatchThread.Run()", "MQDispatchThread.IncrementDispatchSeq()", "MQERD.GetReasonCode()", "MQFAP.nmqiOpen(ManagedHconn,ref MQObjectDescriptor,SpiOpenOptions,MQLONG,ref ManagedHobj,out MQLONG,out MQLONG,Boolean)", "MQFAP.SPINotify(MQHCONN,ref int,LpiNotifyDetails,out int,out int)", "MQFAP.spiSubscribe(MQHCONN,LpiSD,MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out int,out int)", "MQFAP.nmqiSubscribe(MQHCONN,MQSubscriptionDescriptor,ref MQLONG,out MQLONG,out int,out int,LpiSD,Boolean)", 
                "MQFAP.SPIOpen(ManagedHconn,ref MQObjectDescriptor,ref SpiOpenOptions,ref ManagedHobj,out int,out int)", "MQFAPConnection.QmQuiescing()", "NmqiEnvironment.GetProperty(String)", "NmqiEnvironment.NewMQAIR()", "NmqiEnvironment.NewMQSD()", "NmqiEnvironment.NewMQSRO()", "NmqiEnvironment.NewLpiND()", "NmqiEnvironment.NewMQSTS()", "NmqiEnvironment.NewMQBO()", "NmqiEnvironment.NewQueueManagerInfo()", "NmqiEnvironment.NewMQCHARV(bool,bool)", "NmqiEnvironment.NewMQCXP()", "NmqiEnvironment.NewMQPD()", "NmqiEnvironment.NewMQCBC()", "NmqiEnvironment.NewMQCTLO()", "NmqiEnvironment.NewMQCBD()", 
                "NmqiEnvironment.NewMQSCO()", "NmqiEnvironment.NewSpiOpenOptions()", "NmqiEnvironment.NewLpiNotifyDetails()", "NmqiEnvironment.NewLpiSDSubProps()", "NmqiEnvironment.NewLpiUSD()", "NmqiEnvironment.NewSpiConnectOptions()", "NmqiEnvironment.NewSpiGetOptions()", "NmqiEnvironment.NewSpiPutOptions()", "NmqiEnvironment.NewSpiSD()", "UnmanagedNmqiMQ.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "UnmanagedNmqiMQ.MQSUBRQ(Hconn,Hobj,int,ref MQSubscriptionRequestOptions,out int,out int)", "UnmanagedNmqiMQ.MQSTAT(Hconn,MQLONG,MQAsyncStatus,out int,out int)", "UnmanagedNmqiMQ.MQCMIT(Hconn,out int,out int)", "UnmanagedNmqiMQ.MQBACK(Hconn,out int,out int)", "UnmanagedNmqiMQ.MQBEGIN(Hconn,MQBeginOptions,out int,out int)", "UnmanagedNmqiMQ.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", 
                "UnmanagedNmqiMQ.MQCTL(Hconn,int,MQCTLO,out int,out int)", "UnmanagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)", "UnmanagedNmqiMQ.SpiConnect(String,SpiConnectOptions,MQConnectOptions,Phconn,out int,out int)", "UnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "UnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "UnmanagedNmqiMQ.SpiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,SpiGetOptions,int,Byte [ ],out int,out int,out int)", "UnmanagedNmqiMQ.CheckCmdLevel(Hconn)", "UnmanagedNmqiMQ.NmqiConvertMessage(Hconn,Hobj,int,int,int,bool,MQMessageDescriptor,byte [ ],out int,int,int,out int,out int,out int)", "UnmanagedNmqiMQ.NmqiGetMessage(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,int,byte [ ],out int,out int,out int)", "UnmanagedNmqiMQ.SPIQuerySPI(Hconn,out int,out int)", "UnmanagedNmqiMQ.spiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", "UnmanagedNmqiMQ.spiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "UnmanagedNmqiMQ.SpiOpen(Hconn,MQObjectDescriptor,SpiOpenOptions,Phobj,out int,out int)", "XAUnmanagedNmqiMQ.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "XAUnmanagedNmqiMQ.MQSUBRQ(Hconn,Hobj,int,ref MQSubscriptionRequestOptions,out int,out int)", "XAUnmanagedNmqiMQ.MQSTAT(Hconn,MQLONG,MQAsyncStatus,out int,out int)", 
                "XAUnmanagedNmqiMQ.MQCMIT(Hconn,out int,out int)", "XAUnmanagedNmqiMQ.MQBACK(Hconn,out int,out int)", "XAUnmanagedNmqiMQ.MQBEGIN(Hconn,MQBeginOptions,out int,out int)", "XAUnmanagedNmqiMQ.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", "XAUnmanagedNmqiMQ.MQCTL(Hconn,int,MQCTLO,out int,out int)", "XAUnmanagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)", "XAUnmanagedNmqiMQ.SpiConnect(String,SpiConnectOptions,MQConnectOptions,Phconn,out int,out int)", "XAUnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "XAUnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ],out int,out int)", "XAUnmanagedNmqiMQ.SpiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,SpiGetOptions,int,Byte [ ],out int,out int,out int)", "XAUnmanagedNmqiMQ.CheckCmdLevel(Hconn)", "XAUnmanagedNmqiMQ.NmqiConvertMessage(Hconn,Hobj,int,int,int,bool,MQMessageDescriptor,byte [ ],out int,int,int,out int,out int,out int)", "XAUnmanagedNmqiMQ.NmqiGetMessage(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,int,byte [ ],out int,out int,out int)", "XAUnmanagedNmqiMQ.SPIQuerySPI(Hconn,out int,out int)", "XAUnmanagedNmqiMQ.spiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", "XAUnmanagedNmqiMQ.spiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", 
                "BindingsNmqiMQ.NmqiConsumerMethodBindings(MQHCONN,IntPtr,IntPtr,IntPtr,IntPtr)", "LpiSD.GetLength()", "LpiSD.copyToLpiSD32()", "LpiSD.copyToLpiSD()", "ManagedHconn.RequestDispatchLock(int)", "ManagedHconn.ReleaseDispatchLock()", "ManagedHconn.PostDispatchThreadEvent()", "ManagedHconn.WaitOnDispatchEvent(int)", "ManagedHconn.DispatchThreadExchange()", "MQAuthenticationInformationRecord.IDisposable_Dispose()", "MQCHARV.GetLength()", "MQCHARV.copyToMQCHARV32()", "MQCHARV.copyToMQCHARV()", "MQClientConnector.GetProperty(String)", "MQClientConnector.SPIOpen(MQHCONN,ref MQObjectDescriptor,ref SpiOpenOptions,out MQHOBJ,out int,out int)", "MQClientXaConnector.GetProperty(String)", 
                "MQClientXaConnector.SPIOpen(MQHCONN,ref MQObjectDescriptor,ref SpiOpenOptions,out MQHOBJ,out int,out int)", "MQDestination.IDisposable_Dispose()", "MQDLH.GetSize(int)", "MQDLH.WriteStruct(Byte [ ],int)", "MQDLH.ReadStruct(Byte [ ],int)", "MQDLH.SetPutDateTime(int,int,int,int,int,int,int)", "MQManagedClientConnector.SPIOpen(MQHCONN,ref MQObjectDescriptor,ref SpiOpenOptions,out MQHOBJ,out int,out int)", "MQObjectDescriptor.GetLength()", "MQObjectDescriptor.calculateOffsets()", "MQObjectDescriptor.copyToMQOD32()", "MQObjectDescriptor.copyToMQOD()", "MQProcess.IDisposable_Dispose()", "MQProxyQueue.CopyMDToUserMD(MQMessageDescriptor,MQMessageDescriptor)", "MQQueueManager.IDisposable_Dispose()", "MQServerConnector.GetProperty(String)", "MQServerConnector.SPIOpen(MQHCONN,ref MQObjectDescriptor,ref SpiOpenOptions,out MQHOBJ,out int,out int)", 
                "MQSPINotifyIn.ToBuffer()", "MQSPINotifyIn.WriteStruct(Byte [ ],int)", "MQSPINotifyInOut.ToBuffer()", "MQSPINotifyInOut.WriteStruct(Byte [ ],int)", "MQSPINotifyInOut.ReadStruct(Byte [ ],int)", "MQSPINotifyOut.ToBuffer()", "MQSPINotifyOut.WriteStruct(Byte [ ],int)", "MQSPINotifyOut.ReadStruct(Byte [ ],int)", "MQSPIOpenIn.ToBuffer()", "MQSPIOpenIn.WriteStruct(Byte [ ],int)", "MQSPIOpenInOut.GetHdrVersionLength()", "MQSPIOpenInOut.ToBuffer()", "MQSPIOpenInOut.WriteStruct(Byte [ ],int)", "MQSPIOpenInOut.ReadStruct(Byte [ ],int)", "MQSPIOpenOut.ToBuffer()", "MQSPIOpenOut.WriteStruct(Byte [ ],int)", 
                "MQSPIOpenOut.ReadStruct(Byte [ ],int)", "MQSPISubscribeIn.ToBuffer()", "MQSPISubscribeIn.WriteStruct(Byte [ ],int)", "MQSPISubscribeInOut.GetHdrVersionLength()", "MQSPISubscribeInOut.ToBuffer()", "MQSPISubscribeInOut.WriteStruct(Byte [ ],int)", "MQSPISubscribeInOut.ReadStruct(Byte [ ],int)", "MQSPISubscribeOut.ToBuffer()", "MQSPISubscribeOut.WriteStruct(Byte [ ],int)", "MQSPISubscribeOut.ReadStruct(Byte [ ],int)", "MQSubscriptionDescriptor.GetLength()", "MQSubscriptionDescriptor.calculateOffsets()", "MQSubscriptionDescriptor.copyToMQSD32()", "MQSubscriptionDescriptor.copyToMQSD()", "NmqiEnvironment.NewMQDLH()", "UnmanagedNmqiMQ.NmqiConsumerMethodUM(MQHCONN,IntPtr,IntPtr,IntPtr,IntPtr)", 
                "XAUnmanagedNmqiMQ.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)1", "XAUnmanagedNmqiMQ.MQCTL(Hconn,int,MQCTLO,out int,out int)1", "XAUnmanagedNmqiMQ.SpiOpen(Hconn,MQObjectDescriptor,SpiOpenOptions,Phobj,out int,out int)", "XAUnmanagedNmqiMQ.NmqiConsumerMethodXA(MQHCONN,IntPtr,IntPtr,IntPtr,IntPtr)", "BindingsNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "BindingsNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "BindingsNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "BindingsNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "ManagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "ManagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "ManagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "ManagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "UnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "UnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "UnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "UnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", 
                "XAUnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "XAUnmanagedNmqiMQ.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "XAUnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,byte [ ] [ ],out int,out int)", "XAUnmanagedNmqiMQ.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,int,byte [ ],byte [ ] [ ],int,out int,out int)", "MQFAP.IsDispatchThread()", "BindingsNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)", "BindingsNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)", "BindingsNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)", "BindingsNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)", "BindingsNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)", "BindingsNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)", "ManagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)", "ManagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)", "ManagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)", "ManagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)", "ManagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)", 
                "ManagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)", "MQCONN.CheckArrayLength()", "MQDLH.CheckArrayLength()", "MQGetMessageOptions.CheckArrayLength()", "MQMessageDescriptor.CheckArrayLength()", "MQObjectDescriptor.GetPaddedLength(int)", "MQObjectDescriptor.CheckArrayLength()", "MQSubscriptionDescriptor.GetPaddedLength(int)", "MQSubscriptionDescriptor.CheckArrayLength()", "LpiSDSubProps.CheckArrayLength()", "LpiUSD.CheckArrayLength()", "MQSPIProdIdIn.ToBuffer()", "MQSPIProdIdIn.WriteStruct(Byte [ ],int)", "MQSPIProdIdInOut.ToBuffer()", "MQSPIProdIdInOut.WriteStruct(Byte [ ],int)", "MQSPIProdIdOut.ToBuffer()", 
                "MQSPIProdIdOut.WriteStruct(Byte [ ],int)", "UnmanagedNmqiMQ.SetProductIdentifier(UnmanagedHconn,String)", "UnmanagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)", "UnmanagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)", "UnmanagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)", "UnmanagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)", "UnmanagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)", "UnmanagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)", "UnmanagedNmqiMQ.GetSharingConversationsValue(MQHCONN,ref MQLONG)", "XAUnmanagedNmqiMQ.SetProductIdentifier(UnmanagedHconn,String)", "XAUnmanagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)", "XAUnmanagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)", "XAUnmanagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)", "XAUnmanagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)", "XAUnmanagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)", "XAUnmanagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)", 
                "XAUnmanagedNmqiMQ.GetSharingConversationsValue(MQHCONN,ref MQLONG)", "BindingsNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)1", "BindingsNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)1", "BindingsNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)1", "BindingsNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)1", "BindingsNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)1", "BindingsNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)1", "ManagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)1", "ManagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)1", "ManagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)1", "ManagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)1", "ManagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)1", "ManagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)1", "MQCBC.WriteStruct(Byte [ ],int)", "MQCBC.ReadStruct(Byte [ ],int)", "MQCBD.WriteStruct(Byte [ ],int)", 
                "MQCBD.CheckArrayLength()", "MQCBD.ReadStruct(Byte [ ],int)", "MQCBD.CopyMqcbd()", "MQCTLO.WriteStruct(Byte [ ],int)", "MQCTLO.ReadStruct(Byte [ ],int)", "MQProxyQueue.ReleaseWaitingGetters()", "MQChannelExitHandler.ProcessSecurityParms(MQConnectOptions,ref byte [ ],ref int,ref int,ref int,ref Boolean)", "MQTCPConnection.IsSocketConnected()", "MQTCPConnection.SendHeartBeat()", "LpiNotifyDetails.WriteStruct(Byte [ ],int)", "LpiNotifyDetails.CheckArrayLength()", "LpiNotifyDetails.ReadStruct(Byte [ ],int)", "SpiConnectOptions.GetRequiredBufferSize(NmqiEnvironment,int)1", "SpiConnectOptions.WriteStruct(NmqiEnvironment,Byte [ ],int)1", "SpiConnectOptions.ReadStruct(NmqiEnvironment,Byte [ ],int)1", "SpiGetOptions.GetRequiredBufferSize(NmqiEnvironment,int)1", 
                "SpiGetOptions.WriteStruct(NmqiEnvironment,Byte [ ],int)1", "SpiGetOptions.ReadStruct(NmqiEnvironment,Byte [ ],int)1", "SpiOpenOptions.WriteStruct(Byte [ ],int)", "SpiOpenOptions.ReadStruct(Byte [ ],int)", "UnmanagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)1", "UnmanagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)1", "UnmanagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)1", "UnmanagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)1", "UnmanagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)1", "UnmanagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)1", "UnmanagedNmqiMQ.GetSharingConversationsValue(MQHCONN,ref MQLONG)1", "XAUnmanagedNmqiMQ.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)1", "XAUnmanagedNmqiMQ.SPIActivateMessage(Hconn,ref MQSPIActivateOpts,out int,out int)1", "XAUnmanagedNmqiMQ.SPISyncpoint(Hconn,ref MQSPISyncpointOpts,out int,out int)1", "XAUnmanagedNmqiMQ.SPIPut(Hconn,Hobj,ref MQMessageDescriptor,ref MQPutMessageOptions,ref MQSPIPutOpts,int,byte [ ],out int,out int)1", "XAUnmanagedNmqiMQ.SPIGet(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,ref MQSPIGetOpts,int,byte [ ],out int,out int,out int)1", 
                "XAUnmanagedNmqiMQ.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)1", "XAUnmanagedNmqiMQ.GetSharingConversationsValue(MQHCONN,ref MQLONG)1", "MQAsyncConsume.ResetReconnectionEvents(ManagedHconn)", "ManagedHconn.GetUid()", "ManagedHconn.IsReconnectableHconn()", "ManagedReconnectableHconn.AddHobj(ManagedReconnectableHobj)", "ManagedReconnectableHconn.AddHsub(ManagedReconnectableHsub)", "ManagedReconnectableHconn.RemoveHobj(Hobj)", "ManagedReconnectableHconn.Reconnect()", "ManagedReconnectableHconn.Reconnect(bool)", "ManagedReconnectableHconn.DriveEventHandler(int,NmqiException)", "ManagedReconnectableHconn.HasFailed()", "ManagedReconnectableHconn.HasFailed(bool)", "ManagedReconnectableHconn.CheckUsable()", "ManagedReconnectableHconn.IsReconnectableHconn()", "ManagedReconnectableHobj.Equals(object)", 
                "ManagedReconnectableHsub.GetExpiryRemainder()", "MQManagedReconnectableThread.Run()", "MQManagedReconnectableThread.BestHconn()", "MQManagedReconnectableThread.Reconnect(ManagedReconnectableHconn)", "MQManagedReconnectableThread.AddReconnectableHconn(ManagedReconnectableHconn)", "MQManagedReconnectableThread.RemoveReconnectableHconn(ManagedReconnectableHconn)", "MQManagedReconnectableThread.BuildReconnectionTimes()", "MQManagedReconnectableThread.ReconnectionComplete(ManagedReconnectableHconn)", "MQChannelDefinition.Clone()", "MQChannelListEntry.CreateChannelEntryLists(IEnumerator)", "MQCommsBufferImpl.CheckPool(MQCommsBufferPool)", "MQCommsBufferImpl.ThrowBufferException()", "MQCommsBufferImpl.IsValid()", "BindingsNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int,ManagedReconnectableHconn)", "ManagedReconnectableHconn.Reconnect(ManagedHconn)", "ManagedReconnectableHconn.EligibleForReconnect(ManagedHconn,Boolean)", 
                "ManagedReconnectableHconn.ToString()", "ManagedReconnectableHconn.SetReconnectionFailure(int,int,NmqiException)", "ManagedReconnectableHconn.SetupCallback(int,MQCTLO)", "ManagedReconnectableHconn.SetupEventHandler(MQCBD,int)", "ManagedReconnectableHobj.ToString()", "ManagedReconnectableHobj.SetupCallback(MQCBD,int,MQMessageDescriptor,MQGetMessageOptions)", "ManagedReconnectableHsub.ToString()", "ManagedNmqiMQ.GetNameListFromMQCD(MQChannelDefinition,String)", "ManagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)1", "ManagedNmqiMQ.NmqiSpiOpen(Hconn,ref MQObjectDescriptor,ref SpiOpenOptions,Phobj,out int,out int)", "ManagedNmqiMQ.NmqiSubscribe(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int,ManagedReconnectableHsub)", "ManagedNmqiMQ.NmqiSubscribeRequest(Hconn,Hobj,int,ref MQSubscriptionRequestOptions,out int,out int)", "ManagedNmqiMQ.NmqiOpen(Hconn,ref MQObjectDescriptor,int,Phobj,out int,out int)", "ManagedNmqiMQ.NmqiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", "ManagedNmqiMQ.NmqiMqstat(Hconn,MQLONG,MQAsyncStatus,out int,out int)", "ManagedNmqiMQ.NmqiMqback(Hconn,out int,out int)", 
                "ManagedNmqiMQ.NmqiMqCmit(Hconn,out int,out int)", "ManagedNmqiMQ.NmqiSpiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "ManagedNmqiMQ.NmqiSpiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", "ManagedNmqiMQ.NmqiSet(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "ManagedNmqiMQ.NmqiInq(Hconn,Hobj,MQLONG,MQLONG [ ],MQLONG,MQLONG [ ],MQLONG,MQCHAR [ ],out int,out int)", "ManagedNmqiMQ.NmqiMqClose(Hconn,Phobj,int,out int,out int)", "ManagedNmqiMQ.HandleDoomedTransaction(ManagedHconn)", "MQFAP.GetMaxBufLen(int,int,NmqiConnectOptions)", "MQFAP.InExit()", "MQFAPConnection.IsReconnectable()", "MQFAPConnection.NotifyReconnect(bool)", "MQManagedReconnectableThread.EligibleForReconnect(ManagedReconnectableHconn,ManagedHconn,Boolean)", "MQProxyQueue.NotifyReconnect()", "MQSubscriptionDescriptor.GetRequiredBufferSizeWOResObj()", "MQTSH.CheckTSH(byte [ ])", "UnmanagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int,ManagedReconnectableHconn)", 
                "XAUnmanagedNmqiMQ.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int,ManagedReconnectableHconn)", "MQAsyncConsume.ClearDispatcherQueueList()", "ManagedHconn.CheckUOWNotMixed(MQLONG,MQLONG)", "ManagedHconn.ValidateConnectOptionsForXA()", "ManagedHconn.EnlistmentRequired()", "ManagedNmqiMQ.TransactionCheck(ManagedHconn)", "MQFAPConnection.ProtocolDisconnect()", "MQRcvThread.IsDisconnecting()", "MQDTCCallbackObserver.EnlistTransactionIntoDtc()", "MQDTCCallbackObserver.EnlistOpenedTransaction()", "MQDTCCallbackObserver.GenerateGuid()", "MQDTCCallbackObserver.SinglePhaseCommit(SinglePhaseEnlistment)", "MQDTCCallbackObserver.Commit(Enlistment)", "MQDTCCallbackObserver.InDoubt(Enlistment)", "MQDTCCallbackObserver.Prepare(PreparingEnlistment)", "MQDTCCallbackObserver.Rollback(Enlistment)", 
                "MQXAInfo.SetXaInfo(String)", "MQXAInfo.CovertXAStringToBytes(String)", "MQXAInfo.WriteStruct(byte [ ],int)", "MQXAInfo.ReadStruct(byte [ ],int)", "MQXid.ReadBytes(byte [ ],int)", "MQXid.SetXid(Guid,String)", "MQXid.WriteStruct(byte [ ],int)", "MQXid.ReadXidFromBytes(byte [ ],int)", "MQXid.GenerateGtrid(ref Guid,int)", "MQXid.ToString()", "MQXid.Equals(Object)", "NmqiXAResourceManager.InitializeMQRMI(bool)", "NmqiXAResourceManager.Current_TransactionCompleted(object,TransactionEventArgs)", "NmqiXAResourceManager.GetBranchQualifier()", "NmqiXAResourceManager.MQRMIXAOpen()", "NmqiXAResourceManager.MQRMIXAStart()", 
                "NmqiXAResourceManager.ThrowIfTransactionAlreadyActive()", "NmqiXAResourceManager.MQRMIXAEnd()", "NmqiXAResourceManager.MQRMIXAPrepare(byte [ ])", "NmqiXAResourceManager.MQRMIXACommit(Boolean)", "NmqiXAResourceManager.MQRMIXARollback()", "NmqiXAResourceManager.MQRMIDISC()", "NmqiXAResourceManager.WaitForInProgressTransaction()", "NmqiXAResourceManager.DisconnectXAConnection()", "NmqiXAResourceManager.XAClose()", "MQMonitorLogWritter.WriteLog(String,String)", "MQMonitorLogWritter.WriteTransactionID(Guid,String)", "MQMonitorLogWritter.WriteLog(String)", "MQMonitorLogWritter.GetHeader()", "MQMonitorLogWritter.Close()", "MQMonitorLogWritter.Dispose()", "MQTransactionRecovery.InitializeForRecovery(Hashtable)", 
                "MQTransactionRecovery.InitiateForRecovery()", "MQTransactionRecovery.RunRecovery()", "MQTransactionRecovery.RecoverTransaction(Guid,sbyte [ ],sbyte [ ],int)", "MQRecoveryEnlistment.CheckXidListedIncompleteInWMQ()", "MQRecoveryEnlistment.Commit(Enlistment)", "MQRecoveryEnlistment.HeuristicTransactionCompletion()", "MQRecoveryEnlistment.Rollback(Enlistment)", "MQRecoveryEnlistment.InDoubt(Enlistment)", "MQRecoveryEnlistment.Prepare(PreparingEnlistment)", "MQXARecoveryBridge:NmqiObject.MQXARecoveryBridge(ManagedHconn,NmqiEnvironment)", "MQXARecoveryBridge:NmqiObject.InitializeTransactionRecovery()", "MQXARecoveryBridge:NmqiObject.LogCurrentTransactionStart(Byte [ ],Guid,int,byte [ ])", "MQXARecoveryBridge:NmqiObject.LogCurrentTransactionEnd(Guid,int)", "MQFAP.XA_Open(ManagedHconn,String,MQLONG,MQLONG)", "MQFAP.XA_Start(ManagedHconn,MQXid,MQLONG,MQLONG)", "MQFAP.XA_End(ManagedHconn,MQXid,MQLONG,MQLONG)", 
                "MQFAP.XA_Prepare(ManagedHconn,MQXid,MQLONG,MQLONG)", "MQFAP.XA_Commit(ManagedHconn,MQXid,MQLONG,MQLONG)", "MQFAP.XA_Rollback(ManagedHconn,MQXid,MQLONG,MQLONG)", "MQFAP.XA_Forget(ManagedHconn,MQXid,MQLONG,MQLONG)", "MQFAP.XA_Recover(ManagedHconn,MQXid [ ],MQLONG,MQLONG)", "MQFAP.XA_Close(ManagedHconn,String,MQLONG,MQLONG)", "MQSPIShareCnvIn.ToBuffer()", "MQSPIShareCnvIn.WriteStruct(Byte [ ],int)", "MQSPIShareCnvInOut.ToBuffer()", "MQSPIShareCnvInOut.WriteStruct(Byte [ ],int)", "MQSPIShareCnvOut.ToBuffer()", "MQSPIShareCnvOut.WriteStruct(Byte [ ],int)", "MQSPIShareCnvOut.ReadStruct(Byte [ ],int)", "MQQueueManager.CheckHConnHealth(MQLONG)", "ManagedHconn.CheckClientEmpty()", "ManagedHconn.CheckDispatchable(MQProxyQueue)", 
                "ManagedHconn.CheckTxnAllowed()", "ManagedHconn.PostDispatchThreadEvent()1", "ManagedHconn.WaitOnDispatchEvent(int)1", "ManagedHconn.DispatchThreadExchange()1", "ManagedHconn.DriveEventsEH()", "ManagedHconn.DriveOutstanding()", "ManagedHconn.HasEventsOutstanding()", "ManagedHconn.InitializeForReconnect()", "ManagedHconn.LeaveCall(int)", "ManagedHconn.LeaveCall(int,Boolean)", "ManagedHconn.LeaveNotifyCall(int)", "ManagedHconn.LeaveCall(Lock,int)", "ManagedHconn.RequestDispatchLock(int)1", "ManagedHconn.ReleaseDispatchLock()1", "ManagedHconn.FullyReleaseDispatchLock()", "ManagedHconn.RequestThreadLock()", 
                "ManagedHconn.ReleaseThreadLock()", "ManagedHconn.ResetReconnectionEvents()", "ManagedHconn.SendConnState(Boolean)", "ManagedHconn.SendNotification(int,int,int,Boolean)", "ManagedHconn.SetDisconnected()", "ManagedHconn.AddHsub(ManagedHsub)", "ManagedHconn.AddHobj(ManagedHobj)", "ManagedHconn.RaiseEvent(int)", "ManagedHconn.RemoveHobj(Hobj)", "ManagedHconn.Reconnect(MQSession)", "ManagedHconn.WaitForReconnection()", "ManagedHconn.WakeUpAllAfterReconnection()", "ManagedHconn.WakeUpAfterReconnection()", "ManagedHconn.EligibleForReconnect(MQSession,Boolean)", "ManagedHconn.EnterCall(Boolean,Boolean)", "ManagedHconn.EnterCall(Boolean,Boolean,Boolean)", 
                "ManagedHconn.EnterNotifyCall(Boolean)", "ManagedHconn.EnterCall(Lock,Boolean,Boolean)", "ManagedHconn.HasFailed()", "ManagedHconn.Reconnected()", "ManagedHconn.SetupCallback(int)", "ManagedHconn.SetupEventHandler(MQCBD,int)", "ManagedHconn.IsCallbackStarted()", "ManagedHconn.IsCallbackSuspended()", "ManagedHconn.CheckUsable()", "ManagedHconn.SetReconnectionFailure(int,int,NmqiException)", "ManagedHconn.GetReconnectionTimeout()", "ManagedHconn.WakeGetters()", "ManagedHconn.QmQuiescing()", "ManagedHconn.CallEventHandler(int,int,int)", "ManagedHconn.MqcbRegisterEH(MQCBD)", "ManagedHconn.MqcbDeregisterEH()", 
                "ManagedHconn.MqcbSuspendEH()", "ManagedHconn.MqcbResumeEH()", "ManagedHconn.AddToDispatchList(MQProxyQueue)", "ManagedHconn.RemoveFromDispatchList(MQProxyQueue)", "ManagedHconn.StartInit(Boolean)", "ManagedHconn.DriveStops()", "ManagedHconn.DeliverException(NmqiException,int,int)", "ManagedHconn.DoSuspend()", "ManagedHconn.CheckTxnMessage()", "ManagedHconn.DoStop()", "ManagedHconn.IsQuiescing()", "ManagedHconn.SetQuiescing()", "ManagedHconn.UnSetQuiescing()", "ManagedHconn.IsTransactionDoomed()", "ManagedHconn.IsSuspended()", "ManagedHconn.SuspendPending()", 
                "ManagedHconn.SetSuspended()", "ManagedHconn.UnsetSuspended()", "ManagedHconn.IsStarted()", "ManagedHconn.SetStarted()", "ManagedHconn.UnsetStarted()", "ManagedHconn.SetStopPending()", "ManagedHconn.IsXaConnected()", "ManagedHconn.UnsetSuspendPending()", "ManagedHconn.StopPending()", "ManagedHconn.InTransaction()", "ManagedHconn.SetInTransaction()", "ManagedHconn.UnsetInTransaction()", "ManagedHconn.SetSuspendPending()", "ManagedHconn.SetSuspending()", "ManagedHconn.ConsumersChanged()", "ManagedHconn.SetConsumersChanged()", 
                "ManagedHconn.SetTransactionDoomed()", "ManagedHconn.UnsetTransactionDoomed()", "ManagedHconn.WaitForTransactionEnd()", "ManagedHconn.PulseTransactionEndWait()", "ManagedHobj.SetupCallback(MQCBD,int,MQMessageDescriptor,MQGetMessageOptions)", "ManagedHsub.GeExpiryRemainder()", "MQConnectionSpecification.Equals(object)", "MQConnectionSpecification.RegisterConnection(MQFAPConnection)", "MQConnectionSpecification.GetSession(MQConnectionSecurityParameters,MQFAP,String,MQConnectOptions,int)", "MQConnectionSpecification.GetSessionFromNewConnection(MQConnectionSecurityParameters,MQFAP,String,MQConnectOptions,int)", "MQConnectionSpecification.CreateAndConnectConnection(MQConnectionSecurityParameters,MQFAP,String,MQConnectOptions,int)", "MQConnectionSpecification.GetSessionFromEligibleConnection()", "MQConnectionSpecification.GetConnectOptions()", "MQConnectionSpecification.RemoveConnection(MQFAPConnection)", "MQConnectionSpecification.AddConnection(MQFAPConnection)", "MQFAP.ReadMQServer()", 
                "MQFAP.GetNameList(String)", "MQFAP.FindNameListEntry(String)", "MQFAP.CreateNameListEntryFromCCDT(String)", "MQFAP.CreateNameListEntryFromCCDT(String,String)", "MQFAP.GetNameListFromMQCD(MQChannelDefinition,String)", "MQFAP.FreeNameEntries()", "MQFAP.MQBEGIN(Hconn,MQBeginOptions,out int,out int)", "MQFAP.MQCONN(String,Phconn,out int,out int)", "MQFAP.MQCONNX(String,MQConnectOptions,Phconn,out int,out int)", "MQFAP.GetManagedHconn(Hconn)", "MQFAP.GetManagedHobj(Hobj)", "MQFAP.MQCB(Hconn,int,MQCBD,Hobj,MQMessageDescriptor,MQGetMessageOptions,out int,out int)", "MQFAP.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int)", "MQFAP.SpiConnect(String,SpiConnectOptions,MQConnectOptions,Phconn,out int,out int)", "MQFAP.NmqiConnect(String,NmqiConnectOptions,MQConnectOptions,Hconn,Phconn,out int,out int,ManagedHconn)", "MQFAP.MQCTL(Hconn,int,MQCTLO,out int,out int)", 
                "MQFAP.MQDISC(Phconn,out int,out int)", "MQFAP.MQOPEN(Hconn,ref MQObjectDescriptor,int,Phobj,out int,out int,ManagedHobj)", "MQFAP.MQOPEN(Hconn,ref MQObjectDescriptor,int,Phobj,out int,out int)", "MQFAP.ThreadIsReconnectThread()", "MQFAP.nmqiOpen(Hconn,ref MQObjectDescriptor,ref SpiOpenOptions,MQLONG,ref Phobj,out MQLONG,out MQLONG,Boolean,ManagedHobj)", "MQFAP.MQCLOSE(Hconn,Phobj,int,out int,out int)", "MQFAP.MQPUT(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "MQFAP.NmqiPut(Hconn,Hobj,MQMessageDescriptor,MQPutMessageOptions,MemoryStream [ ],out int,out int)", "MQFAP.MQPUT1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MQLONG,MQBYTE [ ],out int,out int)", "MQFAP.NmqiPut1(Hconn,MQObjectDescriptor,MQMessageDescriptor,MQPutMessageOptions,MemoryStream [ ],out int,out int)", "MQFAP.SpiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,SpiGetOptions,MQLONG,MQBYTE [ ],out MQLONG,out MQLONG,out MQLONG)", "MQFAP.MQGET(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,out int,out int)", "MQFAP.NmqiGet(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,MQLONG,MQBYTE [ ],out int,MQLPIGetOpts,out int,out int)", "MQFAP.zstMQGET(Hconn,Hobj,ref MQMessageDescriptor,ref MQGetMessageOptions,int,byte [ ],out int,MQLPIGetOpts,out int,out int)", "MQFAP.CheckGetOptions(MQGetMessageOptions,ManagedHobj)", "MQFAP.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int,ManagedHsub)", 
                "MQFAP.MQSUB(Hconn,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "MQFAP.SPIQuerySPI(Hconn,int,ref int,ref int,ref int,ref int,out int,out int)", "MQFAP.SPIQuerySPI(Hconn,out MQLONG,out MQLONG,Boolean)", "MQFAP.spiNotify(Hconn,ref int,LpiNotifyDetails,out int,out int)", "MQFAP.spiSubscribe(Hconn,LpiSD,MQSubscriptionDescriptor,Phobj,Phobj,out int,out int)", "MQFAP.SpiOpen(Hconn,ref MQObjectDescriptor,ref SpiOpenOptions,Phobj,out int,out int)", "MQFAP.NmqiConvertMessage(Hconn,Hobj,int,int,int,bool,MQMessageDescriptor,byte [ ],out int,int,int,out int,out int,out int)", "MQFAP.CheckCmdLevel(Hconn)", "MQFAP.NmqiGetMessage(Hconn,Hobj,MQMessageDescriptor,MQGetMessageOptions,int,byte [ ],out int,out int,out int)", "MQFAP.HandleDoomedTransaction(ManagedHconn)", "MQFAP.ValidateMQCTLO(MQCTLO)", "MQFAP.ValidateMQCBD(MQCBD)", "MQFAP.TransactionCheck(ManagedHconn,int,int)", "MQFAPConnection.AssignSession()", "MQFAPConnection.RemoveSession(int,Boolean)", "MQFAPConnection.Connect(MQConnectionSecurityParameters)", 
                "MQFAPConnection.CleanUp(Boolean,NmqiException)", "MQFAPConnection.Disconnect()1", "MQFAPConnection.InitialiseSession()", "MQFAPConnection.SetUpAsyncMode()1", "MQFAPConnection.NegotiateSecurity()", "MQFAPConnection.InitOAMFlow(MQConnectOptions,MQSession)", "MQFAPConnection.SendTSH(MQTSH)", "MQFAPConnection.AllocInitialDataTsh(byte,int)", "MQFAPConnection.InitSecurityExits()1", "MQFAPConnection.AllocateTSH(int,byte,MQTSH,int)", "MQFAPConnection.AllocateTSH(int,int,MQTSH)", "MQFAPConnection.ReleaseReceivedTSH(MQTSH)", "MQFAPConnection.RequestSendLock()", "MQFAPConnection.ReleaseSendLock()", "MQFAPConnection.ReceiveAsyncTsh()", "MQFAPConnection.ReceiveTSH(MQTSH)", 
                "MQFAPConnection.DeliverTSH(MQTSH)", "MQFAPConnection.AsyncFailureNotify(NmqiException,Boolean)", "MQFAPConnection.QmQuiescing()1", "MQFAPConnection.SendHeartbeat(int)", "MQFAPConnection.AnalyseErrorSegment(MQTSH)", "MQFAPConnection.NotifyReconnect(Boolean)", "MQFAPConnection.GetSessionByConvId(int)", "MQFAPConnectionPool.GetSession(MQConnectOptions,MQConnectionSecurityParameters,MQChannelDefinition,String,int,String,String,int,int)", "MQFAPConnectionPool.RemoveSpec(MQConnectionSpecification)", "MQManagedReconnectableThread.ReleaseHconn(ManagedHconn)", "MQProxyMessage.SetTransactional()", "MQProxyQueue.CallConsumer(int,int,int)", "MQProxyQueue.SendConsumerState(bool)", "MQProxyQueue.SetAsyncSelection()", "MQProxyQueue.IsEmpty()", "MQProxyQueue.NotifyConnectionFailure(Exception)", 
                "MQProxyQueue.ResetForReconnect()", "MQProxyQueue.RaiseEvent(int)", "MQProxyQueue.CheckTxnMessage()", "MQProxyQueue.DriveConsumer(ref int)", "MQProxyQueue.MqcbSuspendMC()", "MQProxyQueue.MqcbResumeMC()", "MQProxyQueue.MqcbRegisterMC(MQCBD,MQMessageDescriptor,MQGetMessageOptions)", "MQProxyQueue.MqcbDeRegisterMC(bool,MQCBD)", "MQProxyQueue.DriveEventsMC()", "MQProxyQueue.IsDispatchableQ()", "MQProxyQueue.DeliverMsgs(ref int)", "MQProxyQueue.ValidateMQGMO(MQGetMessageOptions)", "MQProxyQueue.ValidateMQMD(MQMessageDescriptor)", "MQProxyQueue.DriveStop()", "MQProxyQueue.UnsetCallbackOnEmpty()", "MQProxyQueue.CallbackOnEmpty()", 
                "MQProxyQueue.AddCbd(MQCBD)", "MQProxyQueue.RemoveCbd(MQCBD)", "MQProxyQueue.CompareCBD(MQCBD,MQCBD)", "MQProxyQueueManager.CreateProxyQueue()1", "MQProxyQueueManager.FindProxyQueue(int)", "MQProxyQueueManager.SetIdentifier(MQProxyQueue,ManagedHobj,int,int)", "MQProxyQueueManager.DeleteProxyQueue(MQProxyQueue)1", "MQProxyQueueManager.AddMessage(MQTSH)", "MQProxyQueueManager.ReceiveNotification(MQTSH)", "MQProxyQueueManager.CheckClientEmpty()", "MQProxyQueueManager.NotifyConnectionFailure(Exception)", "MQProxyQueueManager.WakeGetters()", "MQProxyQueueManager.CheckTxnMessage()", "MQProxyQueueManager.RaiseEvent(int)", "MQRcvThread.Run()1", "MQRcvThread.ReceiveOneTSH()", 
                "MQRcvThread.ReceiveBuffer()1", "MQRcvThread.SetDisconnecting()1", "MQSession.CheckIfDisconnected()", "MQSession.ProcessReceivedData(MQTSH)", "MQSession.LockRcvExitForTSH(MQTSH)", "MQSession.UnlockRcvExitForTSH(MQTSH)", "MQSession.AllocateTSH(int,int,MQTSH)", "MQSession.AllocateTSH(byte,int,bool,int)", "MQSession.AllocateTSH(int,byte,int,bool,int)", "MQSession.DeliverTSH(MQTSH)", "MQSession.ReceiveAsyncTSH()", "MQSession.AsyncFailureNotify(Exception)", "MQSession.SendTSH(MQTSH)", "MQSession.ReceiveTSH(MQTSH)", "MQSession.DeliverExchangeReply(int,MQTSH)", "MQSession.AllocateRequestEntry()", 
                "MQSession.ReleaseRequestEntry(MQRequestEntry)", "MQSession.StartConversation()", "MQSession.ExchangeTSH(MQTSH)", "MQSession.ReleaseReceivedTSH(MQTSH)", "MQSession.AllocateTshForPut(int)", "MQSession.AllocateTshForPQReqMsgs(int)", "MQSession.AllocateTshForNotification(int)", "MQSession.AllocateAPI(int,int)", "MQSession.InitSendReceiveExits(Boolean)", "MQSession.Disconnect()", "MQSession.SetDisconnected()", "MQSession.InitOAMFlow(MQConnectOptions)", "MQSession.DisableReconnect()", "MQSession.DeliverException(NmqiException,int,int)", "MQSession.QmQuiescing()", "MQSession.ToString()", 
                "MQSession.LoadInfo()", "MQPlainSocket.Read(byte[], int, int)", "MQPlainSocket.Write(byte[], int, int)", "MQPlainSocket.Close()", "MQPlainSocket.Dispose()", "MQEncryptedSocket.ClientValidatingServerCertificate(Object,X509Certificate,X509Chain,SslPolicyErrors)", "MQEncryptedSocket.FixClientCertificate(Object,String,X509CertificateCollection,X509Certificate,String[])", "MQEncryptedSocket.RetrieveAndValidateSSLParams(MQConnectOptions)", "MQEncryptedSocket..Read(byte[], int, int)", "MQEncryptedSocket..Write(byte[], int, int)", "MQEncryptedSocket.Close()", "MQEncryptedSocket.Dispose()", "MQEncryptedSocket.MakeSecuredConnection()", "MQPeerNameMatching.ParseDN(String)", "MQPeerNameMatching.SetValue(String,String)", "MQPeerNameMatching.IsMatchingPeerName(MQPeerNameMatching)", 
                "MQPeerNameMatching.Wequals(String,String)", "MQExternalSourceTracer_MS", "ManagedHconn.EnlistTransaction(NmqiEnvironment env, ManagedHconn hConn)", "ManagedHconn.MQRMIXAOpen()", "ManagedHconn.XAClose()", "ManagedHconn.CleanupTxState()", "ManagedHconn.WaitForInProgressTx()", "ManagedHconn.PulseCommitWait()", "MQFAP.MQPUT(Hconn hConn,Hobj hObj,MQMessage message,MQPutMessageOptions pmo,out int compCode,out int reason)", "MQFAP.MQGET(Hconn hConn,Hobj objectHandle,MQGetMessageOptions gmo,ref MQMessage message,out int compCode, out int reason)", "MQFAP.PerformMsgProcessgingBeforePut(ref MQMessage mqMsg)", "MQFAP.PerformMsgProcessingAfterGet(ref MQMessage mqMsg, byte[] data, int length)", "MQFAP.PerformMsgProcessingAfterPut(ref MQMessage message,byte[] tempMsgBuffer,int bodyCcsid,int encoding,String format)", "BindingsNmqiMQ.MQPUT(Hconn hConn,Hobj hObj,MQMessage message,MQPutMessageOptions pmo,out int compCode,out int reason)", "BindingsNmqiMQ.MQGET(Hconn hConn,Hobj objectHandle,MQGetMessageOptions gmo,ref MQMessage message,out int compCode, out int reason)", "BindingsNmqiMQ.PerformMsgProcessgingBeforePut(ref MQMessage mqMsg)", 
                "BindingsNmqiMQ.PerformMsgProcessingAfterGet(ref MQMessage mqMsg, byte[] data, int length)", "BindingsNmqiMQ.PerformMsgProcessingAfterPut(ref MQMessage message,byte[] tempMsgBuffer,int bodyCcsid,int encoding,String format)", "UnManagedNmqiMQ.MQPUT(Hconn hConn,Hobj hObj,MQMessage message,MQPutMessageOptions pmo,out int compCode,out int reason)", "UnManagedNmqiMQ.MQGET(Hconn hConn,Hobj objectHandle,MQGetMessageOptions gmo,ref MQMessage message,out int compCode, out int reason)", "UnManagedNmqiMQ.PerformMsgProcessgingBeforePut(ref MQMessage mqMsg)", "UnManagedNmqiMQ.PerformMsgProcessingAfterGet(ref MQMessage mqMsg, byte[] data, int length)", "UnManagedNmqiMQ.PerformMsgProcessingAfterPut(ref MQMessage message,byte[] tempMsgBuffer,int bodyCcsid,int encoding,String format)", "XAUnmanagedNmqiMQ.MQPUT(Hconn hConn,Hobj hObj,MQMessage message,MQPutMessageOptions pmo,out int compCode,out int reason)", "XAUnmanagedNmqiMQ.MQGET(Hconn hConn,Hobj objectHandle,MQGetMessageOptions gmo,ref MQMessage message,out int compCode, out int reason)", "XAUnmanagedNmqiMQ.PerformMsgProcessgingBeforePut(ref MQMessage mqMsg)", "XAUnmanagedNmqiMQ.PerformMsgProcessingAfterGet(ref MQMessage mqMsg, byte[] data, int length)", "XAUnmanagedNmqiMQ.PerformMsgProcessingAfterPut(ref MQMessage message,byte[] tempMsgBuffer,int bodyCcsid,int encoding,String format)"
             };
        }
    }
}

